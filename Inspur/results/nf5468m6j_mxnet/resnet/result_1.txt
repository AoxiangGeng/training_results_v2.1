+ echo 'Beginning trial 1 of 5'
Beginning trial 1 of 5
+ docker exec -it image_classification python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants

mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
:::MLLOG {"namespace": "", "time_ms": 1665657860616, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 84}}
:::MLLOG {"namespace": "", "time_ms": 1665657860627, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Inspur", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 89}}
:::MLLOG {"namespace": "", "time_ms": 1665657860627, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 93}}
:::MLLOG {"namespace": "", "time_ms": 1665657860627, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "research", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1665657860628, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "1xNF5468M6J", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 101}}
+ '[' 1 -eq 1 ']'
+ sync
+ sudo /sbin/sysctl vm.drop_caches=3
vm.drop_caches = 3
+ docker exec -it image_classification python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants

mlperf_log_utils.mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1665657874541, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 5}}
+ export SEED=32459
+ SEED=32459
+ docker exec -it --env=BATCHSIZE --env=DALI_CACHE_SIZE --env=DALI_CROP_BUFFER_HINT --env=DALI_DECODER_BUFFER_HINT --env=DALI_DONT_USE_MMAP --env=DALI_EVAL_HW_DECODER_LOAD --env=DALI_EVAL_PREFETCH_QUEUE --env=DALI_EVAL_THREADS --env=DALI_HW_DECODER_LOAD --env=DALI_NORMALIZE_BUFFER_HINT --env=DALI_NVJPEG_MEMPADDING --env=DALI_PREALLOCATE_HEIGHT --env=DALI_PREALLOCATE_WIDTH --env=DALI_PREFETCH_QUEUE --env=DALI_ROI_DECODE --env=DALI_THREADS --env=DALI_TMP_BUFFER_HINT --env=DGXHT --env=DGXNGPU --env=DGXNNODES --env=DGXNSOCKET --env=DGXSOCKETCORES --env=DGXSYSTEM --env=EVAL_OFFSET --env=EVAL_PERIOD --env=HOROVOD_CYCLE_TIME --env=HOROVOD_FUSION_THRESHOLD --env=HOROVOD_NUM_NCCL_STREAMS --env=KVSTORE --env=LABELSMOOTHING --env=LARSETA --env=LR --env=LRSCHED --env=MOM --env=MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD --env=MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD --env=MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD --env=MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD --env=MXNET_CUDNN_WARN_ON_IGNORED_FLAGS --env=MXNET_ENABLE_CUDA_GRAPHS --env=MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD --env=MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD --env=MXNET_EXTENDED_NORMCONV_SUPPORT --env=MXNET_HOROVOD_NUM_GROUPS --env=MXNET_OPTIMIZER_AGGREGATION_SIZE --env=NCCL_SOCKET_IFNAME --env=NETWORK --env=NUMEPOCHS --env=OMPI_MCA_btl --env=OPTIMIZER --env=RUN_NCCL_BW_TEST --env=WALLTIME --env=WARMUP_EPOCHS --env=WD --env=MLPERF_HOST_OS --env=SEED image_classification mpirun --allow-run-as-root --bind-to none --np 24 ./run_and_time.sh
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
running benchmark
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
running benchmark
running benchmark
running benchmark
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
running benchmark
running benchmark
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
STARTING TIMING RUN AT 2022-10-13 10:44:36 AM
running benchmark
running benchmark
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665657890220, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1665657904491, "event_type": "POINT_IN_TIME", "key": "seed", "value": 32459, "metadata": {"file": "train_imagenet.py", "lineno": 173}}
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:45:04] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.12.10+cuda11.6
:::MLLOG {"namespace": "", "time_ms": 1665657917360, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 136, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 327}}
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using [10:45:35Pooled (Naive) StorageManager for CPU
] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199[: Using Pooled (Naive) StorageManager for CPU
10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35[10:45:35] ../src/storage/storage.cc:] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:[199: Using Pooled (Naive) StorageManager for CPU
10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:45:35] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1665657935715, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 78, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935716, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935717, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935718, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935719, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935720, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935721, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935722, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935723, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935724, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935725, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935726, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935727, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935728, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935729, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935748, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935748, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665657935748, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit3_conv3_weight"}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,187 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=11765, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665657937187, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 230}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,188 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=87, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,188 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=43617, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,188 Node[23] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='23', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=23, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=3804, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,188 Node[18] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='18', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=18, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=35878, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,189 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=58947, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665657937188, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1665657937189, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 711}}
:::MLLOG {"namespace": "", "time_ms": 1665657937189, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 712}}
:::MLLOG {"namespace": "", "time_ms": 1665657937189, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 713}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,189 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=29122, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665657937189, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 136, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1176}}
:::MLLOG {"namespace": "", "time_ms": 1665657937189, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1177}}
:::MLLOG {"namespace": "", "time_ms": 1665657937189, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1178}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,189 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=23968, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665657937189, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1179}}
:::MLLOG {"namespace": "", "time_ms": 1665657937189, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1180}}
:::MLLOG {"namespace": "", "time_ms": 1665657937189, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1181}}
:::MLLOG {"namespace": "", "time_ms": 1665657937189, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1182}}
:::MLLOG {"namespace": "", "time_ms": 1665657937190, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1183}}
:::MLLOG {"namespace": "", "time_ms": 1665657937190, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1184}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,189 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=65401, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665657937190, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1190}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,190 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='15', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=15, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=57437, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665657937190, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1192}}
:::MLLOG {"namespace": "", "time_ms": 1665657937190, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1194}}
:::MLLOG {"namespace": "", "time_ms": 1665657937190, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1196}}
:::MLLOG {"namespace": "", "time_ms": 1665657937190, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1197}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,190 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='13', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=13, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7479, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665657937190, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1198}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,190 Node[21] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='21', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=21, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=9573, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,190 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='11', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=11, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=46296, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665657937190, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1199}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,190 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='12', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=12, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=57090, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,190 Node[16] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='16', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=16, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15666, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,190 Node[20] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='20', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=20, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=56718, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,191 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='14', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=14, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=42580, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,191 Node[17] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='17', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=17, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=9305, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,191 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='9', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=9, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=17410, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,192 Node[22] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='22', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=22, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=14528, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,193 Node[19] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='19', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=19, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=63823, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,193 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=65041, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,194 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='8', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=8, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=36517, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 10:45:37,194 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='10', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=10, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=15202, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665657954260, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1348}}
:::MLLOG {"namespace": "", "time_ms": 1665657954260, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 504}}
:::MLLOG {"namespace": "", "time_ms": 1665657954492, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 526}}
:::MLLOG {"namespace": "", "time_ms": 1665657954492, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 902, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1665657954492, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 1}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:45:58,716 Node[0] Epoch[0] Batch [0-20]	Speed: 30134.15 samples/sec	accuracy=nan
2022-10-13 10:46:01,020 Node[0] Epoch[0] Batch [20-40]	Speed: 28340.16 samples/sec	accuracy=nan
2022-10-13 10:46:03,228 Node[0] Epoch[0] Batch [40-60]	Speed: 29563.19 samples/sec	accuracy=nan
2022-10-13 10:46:05,410 Node[0] Epoch[0] Batch [60-80]	Speed: 29920.21 samples/sec	accuracy=nan
2022-10-13 10:46:07,604 Node[0] Epoch[0] Batch [80-100]	Speed: 29746.35 samples/sec	accuracy=nan
2022-10-13 10:46:09,705 Node[0] Epoch[0] Batch [100-120]	Speed: 31070.64 samples/sec	accuracy=nan
2022-10-13 10:46:11,997 Node[0] Epoch[0] Batch [120-140]	Speed: 28484.55 samples/sec	accuracy=nan
2022-10-13 10:46:14,091 Node[0] Epoch[0] Batch [140-160]	Speed: 31171.37 samples/sec	accuracy=nan
2022-10-13 10:46:16,384 Node[0] Epoch[0] Batch [160-180]	Speed: 28478.04 samples/sec	accuracy=nan
2022-10-13 10:46:18,583 Node[0] Epoch[0] Batch [180-200]	Speed: 29678.80 samples/sec	accuracy=nan
2022-10-13 10:46:20,785 Node[0] Epoch[0] Batch [200-220]	Speed: 29648.88 samples/sec	accuracy=nan
2022-10-13 10:46:22,983 Node[0] Epoch[0] Batch [220-240]	Speed: 29697.53 samples/sec	accuracy=nan
2022-10-13 10:46:25,190 Node[0] Epoch[0] Batch [240-260]	Speed: 29585.88 samples/sec	accuracy=nan
2022-10-13 10:46:27,387 Node[0] Epoch[0] Batch [260-280]	Speed: 29709.92 samples/sec	accuracy=nan
2022-10-13 10:46:29,581 Node[0] Epoch[0] Batch [280-300]	Speed: 29746.31 samples/sec	accuracy=nan
2022-10-13 10:46:31,680 Node[0] Epoch[0] Batch [300-320]	Speed: 31112.12 samples/sec	accuracy=nan
2022-10-13 10:46:33,986 Node[0] Epoch[0] Batch [320-340]	Speed: 28300.75 samples/sec	accuracy=nan
2022-10-13 10:46:36,191 Node[0] Epoch[0] Batch [340-360]	Speed: 29611.12 samples/sec	accuracy=nan
2022-10-13 10:46:38,365 Node[0] Epoch[0] Batch [360-380]	Speed: 30028.14 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665657999643, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 1}}
2022-10-13 10:46:39,644 Node[0] Epoch[0] Time cost=45.152
:::MLLOG {"namespace": "", "time_ms": 1665657999645, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 28374.575538828107}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1665657999645, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 28374.575538828107, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665657999645, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 2}}
2022-10-13 10:46:41,888 Node[0] Epoch[1] Batch [0-20]	Speed: 30607.75 samples/sec	accuracy=nan
2022-10-13 10:46:44,021 Node[0] Epoch[1] Batch [20-40]	Speed: 30597.71 samples/sec	accuracy=nan
2022-10-13 10:46:46,150 Node[0] Epoch[1] Batch [40-60]	Speed: 30665.83 samples/sec	accuracy=nan
2022-10-13 10:46:48,278 Node[0] Epoch[1] Batch [60-80]	Speed: 30676.57 samples/sec	accuracy=nan
2022-10-13 10:46:50,407 Node[0] Epoch[1] Batch [80-100]	Speed: 30663.80 samples/sec	accuracy=nan
2022-10-13 10:46:52,539 Node[0] Epoch[1] Batch [100-120]	Speed: 30621.99 samples/sec	accuracy=nan
2022-10-13 10:46:54,671 Node[0] Epoch[1] Batch [120-140]	Speed: 30616.16 samples/sec	accuracy=nan
2022-10-13 10:46:56,800 Node[0] Epoch[1] Batch [140-160]	Speed: 30661.72 samples/sec	accuracy=nan
2022-10-13 10:46:58,928 Node[0] Epoch[1] Batch [160-180]	Speed: 30672.56 samples/sec	accuracy=nan
2022-10-13 10:47:01,059 Node[0] Epoch[1] Batch [180-200]	Speed: 30630.51 samples/sec	accuracy=nan
2022-10-13 10:47:03,189 Node[0] Epoch[1] Batch [200-220]	Speed: 30656.58 samples/sec	accuracy=nan
2022-10-13 10:47:05,316 Node[0] Epoch[1] Batch [220-240]	Speed: 30689.66 samples/sec	accuracy=nan
2022-10-13 10:47:07,448 Node[0] Epoch[1] Batch [240-260]	Speed: 30613.08 samples/sec	accuracy=nan
2022-10-13 10:47:09,576 Node[0] Epoch[1] Batch [260-280]	Speed: 30681.47 samples/sec	accuracy=nan
2022-10-13 10:47:11,520 Node[0] Epoch[1] Batch [280-300]	Speed: 33573.06 samples/sec	accuracy=nan
2022-10-13 10:47:13,839 Node[0] Epoch[1] Batch [300-320]	Speed: 28154.08 samples/sec	accuracy=nan
2022-10-13 10:47:15,968 Node[0] Epoch[1] Batch [320-340]	Speed: 30658.51 samples/sec	accuracy=nan
2022-10-13 10:47:18,100 Node[0] Epoch[1] Batch [340-360]	Speed: 30619.83 samples/sec	accuracy=nan
2022-10-13 10:47:20,228 Node[0] Epoch[1] Batch [360-380]	Speed: 30675.61 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658041506, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 2}}
2022-10-13 10:47:21,506 Node[0] Epoch[1] Time cost=41.861
:::MLLOG {"namespace": "", "time_ms": 1665658041507, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30605.01590976138}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1665658041507, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30605.01590976138, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658041507, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 3}}
2022-10-13 10:47:23,748 Node[0] Epoch[2] Batch [0-20]	Speed: 30650.11 samples/sec	accuracy=nan
2022-10-13 10:47:25,884 Node[0] Epoch[2] Batch [20-40]	Speed: 30566.01 samples/sec	accuracy=nan
2022-10-13 10:47:28,010 Node[0] Epoch[2] Batch [40-60]	Speed: 30700.54 samples/sec	accuracy=nan
2022-10-13 10:47:30,137 Node[0] Epoch[2] Batch [60-80]	Speed: 30689.34 samples/sec	accuracy=nan
2022-10-13 10:47:32,170 Node[0] Epoch[2] Batch [80-100]	Speed: 32110.16 samples/sec	accuracy=nan
2022-10-13 10:47:34,397 Node[0] Epoch[2] Batch [100-120]	Speed: 29322.79 samples/sec	accuracy=nan
2022-10-13 10:47:36,534 Node[0] Epoch[2] Batch [120-140]	Speed: 30537.72 samples/sec	accuracy=nan
2022-10-13 10:47:38,669 Node[0] Epoch[2] Batch [140-160]	Speed: 30574.43 samples/sec	accuracy=nan
2022-10-13 10:47:40,795 Node[0] Epoch[2] Batch [160-180]	Speed: 30706.87 samples/sec	accuracy=nan
2022-10-13 10:47:42,927 Node[0] Epoch[2] Batch [180-200]	Speed: 30623.23 samples/sec	accuracy=nan
2022-10-13 10:47:45,055 Node[0] Epoch[2] Batch [200-220]	Speed: 30670.83 samples/sec	accuracy=nan
2022-10-13 10:47:47,190 Node[0] Epoch[2] Batch [220-240]	Speed: 30584.00 samples/sec	accuracy=nan
2022-10-13 10:47:49,320 Node[0] Epoch[2] Batch [240-260]	Speed: 30643.68 samples/sec	accuracy=nan
2022-10-13 10:47:51,449 Node[0] Epoch[2] Batch [260-280]	Speed: 30664.66 samples/sec	accuracy=nan
2022-10-13 10:47:53,580 Node[0] Epoch[2] Batch [280-300]	Speed: 30629.83 samples/sec	accuracy=nan
2022-10-13 10:47:55,713 Node[0] Epoch[2] Batch [300-320]	Speed: 30603.97 samples/sec	accuracy=nan
2022-10-13 10:47:57,846 Node[0] Epoch[2] Batch [320-340]	Speed: 30613.56 samples/sec	accuracy=nan
2022-10-13 10:47:59,976 Node[0] Epoch[2] Batch [340-360]	Speed: 30645.07 samples/sec	accuracy=nan
2022-10-13 10:48:02,103 Node[0] Epoch[2] Batch [360-380]	Speed: 30689.67 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658083376, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 3}}
2022-10-13 10:48:03,376 Node[0] Epoch[2] Time cost=41.869
:::MLLOG {"namespace": "", "time_ms": 1665658083376, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30599.366032614427}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1665658083376, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30599.366032614427, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[8] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[5] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[7] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[4] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[9] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[3] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[6] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[2] DALI iterator does not support resetting while epoch is not finished. Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1665658083477, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[10] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[11] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[1] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[13] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[12] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[23] DALI iterator does not support resetting while epoch is not finished. Ignoring...
2022-10-13 10:48:03,477 Node[0] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,477 Node[14] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,478 Node[22] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,478 Node[15] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,478 Node[21] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,478 Node[16] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,478 Node[17] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,478 Node[19] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,478 Node[20] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 10:48:03,478 Node[18] DALI iterator does not support resetting while epoch is not finished. Ignoring...
2022-10-13 10:48:05,315 Node[0] Epoch[2] Validation-accuracy=0.281805
2022-10-13 10:48:05,315 Node[0] Epoch[2] Validation-correct-count=587.000000
2022-10-13 10:48:05,315 Node[0] Epoch[2] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1665658085319, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1665658085319, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.28836, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1665658085319, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1665658085319, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 4, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665658085320, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 4}}
2022-10-13 10:48:07,630 Node[0] Epoch[3] Batch [0-20]	Speed: 28694.99 samples/sec	accuracy=nan
2022-10-13 10:48:09,765 Node[0] Epoch[3] Batch [20-40]	Speed: 30575.03 samples/sec	accuracy=nan
2022-10-13 10:48:11,890 Node[0] Epoch[3] Batch [40-60]	Speed: 30717.09 samples/sec	accuracy=nan
2022-10-13 10:48:14,016 Node[0] Epoch[3] Batch [60-80]	Speed: 30712.71 samples/sec	accuracy=nan
2022-10-13 10:48:16,148 Node[0] Epoch[3] Batch [80-100]	Speed: 30615.13 samples/sec	accuracy=nan
2022-10-13 10:48:18,280 Node[0] Epoch[3] Batch [100-120]	Speed: 30616.89 samples/sec	accuracy=nan
2022-10-13 10:48:20,408 Node[0] Epoch[3] Batch [120-140]	Speed: 30677.67 samples/sec	accuracy=nan
2022-10-13 10:48:22,539 Node[0] Epoch[3] Batch [140-160]	Speed: 30630.25 samples/sec	accuracy=nan
2022-10-13 10:48:24,667 Node[0] Epoch[3] Batch [160-180]	Speed: 30677.51 samples/sec	accuracy=nan
2022-10-13 10:48:26,798 Node[0] Epoch[3] Batch [180-200]	Speed: 30638.21 samples/sec	accuracy=nan
2022-10-13 10:48:28,928 Node[0] Epoch[3] Batch [200-220]	Speed: 30643.04 samples/sec	accuracy=nan
2022-10-13 10:48:31,057 Node[0] Epoch[3] Batch [220-240]	Speed: 30669.20 samples/sec	accuracy=nan
2022-10-13 10:48:33,185 Node[0] Epoch[3] Batch [240-260]	Speed: 30664.64 samples/sec	accuracy=nan
2022-10-13 10:48:35,320 Node[0] Epoch[3] Batch [260-280]	Speed: 30579.74 samples/sec	accuracy=nan
2022-10-13 10:48:37,453 Node[0] Epoch[3] Batch [280-300]	Speed: 30605.52 samples/sec	accuracy=nan
2022-10-13 10:48:39,584 Node[0] Epoch[3] Batch [300-320]	Speed: 30632.48 samples/sec	accuracy=nan
2022-10-13 10:48:41,625 Node[0] Epoch[3] Batch [320-340]	Speed: 31987.33 samples/sec	accuracy=nan
2022-10-13 10:48:43,853 Node[0] Epoch[3] Batch [340-360]	Speed: 29305.72 samples/sec	accuracy=nan
2022-10-13 10:48:45,979 Node[0] Epoch[3] Batch [360-380]	Speed: 30699.10 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658127251, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 4}}
2022-10-13 10:48:47,251 Node[0] Epoch[3] Time cost=41.932
:::MLLOG {"namespace": "", "time_ms": 1665658127251, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30553.76702764883}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665658127252, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30553.76702764883, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658127252, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 5}}
2022-10-13 10:48:49,496 Node[0] Epoch[4] Batch [0-20]	Speed: 30675.80 samples/sec	accuracy=nan
2022-10-13 10:48:51,625 Node[0] Epoch[4] Batch [20-40]	Speed: 30652.55 samples/sec	accuracy=nan
2022-10-13 10:48:53,663 Node[0] Epoch[4] Batch [40-60]	Speed: 32042.47 samples/sec	accuracy=nan
2022-10-13 10:48:55,886 Node[0] Epoch[4] Batch [60-80]	Speed: 29366.86 samples/sec	accuracy=nan
2022-10-13 10:48:58,018 Node[0] Epoch[4] Batch [80-100]	Speed: 30618.91 samples/sec	accuracy=nan
2022-10-13 10:49:00,151 Node[0] Epoch[4] Batch [100-120]	Speed: 30601.67 samples/sec	accuracy=nan
2022-10-13 10:49:02,283 Node[0] Epoch[4] Batch [120-140]	Speed: 30621.93 samples/sec	accuracy=nan
2022-10-13 10:49:04,413 Node[0] Epoch[4] Batch [140-160]	Speed: 30638.32 samples/sec	accuracy=nan
2022-10-13 10:49:06,544 Node[0] Epoch[4] Batch [160-180]	Speed: 30643.59 samples/sec	accuracy=nan
2022-10-13 10:49:08,676 Node[0] Epoch[4] Batch [180-200]	Speed: 30607.37 samples/sec	accuracy=nan
2022-10-13 10:49:10,809 Node[0] Epoch[4] Batch [200-220]	Speed: 30606.36 samples/sec	accuracy=nan
2022-10-13 10:49:12,938 Node[0] Epoch[4] Batch [220-240]	Speed: 30672.10 samples/sec	accuracy=nan
2022-10-13 10:49:15,067 Node[0] Epoch[4] Batch [240-260]	Speed: 30651.62 samples/sec	accuracy=nan
2022-10-13 10:49:17,204 Node[0] Epoch[4] Batch [260-280]	Speed: 30556.46 samples/sec	accuracy=nan
2022-10-13 10:49:19,335 Node[0] Epoch[4] Batch [280-300]	Speed: 30636.18 samples/sec	accuracy=nan
2022-10-13 10:49:21,463 Node[0] Epoch[4] Batch [300-320]	Speed: 30672.33 samples/sec	accuracy=nan
2022-10-13 10:49:23,591 Node[0] Epoch[4] Batch [320-340]	Speed: 30680.87 samples/sec	accuracy=nan
2022-10-13 10:49:25,723 Node[0] Epoch[4] Batch [340-360]	Speed: 30617.37 samples/sec	accuracy=nan
2022-10-13 10:49:27,853 Node[0] Epoch[4] Batch [360-380]	Speed: 30650.35 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658169131, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 5}}
2022-10-13 10:49:29,131 Node[0] Epoch[4] Time cost=41.879
:::MLLOG {"namespace": "", "time_ms": 1665658169131, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30591.827457298754}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1665658169131, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30591.827457298754, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658169132, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 6}}
2022-10-13 10:49:31,375 Node[0] Epoch[5] Batch [0-20]	Speed: 30617.83 samples/sec	accuracy=nan
2022-10-13 10:49:33,506 Node[0] Epoch[5] Batch [20-40]	Speed: 30626.45 samples/sec	accuracy=nan
2022-10-13 10:49:35,634 Node[0] Epoch[5] Batch [40-60]	Speed: 30670.58 samples/sec	accuracy=nan
2022-10-13 10:49:37,763 Node[0] Epoch[5] Batch [60-80]	Speed: 30664.50 samples/sec	accuracy=nan
2022-10-13 10:49:39,892 Node[0] Epoch[5] Batch [80-100]	Speed: 30666.36 samples/sec	accuracy=nan
2022-10-13 10:49:42,023 Node[0] Epoch[5] Batch [100-120]	Speed: 30631.82 samples/sec	accuracy=nan
2022-10-13 10:49:44,154 Node[0] Epoch[5] Batch [120-140]	Speed: 30637.59 samples/sec	accuracy=nan
2022-10-13 10:49:46,284 Node[0] Epoch[5] Batch [140-160]	Speed: 30646.20 samples/sec	accuracy=nan
2022-10-13 10:49:48,413 Node[0] Epoch[5] Batch [160-180]	Speed: 30654.65 samples/sec	accuracy=nan
2022-10-13 10:49:50,546 Node[0] Epoch[5] Batch [180-200]	Speed: 30618.55 samples/sec	accuracy=nan
2022-10-13 10:49:52,679 Node[0] Epoch[5] Batch [200-220]	Speed: 30595.44 samples/sec	accuracy=nan
2022-10-13 10:49:54,809 Node[0] Epoch[5] Batch [220-240]	Speed: 30652.48 samples/sec	accuracy=nan
2022-10-13 10:49:56,941 Node[0] Epoch[5] Batch [240-260]	Speed: 30611.81 samples/sec	accuracy=nan
2022-10-13 10:49:59,074 Node[0] Epoch[5] Batch [260-280]	Speed: 30602.85 samples/sec	accuracy=nan
2022-10-13 10:50:01,204 Node[0] Epoch[5] Batch [280-300]	Speed: 30660.79 samples/sec	accuracy=nan
2022-10-13 10:50:03,331 Node[0] Epoch[5] Batch [300-320]	Speed: 30682.02 samples/sec	accuracy=nan
2022-10-13 10:50:05,456 Node[0] Epoch[5] Batch [320-340]	Speed: 30727.47 samples/sec	accuracy=nan
2022-10-13 10:50:07,587 Node[0] Epoch[5] Batch [340-360]	Speed: 30622.30 samples/sec	accuracy=nan
2022-10-13 10:50:09,714 Node[0] Epoch[5] Batch [360-380]	Speed: 30696.68 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658210992, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 6}}
2022-10-13 10:50:10,993 Node[0] Epoch[5] Time cost=41.861
:::MLLOG {"namespace": "", "time_ms": 1665658210993, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30605.438963317934}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1665658210993, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30605.438963317934, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658210993, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 7}}
2022-10-13 10:50:13,238 Node[0] Epoch[6] Batch [0-20]	Speed: 30576.05 samples/sec	accuracy=nan
2022-10-13 10:50:15,373 Node[0] Epoch[6] Batch [20-40]	Speed: 30574.31 samples/sec	accuracy=nan
2022-10-13 10:50:17,506 Node[0] Epoch[6] Batch [40-60]	Speed: 30608.98 samples/sec	accuracy=nan
2022-10-13 10:50:19,634 Node[0] Epoch[6] Batch [60-80]	Speed: 30674.56 samples/sec	accuracy=nan
2022-10-13 10:50:21,765 Node[0] Epoch[6] Batch [80-100]	Speed: 30631.20 samples/sec	accuracy=nan
2022-10-13 10:50:23,800 Node[0] Epoch[6] Batch [100-120]	Speed: 32085.96 samples/sec	accuracy=nan
2022-10-13 10:50:26,035 Node[0] Epoch[6] Batch [120-140]	Speed: 29206.66 samples/sec	accuracy=nan
2022-10-13 10:50:28,166 Node[0] Epoch[6] Batch [140-160]	Speed: 30633.25 samples/sec	accuracy=nan
2022-10-13 10:50:30,294 Node[0] Epoch[6] Batch [160-180]	Speed: 30670.37 samples/sec	accuracy=nan
2022-10-13 10:50:32,424 Node[0] Epoch[6] Batch [180-200]	Speed: 30655.12 samples/sec	accuracy=nan
2022-10-13 10:50:34,555 Node[0] Epoch[6] Batch [200-220]	Speed: 30630.60 samples/sec	accuracy=nan
2022-10-13 10:50:36,681 Node[0] Epoch[6] Batch [220-240]	Speed: 30703.66 samples/sec	accuracy=nan
2022-10-13 10:50:38,813 Node[0] Epoch[6] Batch [240-260]	Speed: 30618.40 samples/sec	accuracy=nan
2022-10-13 10:50:40,948 Node[0] Epoch[6] Batch [260-280]	Speed: 30577.39 samples/sec	accuracy=nan
2022-10-13 10:50:43,084 Node[0] Epoch[6] Batch [280-300]	Speed: 30569.89 samples/sec	accuracy=nan
2022-10-13 10:50:45,121 Node[0] Epoch[6] Batch [300-320]	Speed: 32032.20 samples/sec	accuracy=nan
2022-10-13 10:50:47,341 Node[0] Epoch[6] Batch [320-340]	Speed: 29412.89 samples/sec	accuracy=nan
2022-10-13 10:50:49,473 Node[0] Epoch[6] Batch [340-360]	Speed: 30614.09 samples/sec	accuracy=nan
2022-10-13 10:50:51,604 Node[0] Epoch[6] Batch [360-380]	Speed: 30641.08 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658252878, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 7}}
2022-10-13 10:50:52,878 Node[0] Epoch[6] Time cost=41.885
:::MLLOG {"namespace": "", "time_ms": 1665658252879, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30587.512587359146}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1665658252879, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30587.512587359146, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658252979, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
2022-10-13 10:50:53,757 Node[0] Epoch[6] Validation-accuracy=0.473836
2022-10-13 10:50:53,758 Node[0] Epoch[6] Validation-correct-count=987.000000
2022-10-13 10:50:53,758 Node[0] Epoch[6] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1665658253819, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1665658253819, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.4696, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1665658253820, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665658253821, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665658253822, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 8}}
2022-10-13 10:50:56,075 Node[0] Epoch[7] Batch [0-20]	Speed: 29315.45 samples/sec	accuracy=nan
2022-10-13 10:50:58,208 Node[0] Epoch[7] Batch [20-40]	Speed: 30609.67 samples/sec	accuracy=nan
2022-10-13 10:51:00,331 Node[0] Epoch[7] Batch [40-60]	Speed: 30734.44 samples/sec	accuracy=nan
2022-10-13 10:51:02,459 Node[0] Epoch[7] Batch [60-80]	Speed: 30689.93 samples/sec	accuracy=nan
2022-10-13 10:51:04,585 Node[0] Epoch[7] Batch [80-100]	Speed: 30695.32 samples/sec	accuracy=nan
2022-10-13 10:51:06,726 Node[0] Epoch[7] Batch [100-120]	Speed: 30498.08 samples/sec	accuracy=nan
2022-10-13 10:51:08,851 Node[0] Epoch[7] Batch [120-140]	Speed: 30716.82 samples/sec	accuracy=nan
2022-10-13 10:51:10,885 Node[0] Epoch[7] Batch [140-160]	Speed: 32100.21 samples/sec	accuracy=nan
2022-10-13 10:51:13,108 Node[0] Epoch[7] Batch [160-180]	Speed: 29356.97 samples/sec	accuracy=nan
2022-10-13 10:51:15,240 Node[0] Epoch[7] Batch [180-200]	Speed: 30627.48 samples/sec	accuracy=nan
2022-10-13 10:51:17,367 Node[0] Epoch[7] Batch [200-220]	Speed: 30682.04 samples/sec	accuracy=nan
2022-10-13 10:51:19,407 Node[0] Epoch[7] Batch [220-240]	Speed: 32004.65 samples/sec	accuracy=nan
2022-10-13 10:51:21,626 Node[0] Epoch[7] Batch [240-260]	Speed: 29418.61 samples/sec	accuracy=nan
2022-10-13 10:51:23,763 Node[0] Epoch[7] Batch [260-280]	Speed: 30552.45 samples/sec	accuracy=nan
2022-10-13 10:51:25,888 Node[0] Epoch[7] Batch [280-300]	Speed: 30715.15 samples/sec	accuracy=nan
2022-10-13 10:51:28,023 Node[0] Epoch[7] Batch [300-320]	Speed: 30570.91 samples/sec	accuracy=nan
2022-10-13 10:51:30,147 Node[0] Epoch[7] Batch [320-340]	Speed: 30739.90 samples/sec	accuracy=nan
2022-10-13 10:51:32,276 Node[0] Epoch[7] Batch [340-360]	Speed: 30656.31 samples/sec	accuracy=nan
2022-10-13 10:51:34,404 Node[0] Epoch[7] Batch [360-380]	Speed: 30675.50 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658295682, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 8}}
2022-10-13 10:51:35,682 Node[0] Epoch[7] Time cost=41.860
:::MLLOG {"namespace": "", "time_ms": 1665658295682, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30605.97411580318}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1665658295682, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30605.97411580318, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658295682, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 9}}
2022-10-13 10:51:37,933 Node[0] Epoch[8] Batch [0-20]	Speed: 30527.22 samples/sec	accuracy=nan
2022-10-13 10:51:40,067 Node[0] Epoch[8] Batch [20-40]	Speed: 30592.01 samples/sec	accuracy=nan
2022-10-13 10:51:42,196 Node[0] Epoch[8] Batch [40-60]	Speed: 30658.69 samples/sec	accuracy=nan
2022-10-13 10:51:44,329 Node[0] Epoch[8] Batch [60-80]	Speed: 30608.57 samples/sec	accuracy=nan
2022-10-13 10:51:46,464 Node[0] Epoch[8] Batch [80-100]	Speed: 30581.29 samples/sec	accuracy=nan
2022-10-13 10:51:48,593 Node[0] Epoch[8] Batch [100-120]	Speed: 30652.26 samples/sec	accuracy=nan
2022-10-13 10:51:50,721 Node[0] Epoch[8] Batch [120-140]	Speed: 30675.60 samples/sec	accuracy=nan
2022-10-13 10:51:52,854 Node[0] Epoch[8] Batch [140-160]	Speed: 30608.58 samples/sec	accuracy=nan
2022-10-13 10:51:54,980 Node[0] Epoch[8] Batch [160-180]	Speed: 30701.86 samples/sec	accuracy=nan
2022-10-13 10:51:57,109 Node[0] Epoch[8] Batch [180-200]	Speed: 30663.27 samples/sec	accuracy=nan
2022-10-13 10:51:59,241 Node[0] Epoch[8] Batch [200-220]	Speed: 30621.56 samples/sec	accuracy=nan
2022-10-13 10:52:01,366 Node[0] Epoch[8] Batch [220-240]	Speed: 30725.23 samples/sec	accuracy=nan
2022-10-13 10:52:03,493 Node[0] Epoch[8] Batch [240-260]	Speed: 30688.04 samples/sec	accuracy=nan
2022-10-13 10:52:05,625 Node[0] Epoch[8] Batch [260-280]	Speed: 30616.38 samples/sec	accuracy=nan
2022-10-13 10:52:07,754 Node[0] Epoch[8] Batch [280-300]	Speed: 30664.76 samples/sec	accuracy=nan
2022-10-13 10:52:09,886 Node[0] Epoch[8] Batch [300-320]	Speed: 30616.64 samples/sec	accuracy=nan
2022-10-13 10:52:12,017 Node[0] Epoch[8] Batch [320-340]	Speed: 30629.54 samples/sec	accuracy=nan
2022-10-13 10:52:14,150 Node[0] Epoch[8] Batch [340-360]	Speed: 30606.12 samples/sec	accuracy=nan
2022-10-13 10:52:16,283 Node[0] Epoch[8] Batch [360-380]	Speed: 30617.92 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658337553, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 9}}
2022-10-13 10:52:17,553 Node[0] Epoch[8] Time cost=41.871
:::MLLOG {"namespace": "", "time_ms": 1665658337553, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30598.30613971573}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1665658337553, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30598.30613971573, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658337553, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 10}}
2022-10-13 10:52:19,802 Node[0] Epoch[9] Batch [0-20]	Speed: 30597.71 samples/sec	accuracy=nan
2022-10-13 10:52:21,931 Node[0] Epoch[9] Batch [20-40]	Speed: 30665.27 samples/sec	accuracy=nan
2022-10-13 10:52:24,061 Node[0] Epoch[9] Batch [40-60]	Speed: 30643.75 samples/sec	accuracy=nan
2022-10-13 10:52:26,193 Node[0] Epoch[9] Batch [60-80]	Speed: 30622.60 samples/sec	accuracy=nan
2022-10-13 10:52:28,320 Node[0] Epoch[9] Batch [80-100]	Speed: 30686.52 samples/sec	accuracy=nan
2022-10-13 10:52:30,452 Node[0] Epoch[9] Batch [100-120]	Speed: 30624.20 samples/sec	accuracy=nan
2022-10-13 10:52:32,581 Node[0] Epoch[9] Batch [120-140]	Speed: 30655.71 samples/sec	accuracy=nan
2022-10-13 10:52:34,719 Node[0] Epoch[9] Batch [140-160]	Speed: 30534.21 samples/sec	accuracy=nan
2022-10-13 10:52:36,844 Node[0] Epoch[9] Batch [160-180]	Speed: 30719.90 samples/sec	accuracy=nan
2022-10-13 10:52:38,978 Node[0] Epoch[9] Batch [180-200]	Speed: 30590.21 samples/sec	accuracy=nan
2022-10-13 10:52:41,107 Node[0] Epoch[9] Batch [200-220]	Speed: 30665.55 samples/sec	accuracy=nan
2022-10-13 10:52:43,238 Node[0] Epoch[9] Batch [220-240]	Speed: 30640.96 samples/sec	accuracy=nan
2022-10-13 10:52:45,366 Node[0] Epoch[9] Batch [240-260]	Speed: 30670.36 samples/sec	accuracy=nan
2022-10-13 10:52:47,493 Node[0] Epoch[9] Batch [260-280]	Speed: 30687.11 samples/sec	accuracy=nan
2022-10-13 10:52:49,622 Node[0] Epoch[9] Batch [280-300]	Speed: 30666.47 samples/sec	accuracy=nan
2022-10-13 10:52:51,756 Node[0] Epoch[9] Batch [300-320]	Speed: 30589.46 samples/sec	accuracy=nan
2022-10-13 10:52:53,888 Node[0] Epoch[9] Batch [320-340]	Speed: 30619.98 samples/sec	accuracy=nan
2022-10-13 10:52:56,016 Node[0] Epoch[9] Batch [340-360]	Speed: 30670.48 samples/sec	accuracy=nan
2022-10-13 10:52:58,148 Node[0] Epoch[9] Batch [360-380]	Speed: 30631.13 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658379421, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 10}}
2022-10-13 10:52:59,421 Node[0] Epoch[9] Time cost=41.868
:::MLLOG {"namespace": "", "time_ms": 1665658379421, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30600.088641837378}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1665658379421, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30600.088641837378, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658379422, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 11}}
2022-10-13 10:53:01,661 Node[0] Epoch[10] Batch [0-20]	Speed: 30704.95 samples/sec	accuracy=nan
2022-10-13 10:53:03,793 Node[0] Epoch[10] Batch [20-40]	Speed: 30629.78 samples/sec	accuracy=nan
2022-10-13 10:53:05,925 Node[0] Epoch[10] Batch [40-60]	Speed: 30609.94 samples/sec	accuracy=nan
2022-10-13 10:53:08,054 Node[0] Epoch[10] Batch [60-80]	Speed: 30673.75 samples/sec	accuracy=nan
2022-10-13 10:53:10,185 Node[0] Epoch[10] Batch [80-100]	Speed: 30627.46 samples/sec	accuracy=nan
2022-10-13 10:53:12,320 Node[0] Epoch[10] Batch [100-120]	Speed: 30577.18 samples/sec	accuracy=nan
2022-10-13 10:53:14,448 Node[0] Epoch[10] Batch [120-140]	Speed: 30676.14 samples/sec	accuracy=nan
2022-10-13 10:53:16,576 Node[0] Epoch[10] Batch [140-160]	Speed: 30677.72 samples/sec	accuracy=nan
2022-10-13 10:53:18,707 Node[0] Epoch[10] Batch [160-180]	Speed: 30630.31 samples/sec	accuracy=nan
2022-10-13 10:53:20,840 Node[0] Epoch[10] Batch [180-200]	Speed: 30605.17 samples/sec	accuracy=nan
2022-10-13 10:53:22,969 Node[0] Epoch[10] Batch [200-220]	Speed: 30657.93 samples/sec	accuracy=nan
2022-10-13 10:53:25,101 Node[0] Epoch[10] Batch [220-240]	Speed: 30630.21 samples/sec	accuracy=nan
2022-10-13 10:53:27,229 Node[0] Epoch[10] Batch [240-260]	Speed: 30669.67 samples/sec	accuracy=nan
2022-10-13 10:53:29,360 Node[0] Epoch[10] Batch [260-280]	Speed: 30637.35 samples/sec	accuracy=nan
2022-10-13 10:53:31,487 Node[0] Epoch[10] Batch [280-300]	Speed: 30685.68 samples/sec	accuracy=nan
2022-10-13 10:53:33,621 Node[0] Epoch[10] Batch [300-320]	Speed: 30597.21 samples/sec	accuracy=nan
2022-10-13 10:53:35,751 Node[0] Epoch[10] Batch [320-340]	Speed: 30641.92 samples/sec	accuracy=nan
2022-10-13 10:53:37,884 Node[0] Epoch[10] Batch [340-360]	Speed: 30603.26 samples/sec	accuracy=nan
2022-10-13 10:53:40,018 Node[0] Epoch[10] Batch [360-380]	Speed: 30600.09 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658421296, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 11}}
2022-10-13 10:53:41,296 Node[0] Epoch[10] Time cost=41.875
:::MLLOG {"namespace": "", "time_ms": 1665658421296, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30595.312944276808}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1665658421297, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30595.312944276808, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658421398, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
2022-10-13 10:53:42,201 Node[0] Epoch[10] Validation-accuracy=0.544626
2022-10-13 10:53:42,201 Node[0] Epoch[10] Validation-correct-count=1135.000000
2022-10-13 10:53:42,201 Node[0] Epoch[10] Validation-total-count=2084.000000
:::MLLOG {"namespace": "", "time_ms": 1665658422209, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1665658422209, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.5339, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1665658422210, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1665658422210, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 12, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665658422210, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 12}}
2022-10-13 10:53:44,490 Node[0] Epoch[11] Batch [0-20]	Speed: 29053.44 samples/sec	accuracy=nan
2022-10-13 10:53:46,620 Node[0] Epoch[11] Batch [20-40]	Speed: 30652.10 samples/sec	accuracy=nan
2022-10-13 10:53:48,750 Node[0] Epoch[11] Batch [40-60]	Speed: 30642.35 samples/sec	accuracy=nan
2022-10-13 10:53:50,885 Node[0] Epoch[11] Batch [60-80]	Speed: 30577.73 samples/sec	accuracy=nan
2022-10-13 10:53:53,017 Node[0] Epoch[11] Batch [80-100]	Speed: 30626.57 samples/sec	accuracy=nan
2022-10-13 10:53:55,149 Node[0] Epoch[11] Batch [100-120]	Speed: 30620.46 samples/sec	accuracy=nan
2022-10-13 10:53:57,276 Node[0] Epoch[11] Batch [120-140]	Speed: 30689.45 samples/sec	accuracy=nan
2022-10-13 10:53:59,404 Node[0] Epoch[11] Batch [140-160]	Speed: 30670.17 samples/sec	accuracy=nan
2022-10-13 10:54:01,536 Node[0] Epoch[11] Batch [160-180]	Speed: 30625.52 samples/sec	accuracy=nan
2022-10-13 10:54:03,665 Node[0] Epoch[11] Batch [180-200]	Speed: 30658.86 samples/sec	accuracy=nan
2022-10-13 10:54:05,799 Node[0] Epoch[11] Batch [200-220]	Speed: 30588.99 samples/sec	accuracy=nan
2022-10-13 10:54:07,932 Node[0] Epoch[11] Batch [220-240]	Speed: 30609.52 samples/sec	accuracy=nan
2022-10-13 10:54:10,066 Node[0] Epoch[11] Batch [240-260]	Speed: 30585.42 samples/sec	accuracy=nan
2022-10-13 10:54:12,196 Node[0] Epoch[11] Batch [260-280]	Speed: 30644.33 samples/sec	accuracy=nan
2022-10-13 10:54:14,330 Node[0] Epoch[11] Batch [280-300]	Speed: 30593.65 samples/sec	accuracy=nan
2022-10-13 10:54:16,457 Node[0] Epoch[11] Batch [300-320]	Speed: 30686.26 samples/sec	accuracy=nan
2022-10-13 10:54:18,593 Node[0] Epoch[11] Batch [320-340]	Speed: 30575.53 samples/sec	accuracy=nan
2022-10-13 10:54:20,722 Node[0] Epoch[11] Batch [340-360]	Speed: 30654.99 samples/sec	accuracy=nan
2022-10-13 10:54:22,857 Node[0] Epoch[11] Batch [360-380]	Speed: 30575.94 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658464137, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 12}}
2022-10-13 10:54:24,137 Node[0] Epoch[11] Time cost=41.927
:::MLLOG {"namespace": "", "time_ms": 1665658464137, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30557.13298490971}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1665658464138, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30557.13298490971, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658464138, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 13}}
2022-10-13 10:54:26,382 Node[0] Epoch[12] Batch [0-20]	Speed: 30602.46 samples/sec	accuracy=nan
2022-10-13 10:54:28,508 Node[0] Epoch[12] Batch [20-40]	Speed: 30704.02 samples/sec	accuracy=nan
2022-10-13 10:54:30,636 Node[0] Epoch[12] Batch [40-60]	Speed: 30687.65 samples/sec	accuracy=nan
2022-10-13 10:54:32,766 Node[0] Epoch[12] Batch [60-80]	Speed: 30647.78 samples/sec	accuracy=nan
2022-10-13 10:54:34,894 Node[0] Epoch[12] Batch [80-100]	Speed: 30674.03 samples/sec	accuracy=nan
2022-10-13 10:54:37,025 Node[0] Epoch[12] Batch [100-120]	Speed: 30632.99 samples/sec	accuracy=nan
2022-10-13 10:54:39,156 Node[0] Epoch[12] Batch [120-140]	Speed: 30632.84 samples/sec	accuracy=nan
2022-10-13 10:54:41,289 Node[0] Epoch[12] Batch [140-160]	Speed: 30607.43 samples/sec	accuracy=nan
2022-10-13 10:54:43,421 Node[0] Epoch[12] Batch [160-180]	Speed: 30614.74 samples/sec	accuracy=nan
2022-10-13 10:54:45,556 Node[0] Epoch[12] Batch [180-200]	Speed: 30575.96 samples/sec	accuracy=nan
2022-10-13 10:54:47,682 Node[0] Epoch[12] Batch [200-220]	Speed: 30709.26 samples/sec	accuracy=nan
2022-10-13 10:54:49,811 Node[0] Epoch[12] Batch [220-240]	Speed: 30650.62 samples/sec	accuracy=nan
2022-10-13 10:54:51,945 Node[0] Epoch[12] Batch [240-260]	Speed: 30591.76 samples/sec	accuracy=nan
2022-10-13 10:54:54,076 Node[0] Epoch[12] Batch [260-280]	Speed: 30637.23 samples/sec	accuracy=nan
2022-10-13 10:54:56,207 Node[0] Epoch[12] Batch [280-300]	Speed: 30633.31 samples/sec	accuracy=nan
2022-10-13 10:54:58,338 Node[0] Epoch[12] Batch [300-320]	Speed: 30642.07 samples/sec	accuracy=nan
2022-10-13 10:55:00,467 Node[0] Epoch[12] Batch [320-340]	Speed: 30652.73 samples/sec	accuracy=nan
2022-10-13 10:55:02,597 Node[0] Epoch[12] Batch [340-360]	Speed: 30651.17 samples/sec	accuracy=nan
2022-10-13 10:55:04,737 Node[0] Epoch[12] Batch [360-380]	Speed: 30507.34 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658506014, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 13}}
2022-10-13 10:55:06,015 Node[0] Epoch[12] Time cost=41.877
:::MLLOG {"namespace": "", "time_ms": 1665658506015, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30593.661806795026}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1665658506015, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30593.661806795026, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658506015, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 14}}
2022-10-13 10:55:08,162 Node[0] Epoch[13] Batch [0-20]	Speed: 32202.24 samples/sec	accuracy=nan
2022-10-13 10:55:10,393 Node[0] Epoch[13] Batch [20-40]	Speed: 29260.93 samples/sec	accuracy=nan
2022-10-13 10:55:12,527 Node[0] Epoch[13] Batch [40-60]	Speed: 30582.48 samples/sec	accuracy=nan
2022-10-13 10:55:14,657 Node[0] Epoch[13] Batch [60-80]	Speed: 30654.78 samples/sec	accuracy=nan
2022-10-13 10:55:16,788 Node[0] Epoch[13] Batch [80-100]	Speed: 30627.56 samples/sec	accuracy=nan
2022-10-13 10:55:18,918 Node[0] Epoch[13] Batch [100-120]	Speed: 30648.39 samples/sec	accuracy=nan
2022-10-13 10:55:21,053 Node[0] Epoch[13] Batch [120-140]	Speed: 30587.03 samples/sec	accuracy=nan
2022-10-13 10:55:23,184 Node[0] Epoch[13] Batch [140-160]	Speed: 30625.20 samples/sec	accuracy=nan
2022-10-13 10:55:25,315 Node[0] Epoch[13] Batch [160-180]	Speed: 30631.53 samples/sec	accuracy=nan
2022-10-13 10:55:27,444 Node[0] Epoch[13] Batch [180-200]	Speed: 30663.30 samples/sec	accuracy=nan
2022-10-13 10:55:29,575 Node[0] Epoch[13] Batch [200-220]	Speed: 30636.74 samples/sec	accuracy=nan
2022-10-13 10:55:31,700 Node[0] Epoch[13] Batch [220-240]	Speed: 30716.53 samples/sec	accuracy=nan
2022-10-13 10:55:33,834 Node[0] Epoch[13] Batch [240-260]	Speed: 30593.36 samples/sec	accuracy=nan
2022-10-13 10:55:35,966 Node[0] Epoch[13] Batch [260-280]	Speed: 30625.21 samples/sec	accuracy=nan
2022-10-13 10:55:38,096 Node[0] Epoch[13] Batch [280-300]	Speed: 30637.89 samples/sec	accuracy=nan
2022-10-13 10:55:40,229 Node[0] Epoch[13] Batch [300-320]	Speed: 30607.57 samples/sec	accuracy=nan
2022-10-13 10:55:42,360 Node[0] Epoch[13] Batch [320-340]	Speed: 30640.33 samples/sec	accuracy=nan
2022-10-13 10:55:44,486 Node[0] Epoch[13] Batch [340-360]	Speed: 30694.85 samples/sec	accuracy=nan
2022-10-13 10:55:46,620 Node[0] Epoch[13] Batch [360-380]	Speed: 30599.90 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658547893, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 14}}
2022-10-13 10:55:47,893 Node[0] Epoch[13] Time cost=41.878
:::MLLOG {"namespace": "", "time_ms": 1665658547893, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30592.64916015308}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1665658547894, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30592.64916015308, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658547894, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 15}}
2022-10-13 10:55:50,148 Node[0] Epoch[14] Batch [0-20]	Speed: 30500.62 samples/sec	accuracy=nan
2022-10-13 10:55:52,279 Node[0] Epoch[14] Batch [20-40]	Speed: 30633.87 samples/sec	accuracy=nan
2022-10-13 10:55:54,409 Node[0] Epoch[14] Batch [40-60]	Speed: 30643.37 samples/sec	accuracy=nan
2022-10-13 10:55:56,536 Node[0] Epoch[14] Batch [60-80]	Speed: 30694.55 samples/sec	accuracy=nan
2022-10-13 10:55:58,665 Node[0] Epoch[14] Batch [80-100]	Speed: 30656.67 samples/sec	accuracy=nan
2022-10-13 10:56:00,803 Node[0] Epoch[14] Batch [100-120]	Speed: 30543.43 samples/sec	accuracy=nan
2022-10-13 10:56:02,936 Node[0] Epoch[14] Batch [120-140]	Speed: 30599.49 samples/sec	accuracy=nan
2022-10-13 10:56:05,067 Node[0] Epoch[14] Batch [140-160]	Speed: 30631.54 samples/sec	accuracy=nan
2022-10-13 10:56:07,199 Node[0] Epoch[14] Batch [160-180]	Speed: 30625.43 samples/sec	accuracy=nan
2022-10-13 10:56:09,330 Node[0] Epoch[14] Batch [180-200]	Speed: 30622.44 samples/sec	accuracy=nan
2022-10-13 10:56:11,458 Node[0] Epoch[14] Batch [200-220]	Speed: 30681.62 samples/sec	accuracy=nan
2022-10-13 10:56:13,588 Node[0] Epoch[14] Batch [220-240]	Speed: 30649.99 samples/sec	accuracy=nan
2022-10-13 10:56:15,722 Node[0] Epoch[14] Batch [240-260]	Speed: 30586.65 samples/sec	accuracy=nan
2022-10-13 10:56:17,850 Node[0] Epoch[14] Batch [260-280]	Speed: 30675.51 samples/sec	accuracy=nan
2022-10-13 10:56:19,977 Node[0] Epoch[14] Batch [280-300]	Speed: 30695.74 samples/sec	accuracy=nan
2022-10-13 10:56:22,107 Node[0] Epoch[14] Batch [300-320]	Speed: 30640.84 samples/sec	accuracy=nan
2022-10-13 10:56:24,238 Node[0] Epoch[14] Batch [320-340]	Speed: 30636.44 samples/sec	accuracy=nan
2022-10-13 10:56:26,364 Node[0] Epoch[14] Batch [340-360]	Speed: 30707.97 samples/sec	accuracy=nan
2022-10-13 10:56:28,494 Node[0] Epoch[14] Batch [360-380]	Speed: 30658.00 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658589766, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 15}}
2022-10-13 10:56:29,767 Node[0] Epoch[14] Time cost=41.873
:::MLLOG {"namespace": "", "time_ms": 1665658589767, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30596.586387551175}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1665658589767, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30596.586387551175, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658589868, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
2022-10-13 10:56:30,683 Node[0] Epoch[14] Validation-accuracy=0.609698
2022-10-13 10:56:30,684 Node[0] Epoch[14] Validation-correct-count=1270.000000
2022-10-13 10:56:30,684 Node[0] Epoch[14] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1665658590696, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1665658590696, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.59636, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1665658590696, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1665658590696, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665658590697, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 16}}
2022-10-13 10:56:32,966 Node[0] Epoch[15] Batch [0-20]	Speed: 29077.67 samples/sec	accuracy=nan
2022-10-13 10:56:35,092 Node[0] Epoch[15] Batch [20-40]	Speed: 30702.23 samples/sec	accuracy=nan
2022-10-13 10:56:37,226 Node[0] Epoch[15] Batch [40-60]	Speed: 30590.04 samples/sec	accuracy=nan
2022-10-13 10:56:39,353 Node[0] Epoch[15] Batch [60-80]	Speed: 30698.68 samples/sec	accuracy=nan
2022-10-13 10:56:41,481 Node[0] Epoch[15] Batch [80-100]	Speed: 30677.34 samples/sec	accuracy=nan
2022-10-13 10:56:43,610 Node[0] Epoch[15] Batch [100-120]	Speed: 30659.92 samples/sec	accuracy=nan
2022-10-13 10:56:45,741 Node[0] Epoch[15] Batch [120-140]	Speed: 30627.19 samples/sec	accuracy=nan
2022-10-13 10:56:47,869 Node[0] Epoch[15] Batch [140-160]	Speed: 30677.66 samples/sec	accuracy=nan
2022-10-13 10:56:49,998 Node[0] Epoch[15] Batch [160-180]	Speed: 30670.46 samples/sec	accuracy=nan
2022-10-13 10:56:52,126 Node[0] Epoch[15] Batch [180-200]	Speed: 30666.40 samples/sec	accuracy=nan
2022-10-13 10:56:54,255 Node[0] Epoch[15] Batch [200-220]	Speed: 30661.33 samples/sec	accuracy=nan
2022-10-13 10:56:56,383 Node[0] Epoch[15] Batch [220-240]	Speed: 30684.74 samples/sec	accuracy=nan
2022-10-13 10:56:58,514 Node[0] Epoch[15] Batch [240-260]	Speed: 30625.70 samples/sec	accuracy=nan
2022-10-13 10:57:00,645 Node[0] Epoch[15] Batch [260-280]	Speed: 30645.03 samples/sec	accuracy=nan
2022-10-13 10:57:02,773 Node[0] Epoch[15] Batch [280-300]	Speed: 30674.78 samples/sec	accuracy=nan
2022-10-13 10:57:04,902 Node[0] Epoch[15] Batch [300-320]	Speed: 30652.72 samples/sec	accuracy=nan
2022-10-13 10:57:07,029 Node[0] Epoch[15] Batch [320-340]	Speed: 30691.58 samples/sec	accuracy=nan
2022-10-13 10:57:09,157 Node[0] Epoch[15] Batch [340-360]	Speed: 30685.49 samples/sec	accuracy=nan
2022-10-13 10:57:11,288 Node[0] Epoch[15] Batch [360-380]	Speed: 30623.60 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658632562, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 16}}
2022-10-13 10:57:12,562 Node[0] Epoch[15] Time cost=41.865
:::MLLOG {"namespace": "", "time_ms": 1665658632562, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30602.525935362915}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1665658632562, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30602.525935362915, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658632562, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 17}}
2022-10-13 10:57:14,811 Node[0] Epoch[16] Batch [0-20]	Speed: 30583.41 samples/sec	accuracy=nan
2022-10-13 10:57:16,935 Node[0] Epoch[16] Batch [20-40]	Speed: 30728.26 samples/sec	accuracy=nan
2022-10-13 10:57:19,059 Node[0] Epoch[16] Batch [40-60]	Speed: 30731.70 samples/sec	accuracy=nan
2022-10-13 10:57:21,183 Node[0] Epoch[16] Batch [60-80]	Speed: 30733.20 samples/sec	accuracy=nan
2022-10-13 10:57:23,318 Node[0] Epoch[16] Batch [80-100]	Speed: 30583.47 samples/sec	accuracy=nan
2022-10-13 10:57:25,448 Node[0] Epoch[16] Batch [100-120]	Speed: 30643.81 samples/sec	accuracy=nan
2022-10-13 10:57:27,577 Node[0] Epoch[16] Batch [120-140]	Speed: 30658.35 samples/sec	accuracy=nan
2022-10-13 10:57:29,711 Node[0] Epoch[16] Batch [140-160]	Speed: 30600.74 samples/sec	accuracy=nan
2022-10-13 10:57:31,843 Node[0] Epoch[16] Batch [160-180]	Speed: 30609.54 samples/sec	accuracy=nan
2022-10-13 10:57:33,973 Node[0] Epoch[16] Batch [180-200]	Speed: 30654.26 samples/sec	accuracy=nan
2022-10-13 10:57:36,098 Node[0] Epoch[16] Batch [200-220]	Speed: 30722.65 samples/sec	accuracy=nan
2022-10-13 10:57:38,223 Node[0] Epoch[16] Batch [220-240]	Speed: 30712.52 samples/sec	accuracy=nan
2022-10-13 10:57:40,348 Node[0] Epoch[16] Batch [240-260]	Speed: 30724.34 samples/sec	accuracy=nan
2022-10-13 10:57:42,473 Node[0] Epoch[16] Batch [260-280]	Speed: 30714.38 samples/sec	accuracy=nan
2022-10-13 10:57:44,599 Node[0] Epoch[16] Batch [280-300]	Speed: 30703.30 samples/sec	accuracy=nan
2022-10-13 10:57:46,728 Node[0] Epoch[16] Batch [300-320]	Speed: 30669.81 samples/sec	accuracy=nan
2022-10-13 10:57:48,856 Node[0] Epoch[16] Batch [320-340]	Speed: 30672.22 samples/sec	accuracy=nan
2022-10-13 10:57:50,892 Node[0] Epoch[16] Batch [340-360]	Speed: 32059.53 samples/sec	accuracy=nan
2022-10-13 10:57:53,117 Node[0] Epoch[16] Batch [360-380]	Speed: 29342.36 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658674397, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 17}}
2022-10-13 10:57:54,397 Node[0] Epoch[16] Time cost=41.834
:::MLLOG {"namespace": "", "time_ms": 1665658674397, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30624.72340623594}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1665658674397, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30624.72340623594, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658674397, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 18}}
2022-10-13 10:57:56,646 Node[0] Epoch[17] Batch [0-20]	Speed: 30557.75 samples/sec	accuracy=nan
2022-10-13 10:57:58,770 Node[0] Epoch[17] Batch [20-40]	Speed: 30733.88 samples/sec	accuracy=nan
2022-10-13 10:58:00,799 Node[0] Epoch[17] Batch [40-60]	Speed: 32184.36 samples/sec	accuracy=nan
2022-10-13 10:58:03,032 Node[0] Epoch[17] Batch [60-80]	Speed: 29228.03 samples/sec	accuracy=nan
2022-10-13 10:58:05,161 Node[0] Epoch[17] Batch [80-100]	Speed: 30663.94 samples/sec	accuracy=nan
2022-10-13 10:58:07,289 Node[0] Epoch[17] Batch [100-120]	Speed: 30681.34 samples/sec	accuracy=nan
2022-10-13 10:58:09,420 Node[0] Epoch[17] Batch [120-140]	Speed: 30622.02 samples/sec	accuracy=nan
2022-10-13 10:58:11,556 Node[0] Epoch[17] Batch [140-160]	Speed: 30574.64 samples/sec	accuracy=nan
2022-10-13 10:58:13,681 Node[0] Epoch[17] Batch [160-180]	Speed: 30711.76 samples/sec	accuracy=nan
2022-10-13 10:58:15,808 Node[0] Epoch[17] Batch [180-200]	Speed: 30691.54 samples/sec	accuracy=nan
2022-10-13 10:58:17,934 Node[0] Epoch[17] Batch [200-220]	Speed: 30705.71 samples/sec	accuracy=nan
2022-10-13 10:58:20,062 Node[0] Epoch[17] Batch [220-240]	Speed: 30675.83 samples/sec	accuracy=nan
2022-10-13 10:58:22,190 Node[0] Epoch[17] Batch [240-260]	Speed: 30674.26 samples/sec	accuracy=nan
2022-10-13 10:58:24,321 Node[0] Epoch[17] Batch [260-280]	Speed: 30635.00 samples/sec	accuracy=nan
2022-10-13 10:58:26,454 Node[0] Epoch[17] Batch [280-300]	Speed: 30612.24 samples/sec	accuracy=nan
2022-10-13 10:58:28,583 Node[0] Epoch[17] Batch [300-320]	Speed: 30659.14 samples/sec	accuracy=nan
2022-10-13 10:58:30,712 Node[0] Epoch[17] Batch [320-340]	Speed: 30656.51 samples/sec	accuracy=nan
2022-10-13 10:58:32,846 Node[0] Epoch[17] Batch [340-360]	Speed: 30594.27 samples/sec	accuracy=nan
2022-10-13 10:58:34,972 Node[0] Epoch[17] Batch [360-380]	Speed: 30708.28 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658716248, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 18}}
2022-10-13 10:58:36,248 Node[0] Epoch[17] Time cost=41.851
:::MLLOG {"namespace": "", "time_ms": 1665658716248, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30612.504483364854}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1665658716248, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30612.504483364854, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658716249, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 19}}
2022-10-13 10:58:38,489 Node[0] Epoch[18] Batch [0-20]	Speed: 30678.83 samples/sec	accuracy=nan
2022-10-13 10:58:40,614 Node[0] Epoch[18] Batch [20-40]	Speed: 30720.82 samples/sec	accuracy=nan
2022-10-13 10:58:42,744 Node[0] Epoch[18] Batch [40-60]	Speed: 30641.88 samples/sec	accuracy=nan
2022-10-13 10:58:44,872 Node[0] Epoch[18] Batch [60-80]	Speed: 30673.50 samples/sec	accuracy=nan
2022-10-13 10:58:46,910 Node[0] Epoch[18] Batch [80-100]	Speed: 32042.29 samples/sec	accuracy=nan
2022-10-13 10:58:49,140 Node[0] Epoch[18] Batch [100-120]	Speed: 29263.99 samples/sec	accuracy=nan
2022-10-13 10:58:51,273 Node[0] Epoch[18] Batch [120-140]	Speed: 30602.03 samples/sec	accuracy=nan
2022-10-13 10:58:53,401 Node[0] Epoch[18] Batch [140-160]	Speed: 30688.12 samples/sec	accuracy=nan
2022-10-13 10:58:55,526 Node[0] Epoch[18] Batch [160-180]	Speed: 30716.48 samples/sec	accuracy=nan
2022-10-13 10:58:57,654 Node[0] Epoch[18] Batch [180-200]	Speed: 30668.95 samples/sec	accuracy=nan
2022-10-13 10:58:59,780 Node[0] Epoch[18] Batch [200-220]	Speed: 30718.41 samples/sec	accuracy=nan
2022-10-13 10:59:01,906 Node[0] Epoch[18] Batch [220-240]	Speed: 30693.19 samples/sec	accuracy=nan
2022-10-13 10:59:04,028 Node[0] Epoch[18] Batch [240-260]	Speed: 30766.29 samples/sec	accuracy=nan
2022-10-13 10:59:06,160 Node[0] Epoch[18] Batch [260-280]	Speed: 30616.38 samples/sec	accuracy=nan
2022-10-13 10:59:08,288 Node[0] Epoch[18] Batch [280-300]	Speed: 30689.05 samples/sec	accuracy=nan
2022-10-13 10:59:10,421 Node[0] Epoch[18] Batch [300-320]	Speed: 30591.35 samples/sec	accuracy=nan
2022-10-13 10:59:12,544 Node[0] Epoch[18] Batch [320-340]	Speed: 30759.68 samples/sec	accuracy=nan
2022-10-13 10:59:14,676 Node[0] Epoch[18] Batch [340-360]	Speed: 30621.91 samples/sec	accuracy=nan
2022-10-13 10:59:16,804 Node[0] Epoch[18] Batch [360-380]	Speed: 30670.15 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658758078, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 19}}
2022-10-13 10:59:18,078 Node[0] Epoch[18] Time cost=41.829
:::MLLOG {"namespace": "", "time_ms": 1665658758078, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30628.344880158595}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1665658758078, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30628.344880158595, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658758178, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2022-10-13 10:59:18,988 Node[0] Epoch[18] Validation-accuracy=0.647144
2022-10-13 10:59:18,988 Node[0] Epoch[18] Validation-correct-count=1348.000000
2022-10-13 10:59:18,988 Node[0] Epoch[18] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1665658759004, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1665658759004, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.63666, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1665658759004, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1665658759008, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 20, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665658759009, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 20}}
2022-10-13 10:59:21,264 Node[0] Epoch[19] Batch [0-20]	Speed: 29459.02 samples/sec	accuracy=nan
2022-10-13 10:59:23,395 Node[0] Epoch[19] Batch [20-40]	Speed: 30631.56 samples/sec	accuracy=nan
2022-10-13 10:59:25,525 Node[0] Epoch[19] Batch [40-60]	Speed: 30658.74 samples/sec	accuracy=nan
2022-10-13 10:59:27,656 Node[0] Epoch[19] Batch [60-80]	Speed: 30625.13 samples/sec	accuracy=nan
2022-10-13 10:59:29,785 Node[0] Epoch[19] Batch [80-100]	Speed: 30672.20 samples/sec	accuracy=nan
2022-10-13 10:59:31,912 Node[0] Epoch[19] Batch [100-120]	Speed: 30680.52 samples/sec	accuracy=nan
2022-10-13 10:59:34,045 Node[0] Epoch[19] Batch [120-140]	Speed: 30612.21 samples/sec	accuracy=nan
2022-10-13 10:59:36,179 Node[0] Epoch[19] Batch [140-160]	Speed: 30589.45 samples/sec	accuracy=nan
2022-10-13 10:59:38,310 Node[0] Epoch[19] Batch [160-180]	Speed: 30625.95 samples/sec	accuracy=nan
2022-10-13 10:59:40,445 Node[0] Epoch[19] Batch [180-200]	Speed: 30582.80 samples/sec	accuracy=nan
2022-10-13 10:59:42,575 Node[0] Epoch[19] Batch [200-220]	Speed: 30649.21 samples/sec	accuracy=nan
2022-10-13 10:59:44,707 Node[0] Epoch[19] Batch [220-240]	Speed: 30612.53 samples/sec	accuracy=nan
2022-10-13 10:59:46,834 Node[0] Epoch[19] Batch [240-260]	Speed: 30688.58 samples/sec	accuracy=nan
2022-10-13 10:59:48,964 Node[0] Epoch[19] Batch [260-280]	Speed: 30652.40 samples/sec	accuracy=nan
2022-10-13 10:59:51,094 Node[0] Epoch[19] Batch [280-300]	Speed: 30647.81 samples/sec	accuracy=nan
2022-10-13 10:59:53,222 Node[0] Epoch[19] Batch [300-320]	Speed: 30680.76 samples/sec	accuracy=nan
2022-10-13 10:59:55,350 Node[0] Epoch[19] Batch [320-340]	Speed: 30672.84 samples/sec	accuracy=nan
2022-10-13 10:59:57,477 Node[0] Epoch[19] Batch [340-360]	Speed: 30697.57 samples/sec	accuracy=nan
2022-10-13 10:59:59,609 Node[0] Epoch[19] Batch [360-380]	Speed: 30608.93 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658800886, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 20}}
2022-10-13 11:00:00,887 Node[0] Epoch[19] Time cost=41.877
:::MLLOG {"namespace": "", "time_ms": 1665658800887, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30593.638292567863}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1665658800888, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30593.638292567863, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658800888, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 21}}
2022-10-13 11:00:03,130 Node[0] Epoch[20] Batch [0-20]	Speed: 30610.12 samples/sec	accuracy=nan
2022-10-13 11:00:05,262 Node[0] Epoch[20] Batch [20-40]	Speed: 30617.10 samples/sec	accuracy=nan
2022-10-13 11:00:07,393 Node[0] Epoch[20] Batch [40-60]	Speed: 30632.89 samples/sec	accuracy=nan
2022-10-13 11:00:09,522 Node[0] Epoch[20] Batch [60-80]	Speed: 30670.74 samples/sec	accuracy=nan
2022-10-13 11:00:11,659 Node[0] Epoch[20] Batch [80-100]	Speed: 30547.15 samples/sec	accuracy=nan
2022-10-13 11:00:13,791 Node[0] Epoch[20] Batch [100-120]	Speed: 30610.01 samples/sec	accuracy=nan
2022-10-13 11:00:15,930 Node[0] Epoch[20] Batch [120-140]	Speed: 30528.43 samples/sec	accuracy=nan
2022-10-13 11:00:18,059 Node[0] Epoch[20] Batch [140-160]	Speed: 30655.72 samples/sec	accuracy=nan
2022-10-13 11:00:20,191 Node[0] Epoch[20] Batch [160-180]	Speed: 30621.57 samples/sec	accuracy=nan
2022-10-13 11:00:22,324 Node[0] Epoch[20] Batch [180-200]	Speed: 30606.54 samples/sec	accuracy=nan
2022-10-13 11:00:24,450 Node[0] Epoch[20] Batch [200-220]	Speed: 30709.03 samples/sec	accuracy=nan
2022-10-13 11:00:26,579 Node[0] Epoch[20] Batch [220-240]	Speed: 30655.76 samples/sec	accuracy=nan
2022-10-13 11:00:28,706 Node[0] Epoch[20] Batch [240-260]	Speed: 30695.44 samples/sec	accuracy=nan
2022-10-13 11:00:30,837 Node[0] Epoch[20] Batch [260-280]	Speed: 30626.40 samples/sec	accuracy=nan
2022-10-13 11:00:32,968 Node[0] Epoch[20] Batch [280-300]	Speed: 30640.31 samples/sec	accuracy=nan
2022-10-13 11:00:35,100 Node[0] Epoch[20] Batch [300-320]	Speed: 30618.45 samples/sec	accuracy=nan
2022-10-13 11:00:37,235 Node[0] Epoch[20] Batch [320-340]	Speed: 30575.04 samples/sec	accuracy=nan
2022-10-13 11:00:39,363 Node[0] Epoch[20] Batch [340-360]	Speed: 30676.66 samples/sec	accuracy=nan
2022-10-13 11:00:41,497 Node[0] Epoch[20] Batch [360-380]	Speed: 30596.24 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658842770, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 21}}
2022-10-13 11:00:42,770 Node[0] Epoch[20] Time cost=41.882
:::MLLOG {"namespace": "", "time_ms": 1665658842770, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30589.587940274272}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1665658842771, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30589.587940274272, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658842771, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 22}}
2022-10-13 11:00:45,017 Node[0] Epoch[21] Batch [0-20]	Speed: 30582.75 samples/sec	accuracy=nan
2022-10-13 11:00:47,142 Node[0] Epoch[21] Batch [20-40]	Speed: 30719.77 samples/sec	accuracy=nan
2022-10-13 11:00:49,277 Node[0] Epoch[21] Batch [40-60]	Speed: 30579.46 samples/sec	accuracy=nan
2022-10-13 11:00:51,404 Node[0] Epoch[21] Batch [60-80]	Speed: 30696.03 samples/sec	accuracy=nan
2022-10-13 11:00:53,534 Node[0] Epoch[21] Batch [80-100]	Speed: 30641.80 samples/sec	accuracy=nan
2022-10-13 11:00:55,667 Node[0] Epoch[21] Batch [100-120]	Speed: 30603.74 samples/sec	accuracy=nan
2022-10-13 11:00:57,800 Node[0] Epoch[21] Batch [120-140]	Speed: 30618.96 samples/sec	accuracy=nan
2022-10-13 11:00:59,928 Node[0] Epoch[21] Batch [140-160]	Speed: 30673.98 samples/sec	accuracy=nan
2022-10-13 11:01:02,058 Node[0] Epoch[21] Batch [160-180]	Speed: 30639.66 samples/sec	accuracy=nan
2022-10-13 11:01:04,187 Node[0] Epoch[21] Batch [180-200]	Speed: 30663.87 samples/sec	accuracy=nan
2022-10-13 11:01:06,324 Node[0] Epoch[21] Batch [200-220]	Speed: 30547.09 samples/sec	accuracy=nan
2022-10-13 11:01:08,453 Node[0] Epoch[21] Batch [220-240]	Speed: 30657.54 samples/sec	accuracy=nan
2022-10-13 11:01:10,583 Node[0] Epoch[21] Batch [240-260]	Speed: 30653.87 samples/sec	accuracy=nan
2022-10-13 11:01:12,714 Node[0] Epoch[21] Batch [260-280]	Speed: 30636.72 samples/sec	accuracy=nan
2022-10-13 11:01:14,846 Node[0] Epoch[21] Batch [280-300]	Speed: 30613.50 samples/sec	accuracy=nan
2022-10-13 11:01:16,984 Node[0] Epoch[21] Batch [300-320]	Speed: 30541.17 samples/sec	accuracy=nan
2022-10-13 11:01:19,117 Node[0] Epoch[21] Batch [320-340]	Speed: 30594.51 samples/sec	accuracy=nan
2022-10-13 11:01:21,250 Node[0] Epoch[21] Batch [340-360]	Speed: 30607.09 samples/sec	accuracy=nan
2022-10-13 11:01:23,388 Node[0] Epoch[21] Batch [360-380]	Speed: 30532.90 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658884663, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 22}}
2022-10-13 11:01:24,663 Node[0] Epoch[21] Time cost=41.892
:::MLLOG {"namespace": "", "time_ms": 1665658884663, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30582.531253026857}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1665658884663, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30582.531253026857, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658884663, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 23}}
2022-10-13 11:01:26,911 Node[0] Epoch[22] Batch [0-20]	Speed: 30586.93 samples/sec	accuracy=nan
2022-10-13 11:01:29,041 Node[0] Epoch[22] Batch [20-40]	Speed: 30640.66 samples/sec	accuracy=nan
2022-10-13 11:01:31,174 Node[0] Epoch[22] Batch [40-60]	Speed: 30602.54 samples/sec	accuracy=nan
2022-10-13 11:01:33,305 Node[0] Epoch[22] Batch [60-80]	Speed: 30634.58 samples/sec	accuracy=nan
2022-10-13 11:01:35,437 Node[0] Epoch[22] Batch [80-100]	Speed: 30619.44 samples/sec	accuracy=nan
2022-10-13 11:01:37,570 Node[0] Epoch[22] Batch [100-120]	Speed: 30604.13 samples/sec	accuracy=nan
2022-10-13 11:01:39,703 Node[0] Epoch[22] Batch [120-140]	Speed: 30604.15 samples/sec	accuracy=nan
2022-10-13 11:01:41,831 Node[0] Epoch[22] Batch [140-160]	Speed: 30680.96 samples/sec	accuracy=nan
2022-10-13 11:01:43,966 Node[0] Epoch[22] Batch [160-180]	Speed: 30577.82 samples/sec	accuracy=nan
2022-10-13 11:01:46,099 Node[0] Epoch[22] Batch [180-200]	Speed: 30597.36 samples/sec	accuracy=nan
2022-10-13 11:01:48,232 Node[0] Epoch[22] Batch [200-220]	Speed: 30616.62 samples/sec	accuracy=nan
2022-10-13 11:01:50,363 Node[0] Epoch[22] Batch [220-240]	Speed: 30632.35 samples/sec	accuracy=nan
2022-10-13 11:01:52,492 Node[0] Epoch[22] Batch [240-260]	Speed: 30662.64 samples/sec	accuracy=nan
2022-10-13 11:01:54,623 Node[0] Epoch[22] Batch [260-280]	Speed: 30633.74 samples/sec	accuracy=nan
2022-10-13 11:01:56,754 Node[0] Epoch[22] Batch [280-300]	Speed: 30635.83 samples/sec	accuracy=nan
2022-10-13 11:01:58,884 Node[0] Epoch[22] Batch [300-320]	Speed: 30645.74 samples/sec	accuracy=nan
2022-10-13 11:02:01,012 Node[0] Epoch[22] Batch [320-340]	Speed: 30672.96 samples/sec	accuracy=nan
2022-10-13 11:02:03,140 Node[0] Epoch[22] Batch [340-360]	Speed: 30678.73 samples/sec	accuracy=nan
2022-10-13 11:02:05,275 Node[0] Epoch[22] Batch [360-380]	Speed: 30577.36 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658926554, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 23}}
2022-10-13 11:02:06,555 Node[0] Epoch[22] Time cost=41.891
:::MLLOG {"namespace": "", "time_ms": 1665658926555, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30583.159422765024}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1665658926555, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30583.159422765024, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658926654, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
2022-10-13 11:02:07,477 Node[0] Epoch[22] Validation-accuracy=0.695298
2022-10-13 11:02:07,478 Node[0] Epoch[22] Validation-correct-count=1449.000000
2022-10-13 11:02:07,478 Node[0] Epoch[22] Validation-total-count=2084.000000
:::MLLOG {"namespace": "", "time_ms": 1665658927493, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1665658927494, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.6978, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1665658927494, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1665658927498, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 24, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665658927499, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 24}}
2022-10-13 11:02:09,798 Node[0] Epoch[23] Batch [0-20]	Speed: 28958.67 samples/sec	accuracy=nan
2022-10-13 11:02:11,926 Node[0] Epoch[23] Batch [20-40]	Speed: 30671.58 samples/sec	accuracy=nan
2022-10-13 11:02:14,057 Node[0] Epoch[23] Batch [40-60]	Speed: 30641.07 samples/sec	accuracy=nan
2022-10-13 11:02:16,183 Node[0] Epoch[23] Batch [60-80]	Speed: 30695.85 samples/sec	accuracy=nan
2022-10-13 11:02:18,312 Node[0] Epoch[23] Batch [80-100]	Speed: 30667.10 samples/sec	accuracy=nan
2022-10-13 11:02:20,440 Node[0] Epoch[23] Batch [100-120]	Speed: 30676.01 samples/sec	accuracy=nan
2022-10-13 11:02:22,574 Node[0] Epoch[23] Batch [120-140]	Speed: 30598.26 samples/sec	accuracy=nan
2022-10-13 11:02:24,703 Node[0] Epoch[23] Batch [140-160]	Speed: 30658.20 samples/sec	accuracy=nan
2022-10-13 11:02:26,836 Node[0] Epoch[23] Batch [160-180]	Speed: 30595.39 samples/sec	accuracy=nan
2022-10-13 11:02:28,967 Node[0] Epoch[23] Batch [180-200]	Speed: 30635.35 samples/sec	accuracy=nan
2022-10-13 11:02:31,101 Node[0] Epoch[23] Batch [200-220]	Speed: 30595.69 samples/sec	accuracy=nan
2022-10-13 11:02:33,230 Node[0] Epoch[23] Batch [220-240]	Speed: 30659.20 samples/sec	accuracy=nan
2022-10-13 11:02:35,364 Node[0] Epoch[23] Batch [240-260]	Speed: 30599.17 samples/sec	accuracy=nan
2022-10-13 11:02:37,496 Node[0] Epoch[23] Batch [260-280]	Speed: 30608.80 samples/sec	accuracy=nan
2022-10-13 11:02:39,625 Node[0] Epoch[23] Batch [280-300]	Speed: 30667.78 samples/sec	accuracy=nan
2022-10-13 11:02:41,756 Node[0] Epoch[23] Batch [300-320]	Speed: 30631.19 samples/sec	accuracy=nan
2022-10-13 11:02:43,888 Node[0] Epoch[23] Batch [320-340]	Speed: 30614.28 samples/sec	accuracy=nan
2022-10-13 11:02:46,019 Node[0] Epoch[23] Batch [340-360]	Speed: 30640.46 samples/sec	accuracy=nan
2022-10-13 11:02:48,145 Node[0] Epoch[23] Batch [360-380]	Speed: 30699.66 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665658969416, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 24}}
2022-10-13 11:02:49,416 Node[0] Epoch[23] Time cost=41.912
:::MLLOG {"namespace": "", "time_ms": 1665658969416, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30568.35060730604}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1665658969416, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30568.35060730604, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665658969416, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 25}}
2022-10-13 11:02:51,662 Node[0] Epoch[24] Batch [0-20]	Speed: 30622.38 samples/sec	accuracy=nan
2022-10-13 11:02:53,793 Node[0] Epoch[24] Batch [20-40]	Speed: 30626.74 samples/sec	accuracy=nan
2022-10-13 11:02:55,923 Node[0] Epoch[24] Batch [40-60]	Speed: 30657.83 samples/sec	accuracy=nan
2022-10-13 11:02:58,051 Node[0] Epoch[24] Batch [60-80]	Speed: 30675.65 samples/sec	accuracy=nan
2022-10-13 11:03:00,186 Node[0] Epoch[24] Batch [80-100]	Speed: 30570.72 samples/sec	accuracy=nan
2022-10-13 11:03:02,313 Node[0] Epoch[24] Batch [100-120]	Speed: 30688.92 samples/sec	accuracy=nan
2022-10-13 11:03:04,444 Node[0] Epoch[24] Batch [120-140]	Speed: 30646.79 samples/sec	accuracy=nan
2022-10-13 11:03:06,575 Node[0] Epoch[24] Batch [140-160]	Speed: 30623.14 samples/sec	accuracy=nan
2022-10-13 11:03:08,703 Node[0] Epoch[24] Batch [160-180]	Speed: 30678.73 samples/sec	accuracy=nan
2022-10-13 11:03:10,839 Node[0] Epoch[24] Batch [180-200]	Speed: 30568.01 samples/sec	accuracy=nan
2022-10-13 11:03:12,967 Node[0] Epoch[24] Batch [200-220]	Speed: 30670.47 samples/sec	accuracy=nan
2022-10-13 11:03:15,098 Node[0] Epoch[24] Batch [220-240]	Speed: 30636.99 samples/sec	accuracy=nan
2022-10-13 11:03:17,230 Node[0] Epoch[24] Batch [240-260]	Speed: 30621.66 samples/sec	accuracy=nan
2022-10-13 11:03:19,359 Node[0] Epoch[24] Batch [260-280]	Speed: 30657.80 samples/sec	accuracy=nan
2022-10-13 11:03:21,491 Node[0] Epoch[24] Batch [280-300]	Speed: 30612.12 samples/sec	accuracy=nan
2022-10-13 11:03:23,621 Node[0] Epoch[24] Batch [300-320]	Speed: 30650.21 samples/sec	accuracy=nan
2022-10-13 11:03:25,753 Node[0] Epoch[24] Batch [320-340]	Speed: 30624.82 samples/sec	accuracy=nan
2022-10-13 11:03:27,884 Node[0] Epoch[24] Batch [340-360]	Speed: 30625.35 samples/sec	accuracy=nan
2022-10-13 11:03:30,014 Node[0] Epoch[24] Batch [360-380]	Speed: 30652.30 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665659011292, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 25}}
2022-10-13 11:03:31,292 Node[0] Epoch[24] Time cost=41.876
:::MLLOG {"namespace": "", "time_ms": 1665659011294, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30594.453299348024}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1665659011294, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30594.453299348024, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665659011295, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 26}}
2022-10-13 11:03:33,529 Node[0] Epoch[25] Batch [0-20]	Speed: 30727.66 samples/sec	accuracy=nan
2022-10-13 11:03:35,657 Node[0] Epoch[25] Batch [20-40]	Speed: 30681.74 samples/sec	accuracy=nan
2022-10-13 11:03:37,786 Node[0] Epoch[25] Batch [40-60]	Speed: 30666.13 samples/sec	accuracy=nan
2022-10-13 11:03:39,913 Node[0] Epoch[25] Batch [60-80]	Speed: 30686.49 samples/sec	accuracy=nan
2022-10-13 11:03:42,043 Node[0] Epoch[25] Batch [80-100]	Speed: 30640.56 samples/sec	accuracy=nan
2022-10-13 11:03:44,185 Node[0] Epoch[25] Batch [100-120]	Speed: 30486.71 samples/sec	accuracy=nan
2022-10-13 11:03:46,313 Node[0] Epoch[25] Batch [120-140]	Speed: 30669.40 samples/sec	accuracy=nan
2022-10-13 11:03:48,449 Node[0] Epoch[25] Batch [140-160]	Speed: 30569.68 samples/sec	accuracy=nan
2022-10-13 11:03:50,583 Node[0] Epoch[25] Batch [160-180]	Speed: 30584.08 samples/sec	accuracy=nan
2022-10-13 11:03:52,709 Node[0] Epoch[25] Batch [180-200]	Speed: 30704.35 samples/sec	accuracy=nan
2022-10-13 11:03:54,842 Node[0] Epoch[25] Batch [200-220]	Speed: 30611.01 samples/sec	accuracy=nan
2022-10-13 11:03:56,967 Node[0] Epoch[25] Batch [220-240]	Speed: 30718.52 samples/sec	accuracy=nan
2022-10-13 11:03:59,099 Node[0] Epoch[25] Batch [240-260]	Speed: 30615.71 samples/sec	accuracy=nan
2022-10-13 11:04:01,127 Node[0] Epoch[25] Batch [260-280]	Speed: 32185.33 samples/sec	accuracy=nan
2022-10-13 11:04:03,358 Node[0] Epoch[25] Batch [280-300]	Speed: 29264.09 samples/sec	accuracy=nan
2022-10-13 11:04:05,488 Node[0] Epoch[25] Batch [300-320]	Speed: 30653.81 samples/sec	accuracy=nan
2022-10-13 11:04:07,617 Node[0] Epoch[25] Batch [320-340]	Speed: 30662.03 samples/sec	accuracy=nan
2022-10-13 11:04:09,746 Node[0] Epoch[25] Batch [340-360]	Speed: 30656.11 samples/sec	accuracy=nan
2022-10-13 11:04:11,878 Node[0] Epoch[25] Batch [360-380]	Speed: 30614.78 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665659053153, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 26}}
2022-10-13 11:04:13,153 Node[0] Epoch[25] Time cost=41.858
:::MLLOG {"namespace": "", "time_ms": 1665659053153, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30607.233976989854}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1665659053153, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30607.233976989854, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665659053153, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 27}}
2022-10-13 11:04:15,399 Node[0] Epoch[26] Batch [0-20]	Speed: 30631.70 samples/sec	accuracy=nan
2022-10-13 11:04:17,530 Node[0] Epoch[26] Batch [20-40]	Speed: 30636.27 samples/sec	accuracy=nan
2022-10-13 11:04:19,660 Node[0] Epoch[26] Batch [40-60]	Speed: 30643.94 samples/sec	accuracy=nan
2022-10-13 11:04:21,788 Node[0] Epoch[26] Batch [60-80]	Speed: 30687.24 samples/sec	accuracy=nan
2022-10-13 11:04:23,921 Node[0] Epoch[26] Batch [80-100]	Speed: 30606.15 samples/sec	accuracy=nan
2022-10-13 11:04:26,050 Node[0] Epoch[26] Batch [100-120]	Speed: 30650.75 samples/sec	accuracy=nan
2022-10-13 11:04:28,181 Node[0] Epoch[26] Batch [120-140]	Speed: 30638.76 samples/sec	accuracy=nan
2022-10-13 11:04:30,311 Node[0] Epoch[26] Batch [140-160]	Speed: 30654.06 samples/sec	accuracy=nan
2022-10-13 11:04:32,437 Node[0] Epoch[26] Batch [160-180]	Speed: 30695.76 samples/sec	accuracy=nan
2022-10-13 11:04:34,571 Node[0] Epoch[26] Batch [180-200]	Speed: 30590.68 samples/sec	accuracy=nan
2022-10-13 11:04:36,700 Node[0] Epoch[26] Batch [200-220]	Speed: 30662.81 samples/sec	accuracy=nan
2022-10-13 11:04:38,827 Node[0] Epoch[26] Batch [220-240]	Speed: 30687.81 samples/sec	accuracy=nan
2022-10-13 11:04:40,955 Node[0] Epoch[26] Batch [240-260]	Speed: 30687.88 samples/sec	accuracy=nan
2022-10-13 11:04:43,083 Node[0] Epoch[26] Batch [260-280]	Speed: 30675.02 samples/sec	accuracy=nan
2022-10-13 11:04:45,212 Node[0] Epoch[26] Batch [280-300]	Speed: 30658.37 samples/sec	accuracy=nan
2022-10-13 11:04:47,344 Node[0] Epoch[26] Batch [300-320]	Speed: 30626.00 samples/sec	accuracy=nan
2022-10-13 11:04:49,374 Node[0] Epoch[26] Batch [320-340]	Speed: 32142.88 samples/sec	accuracy=nan
2022-10-13 11:04:51,607 Node[0] Epoch[26] Batch [340-360]	Speed: 29238.50 samples/sec	accuracy=nan
2022-10-13 11:04:53,742 Node[0] Epoch[26] Batch [360-380]	Speed: 30575.90 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665659095015, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 27}}
2022-10-13 11:04:55,015 Node[0] Epoch[26] Time cost=41.862
:::MLLOG {"namespace": "", "time_ms": 1665659095015, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30604.63121484693}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1665659095016, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30604.63121484693, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665659095116, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2022-10-13 11:04:55,912 Node[0] Epoch[26] Validation-accuracy=0.734998
2022-10-13 11:04:55,913 Node[0] Epoch[26] Validation-correct-count=1531.000000
2022-10-13 11:04:55,913 Node[0] Epoch[26] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1665659095934, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1665659095934, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.73562, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1665659095934, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1665659095934, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 28, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665659095935, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 28}}
2022-10-13 11:04:58,235 Node[0] Epoch[27] Batch [0-20]	Speed: 28685.32 samples/sec	accuracy=nan
2022-10-13 11:05:00,367 Node[0] Epoch[27] Batch [20-40]	Speed: 30620.82 samples/sec	accuracy=nan
2022-10-13 11:05:02,500 Node[0] Epoch[27] Batch [40-60]	Speed: 30610.41 samples/sec	accuracy=nan
2022-10-13 11:05:04,631 Node[0] Epoch[27] Batch [60-80]	Speed: 30635.63 samples/sec	accuracy=nan
2022-10-13 11:05:06,768 Node[0] Epoch[27] Batch [80-100]	Speed: 30539.19 samples/sec	accuracy=nan
2022-10-13 11:05:08,904 Node[0] Epoch[27] Batch [100-120]	Speed: 30569.87 samples/sec	accuracy=nan
2022-10-13 11:05:11,036 Node[0] Epoch[27] Batch [120-140]	Speed: 30614.26 samples/sec	accuracy=nan
2022-10-13 11:05:13,169 Node[0] Epoch[27] Batch [140-160]	Speed: 30605.32 samples/sec	accuracy=nan
2022-10-13 11:05:15,295 Node[0] Epoch[27] Batch [160-180]	Speed: 30706.55 samples/sec	accuracy=nan
2022-10-13 11:05:17,430 Node[0] Epoch[27] Batch [180-200]	Speed: 30570.97 samples/sec	accuracy=nan
2022-10-13 11:05:19,565 Node[0] Epoch[27] Batch [200-220]	Speed: 30584.49 samples/sec	accuracy=nan
2022-10-13 11:05:21,696 Node[0] Epoch[27] Batch [220-240]	Speed: 30630.96 samples/sec	accuracy=nan
2022-10-13 11:05:23,825 Node[0] Epoch[27] Batch [240-260]	Speed: 30662.51 samples/sec	accuracy=nan
2022-10-13 11:05:25,962 Node[0] Epoch[27] Batch [260-280]	Speed: 30541.83 samples/sec	accuracy=nan
2022-10-13 11:05:28,092 Node[0] Epoch[27] Batch [280-300]	Speed: 30655.82 samples/sec	accuracy=nan
2022-10-13 11:05:30,226 Node[0] Epoch[27] Batch [300-320]	Speed: 30584.80 samples/sec	accuracy=nan
2022-10-13 11:05:32,363 Node[0] Epoch[27] Batch [320-340]	Speed: 30556.54 samples/sec	accuracy=nan
2022-10-13 11:05:34,491 Node[0] Epoch[27] Batch [340-360]	Speed: 30675.02 samples/sec	accuracy=nan
2022-10-13 11:05:36,623 Node[0] Epoch[27] Batch [360-380]	Speed: 30619.19 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665659137897, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 28}}
2022-10-13 11:05:37,897 Node[0] Epoch[27] Time cost=41.963
:::MLLOG {"namespace": "", "time_ms": 1665659137897, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30531.190184081705}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1665659137897, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30531.190184081705, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665659137898, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 29}}
2022-10-13 11:05:40,146 Node[0] Epoch[28] Batch [0-20]	Speed: 30578.22 samples/sec	accuracy=nan
2022-10-13 11:05:42,275 Node[0] Epoch[28] Batch [20-40]	Speed: 30665.09 samples/sec	accuracy=nan
2022-10-13 11:05:44,405 Node[0] Epoch[28] Batch [40-60]	Speed: 30651.10 samples/sec	accuracy=nan
2022-10-13 11:05:46,534 Node[0] Epoch[28] Batch [60-80]	Speed: 30658.21 samples/sec	accuracy=nan
2022-10-13 11:05:48,668 Node[0] Epoch[28] Batch [80-100]	Speed: 30592.02 samples/sec	accuracy=nan
2022-10-13 11:05:50,796 Node[0] Epoch[28] Batch [100-120]	Speed: 30684.54 samples/sec	accuracy=nan
2022-10-13 11:05:52,931 Node[0] Epoch[28] Batch [120-140]	Speed: 30575.16 samples/sec	accuracy=nan
2022-10-13 11:05:55,059 Node[0] Epoch[28] Batch [140-160]	Speed: 30677.49 samples/sec	accuracy=nan
2022-10-13 11:05:57,189 Node[0] Epoch[28] Batch [160-180]	Speed: 30639.52 samples/sec	accuracy=nan
2022-10-13 11:05:59,316 Node[0] Epoch[28] Batch [180-200]	Speed: 30697.83 samples/sec	accuracy=nan
2022-10-13 11:06:01,453 Node[0] Epoch[28] Batch [200-220]	Speed: 30543.86 samples/sec	accuracy=nan
2022-10-13 11:06:03,593 Node[0] Epoch[28] Batch [220-240]	Speed: 30504.84 samples/sec	accuracy=nan
2022-10-13 11:06:05,721 Node[0] Epoch[28] Batch [240-260]	Speed: 30684.10 samples/sec	accuracy=nan
2022-10-13 11:06:07,854 Node[0] Epoch[28] Batch [260-280]	Speed: 30603.57 samples/sec	accuracy=nan
2022-10-13 11:06:09,982 Node[0] Epoch[28] Batch [280-300]	Speed: 30676.39 samples/sec	accuracy=nan
2022-10-13 11:06:12,115 Node[0] Epoch[28] Batch [300-320]	Speed: 30602.55 samples/sec	accuracy=nan
2022-10-13 11:06:14,245 Node[0] Epoch[28] Batch [320-340]	Speed: 30637.76 samples/sec	accuracy=nan
2022-10-13 11:06:16,380 Node[0] Epoch[28] Batch [340-360]	Speed: 30580.70 samples/sec	accuracy=nan
2022-10-13 11:06:18,518 Node[0] Epoch[28] Batch [360-380]	Speed: 30531.80 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665659179791, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 29}}
2022-10-13 11:06:19,791 Node[0] Epoch[28] Time cost=41.893
:::MLLOG {"namespace": "", "time_ms": 1665659179791, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30581.588437654722}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1665659179791, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30581.588437654722, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665659179791, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 30}}
2022-10-13 11:06:22,035 Node[0] Epoch[29] Batch [0-20]	Speed: 30661.19 samples/sec	accuracy=nan
2022-10-13 11:06:24,172 Node[0] Epoch[29] Batch [20-40]	Speed: 30544.12 samples/sec	accuracy=nan
2022-10-13 11:06:26,306 Node[0] Epoch[29] Batch [40-60]	Speed: 30584.17 samples/sec	accuracy=nan
2022-10-13 11:06:28,433 Node[0] Epoch[29] Batch [60-80]	Speed: 30692.80 samples/sec	accuracy=nan
2022-10-13 11:06:30,569 Node[0] Epoch[29] Batch [80-100]	Speed: 30567.31 samples/sec	accuracy=nan
2022-10-13 11:06:32,704 Node[0] Epoch[29] Batch [100-120]	Speed: 30577.59 samples/sec	accuracy=nan
2022-10-13 11:06:34,837 Node[0] Epoch[29] Batch [120-140]	Speed: 30602.25 samples/sec	accuracy=nan
2022-10-13 11:06:36,970 Node[0] Epoch[29] Batch [140-160]	Speed: 30601.35 samples/sec	accuracy=nan
2022-10-13 11:06:39,097 Node[0] Epoch[29] Batch [160-180]	Speed: 30689.66 samples/sec	accuracy=nan
2022-10-13 11:06:41,228 Node[0] Epoch[29] Batch [180-200]	Speed: 30633.89 samples/sec	accuracy=nan
2022-10-13 11:06:43,355 Node[0] Epoch[29] Batch [200-220]	Speed: 30700.21 samples/sec	accuracy=nan
2022-10-13 11:06:45,483 Node[0] Epoch[29] Batch [220-240]	Speed: 30675.31 samples/sec	accuracy=nan
2022-10-13 11:06:47,620 Node[0] Epoch[29] Batch [240-260]	Speed: 30539.78 samples/sec	accuracy=nan
2022-10-13 11:06:49,749 Node[0] Epoch[29] Batch [260-280]	Speed: 30668.40 samples/sec	accuracy=nan
2022-10-13 11:06:51,873 Node[0] Epoch[29] Batch [280-300]	Speed: 30729.96 samples/sec	accuracy=nan
2022-10-13 11:06:54,007 Node[0] Epoch[29] Batch [300-320]	Speed: 30587.87 samples/sec	accuracy=nan
2022-10-13 11:06:56,148 Node[0] Epoch[29] Batch [320-340]	Speed: 30491.20 samples/sec	accuracy=nan
2022-10-13 11:06:58,274 Node[0] Epoch[29] Batch [340-360]	Speed: 30709.93 samples/sec	accuracy=nan
2022-10-13 11:07:00,404 Node[0] Epoch[29] Batch [360-380]	Speed: 30642.58 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665659221676, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 30}}
2022-10-13 11:07:01,677 Node[0] Epoch[29] Time cost=41.885
:::MLLOG {"namespace": "", "time_ms": 1665659221677, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30587.583101902575}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1665659221677, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30587.583101902575, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665659221677, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 31}}
2022-10-13 11:07:03,924 Node[0] Epoch[30] Batch [0-20]	Speed: 30634.28 samples/sec	accuracy=nan
2022-10-13 11:07:06,055 Node[0] Epoch[30] Batch [20-40]	Speed: 30623.53 samples/sec	accuracy=nan
2022-10-13 11:07:08,185 Node[0] Epoch[30] Batch [40-60]	Speed: 30648.14 samples/sec	accuracy=nan
2022-10-13 11:07:10,319 Node[0] Epoch[30] Batch [60-80]	Speed: 30596.81 samples/sec	accuracy=nan
2022-10-13 11:07:12,444 Node[0] Epoch[30] Batch [80-100]	Speed: 30714.76 samples/sec	accuracy=nan
2022-10-13 11:07:14,573 Node[0] Epoch[30] Batch [100-120]	Speed: 30669.09 samples/sec	accuracy=nan
2022-10-13 11:07:16,705 Node[0] Epoch[30] Batch [120-140]	Speed: 30613.69 samples/sec	accuracy=nan
2022-10-13 11:07:18,836 Node[0] Epoch[30] Batch [140-160]	Speed: 30637.71 samples/sec	accuracy=nan
2022-10-13 11:07:20,964 Node[0] Epoch[30] Batch [160-180]	Speed: 30670.09 samples/sec	accuracy=nan
2022-10-13 11:07:23,099 Node[0] Epoch[30] Batch [180-200]	Speed: 30581.04 samples/sec	accuracy=nan
2022-10-13 11:07:25,231 Node[0] Epoch[30] Batch [200-220]	Speed: 30618.16 samples/sec	accuracy=nan
2022-10-13 11:07:27,362 Node[0] Epoch[30] Batch [220-240]	Speed: 30627.41 samples/sec	accuracy=nan
2022-10-13 11:07:29,492 Node[0] Epoch[30] Batch [240-260]	Speed: 30650.17 samples/sec	accuracy=nan
2022-10-13 11:07:31,625 Node[0] Epoch[30] Batch [260-280]	Speed: 30606.87 samples/sec	accuracy=nan
2022-10-13 11:07:33,759 Node[0] Epoch[30] Batch [280-300]	Speed: 30594.52 samples/sec	accuracy=nan
2022-10-13 11:07:35,888 Node[0] Epoch[30] Batch [300-320]	Speed: 30655.56 samples/sec	accuracy=nan
2022-10-13 11:07:38,017 Node[0] Epoch[30] Batch [320-340]	Speed: 30660.00 samples/sec	accuracy=nan
2022-10-13 11:07:40,150 Node[0] Epoch[30] Batch [340-360]	Speed: 30618.20 samples/sec	accuracy=nan
2022-10-13 11:07:42,286 Node[0] Epoch[30] Batch [360-380]	Speed: 30557.33 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665659263564, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 31}}
2022-10-13 11:07:43,564 Node[0] Epoch[30] Time cost=41.887
:::MLLOG {"namespace": "", "time_ms": 1665659263564, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30586.229801756}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1665659263564, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30586.229801756, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665659263665, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
2022-10-13 11:07:44,469 Node[0] Epoch[30] Validation-accuracy=0.749400
2022-10-13 11:07:44,470 Node[0] Epoch[30] Validation-correct-count=1561.000000
2022-10-13 11:07:44,470 Node[0] Epoch[30] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1665659264489, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1665659264489, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75186, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1665659264490, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1665659264490, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 32, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665659264490, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 32}}
2022-10-13 11:07:46,746 Node[0] Epoch[31] Batch [0-20]	Speed: 29471.01 samples/sec	accuracy=nan
2022-10-13 11:07:48,874 Node[0] Epoch[31] Batch [20-40]	Speed: 30678.08 samples/sec	accuracy=nan
2022-10-13 11:07:50,999 Node[0] Epoch[31] Batch [40-60]	Speed: 30719.32 samples/sec	accuracy=nan
2022-10-13 11:07:53,127 Node[0] Epoch[31] Batch [60-80]	Speed: 30684.63 samples/sec	accuracy=nan
2022-10-13 11:07:55,256 Node[0] Epoch[31] Batch [80-100]	Speed: 30662.74 samples/sec	accuracy=nan
2022-10-13 11:07:57,384 Node[0] Epoch[31] Batch [100-120]	Speed: 30677.65 samples/sec	accuracy=nan
2022-10-13 11:07:59,512 Node[0] Epoch[31] Batch [120-140]	Speed: 30670.64 samples/sec	accuracy=nan
2022-10-13 11:08:01,641 Node[0] Epoch[31] Batch [140-160]	Speed: 30662.89 samples/sec	accuracy=nan
2022-10-13 11:08:03,772 Node[0] Epoch[31] Batch [160-180]	Speed: 30636.50 samples/sec	accuracy=nan
2022-10-13 11:08:05,908 Node[0] Epoch[31] Batch [180-200]	Speed: 30560.52 samples/sec	accuracy=nan
2022-10-13 11:08:08,035 Node[0] Epoch[31] Batch [200-220]	Speed: 30694.72 samples/sec	accuracy=nan
2022-10-13 11:08:10,165 Node[0] Epoch[31] Batch [220-240]	Speed: 30640.69 samples/sec	accuracy=nan
2022-10-13 11:08:12,295 Node[0] Epoch[31] Batch [240-260]	Speed: 30647.54 samples/sec	accuracy=nan
2022-10-13 11:08:14,426 Node[0] Epoch[31] Batch [260-280]	Speed: 30628.93 samples/sec	accuracy=nan
2022-10-13 11:08:16,558 Node[0] Epoch[31] Batch [280-300]	Speed: 30621.18 samples/sec	accuracy=nan
2022-10-13 11:08:18,687 Node[0] Epoch[31] Batch [300-320]	Speed: 30667.74 samples/sec	accuracy=nan
2022-10-13 11:08:20,819 Node[0] Epoch[31] Batch [320-340]	Speed: 30618.82 samples/sec	accuracy=nan
2022-10-13 11:08:22,945 Node[0] Epoch[31] Batch [340-360]	Speed: 30709.26 samples/sec	accuracy=nan
2022-10-13 11:08:25,079 Node[0] Epoch[31] Batch [360-380]	Speed: 30589.08 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665659306354, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 32}}
2022-10-13 11:08:26,354 Node[0] Epoch[31] Time cost=41.864
:::MLLOG {"namespace": "", "time_ms": 1665659306355, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30602.763133018605}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1665659306355, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30602.763133018605, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665659306355, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 33}}
2022-10-13 11:08:28,600 Node[0] Epoch[32] Batch [0-20]	Speed: 30607.27 samples/sec	accuracy=nan
2022-10-13 11:08:30,731 Node[0] Epoch[32] Batch [20-40]	Speed: 30639.94 samples/sec	accuracy=nan
2022-10-13 11:08:32,863 Node[0] Epoch[32] Batch [40-60]	Speed: 30617.64 samples/sec	accuracy=nan
2022-10-13 11:08:34,992 Node[0] Epoch[32] Batch [60-80]	Speed: 30656.70 samples/sec	accuracy=nan
2022-10-13 11:08:37,124 Node[0] Epoch[32] Batch [80-100]	Speed: 30615.58 samples/sec	accuracy=nan
2022-10-13 11:08:39,252 Node[0] Epoch[32] Batch [100-120]	Speed: 30678.33 samples/sec	accuracy=nan
2022-10-13 11:08:41,386 Node[0] Epoch[32] Batch [120-140]	Speed: 30586.79 samples/sec	accuracy=nan
2022-10-13 11:08:43,514 Node[0] Epoch[32] Batch [140-160]	Speed: 30690.53 samples/sec	accuracy=nan
2022-10-13 11:08:45,645 Node[0] Epoch[32] Batch [160-180]	Speed: 30624.39 samples/sec	accuracy=nan
2022-10-13 11:08:47,779 Node[0] Epoch[32] Batch [180-200]	Speed: 30594.39 samples/sec	accuracy=nan
2022-10-13 11:08:49,816 Node[0] Epoch[32] Batch [200-220]	Speed: 32037.63 samples/sec	accuracy=nan
2022-10-13 11:08:52,044 Node[0] Epoch[32] Batch [220-240]	Speed: 29304.44 samples/sec	accuracy=nan
2022-10-13 11:08:54,175 Node[0] Epoch[32] Batch [240-260]	Speed: 30630.69 samples/sec	accuracy=nan
2022-10-13 11:08:56,305 Node[0] Epoch[32] Batch [260-280]	Speed: 30652.19 samples/sec	accuracy=nan
2022-10-13 11:08:58,432 Node[0] Epoch[32] Batch [280-300]	Speed: 30691.30 samples/sec	accuracy=nan
2022-10-13 11:09:00,560 Node[0] Epoch[32] Batch [300-320]	Speed: 30670.43 samples/sec	accuracy=nan
2022-10-13 11:09:02,600 Node[0] Epoch[32] Batch [320-340]	Speed: 32014.63 samples/sec	accuracy=nan
2022-10-13 11:09:04,830 Node[0] Epoch[32] Batch [340-360]	Speed: 29267.20 samples/sec	accuracy=nan
2022-10-13 11:09:06,961 Node[0] Epoch[32] Batch [360-380]	Speed: 30634.75 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665659348233, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 33}}
2022-10-13 11:09:08,234 Node[0] Epoch[32] Time cost=41.879
:::MLLOG {"namespace": "", "time_ms": 1665659348234, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30592.355341451224}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1665659348234, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30592.355341451224, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665659348235, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 34}}
2022-10-13 11:09:10,481 Node[0] Epoch[33] Batch [0-20]	Speed: 30600.74 samples/sec	accuracy=nan
2022-10-13 11:09:12,610 Node[0] Epoch[33] Batch [20-40]	Speed: 30666.32 samples/sec	accuracy=nan
2022-10-13 11:09:14,741 Node[0] Epoch[33] Batch [40-60]	Speed: 30634.89 samples/sec	accuracy=nan
2022-10-13 11:09:16,881 Node[0] Epoch[33] Batch [60-80]	Speed: 30493.13 samples/sec	accuracy=nan
2022-10-13 11:09:19,011 Node[0] Epoch[33] Batch [80-100]	Speed: 30651.72 samples/sec	accuracy=nan
2022-10-13 11:09:21,146 Node[0] Epoch[33] Batch [100-120]	Speed: 30582.78 samples/sec	accuracy=nan
2022-10-13 11:09:23,281 Node[0] Epoch[33] Batch [120-140]	Speed: 30565.47 samples/sec	accuracy=nan
2022-10-13 11:09:25,411 Node[0] Epoch[33] Batch [140-160]	Speed: 30658.51 samples/sec	accuracy=nan
2022-10-13 11:09:27,538 Node[0] Epoch[33] Batch [160-180]	Speed: 30681.63 samples/sec	accuracy=nan
2022-10-13 11:09:29,670 Node[0] Epoch[33] Batch [180-200]	Speed: 30623.69 samples/sec	accuracy=nan
2022-10-13 11:09:31,799 Node[0] Epoch[33] Batch [200-220]	Speed: 30669.59 samples/sec	accuracy=nan
2022-10-13 11:09:33,924 Node[0] Epoch[33] Batch [220-240]	Speed: 30719.64 samples/sec	accuracy=nan
2022-10-13 11:09:36,053 Node[0] Epoch[33] Batch [240-260]	Speed: 30663.28 samples/sec	accuracy=nan
2022-10-13 11:09:38,179 Node[0] Epoch[33] Batch [260-280]	Speed: 30695.15 samples/sec	accuracy=nan
2022-10-13 11:09:40,307 Node[0] Epoch[33] Batch [280-300]	Speed: 30686.18 samples/sec	accuracy=nan
2022-10-13 11:09:42,436 Node[0] Epoch[33] Batch [300-320]	Speed: 30655.19 samples/sec	accuracy=nan
2022-10-13 11:09:44,563 Node[0] Epoch[33] Batch [320-340]	Speed: 30692.09 samples/sec	accuracy=nan
2022-10-13 11:09:46,691 Node[0] Epoch[33] Batch [340-360]	Speed: 30683.28 samples/sec	accuracy=nan
2022-10-13 11:09:48,819 Node[0] Epoch[33] Batch [360-380]	Speed: 30668.06 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665659390099, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 34}}
2022-10-13 11:09:50,100 Node[0] Epoch[33] Time cost=41.864
:::MLLOG {"namespace": "", "time_ms": 1665659390100, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30603.01427723328}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1665659390100, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30603.01427723328, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665659390100, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 35}}
2022-10-13 11:09:52,249 Node[0] Epoch[34] Batch [0-20]	Speed: 32065.15 samples/sec	accuracy=nan
2022-10-13 11:09:54,475 Node[0] Epoch[34] Batch [20-40]	Speed: 29324.77 samples/sec	accuracy=nan
2022-10-13 11:09:56,604 Node[0] Epoch[34] Batch [40-60]	Speed: 30656.54 samples/sec	accuracy=nan
2022-10-13 11:09:58,732 Node[0] Epoch[34] Batch [60-80]	Speed: 30687.44 samples/sec	accuracy=nan
2022-10-13 11:10:00,862 Node[0] Epoch[34] Batch [80-100]	Speed: 30647.53 samples/sec	accuracy=nan
2022-10-13 11:10:02,997 Node[0] Epoch[34] Batch [100-120]	Speed: 30568.59 samples/sec	accuracy=nan
2022-10-13 11:10:05,129 Node[0] Epoch[34] Batch [120-140]	Speed: 30626.52 samples/sec	accuracy=nan
2022-10-13 11:10:07,260 Node[0] Epoch[34] Batch [140-160]	Speed: 30623.34 samples/sec	accuracy=nan
2022-10-13 11:10:09,390 Node[0] Epoch[34] Batch [160-180]	Speed: 30648.66 samples/sec	accuracy=nan
2022-10-13 11:10:11,519 Node[0] Epoch[34] Batch [180-200]	Speed: 30671.71 samples/sec	accuracy=nan
2022-10-13 11:10:13,645 Node[0] Epoch[34] Batch [200-220]	Speed: 30695.11 samples/sec	accuracy=nan
2022-10-13 11:10:15,776 Node[0] Epoch[34] Batch [220-240]	Speed: 30637.62 samples/sec	accuracy=nan
2022-10-13 11:10:17,907 Node[0] Epoch[34] Batch [240-260]	Speed: 30634.75 samples/sec	accuracy=nan
2022-10-13 11:10:20,038 Node[0] Epoch[34] Batch [260-280]	Speed: 30630.61 samples/sec	accuracy=nan
2022-10-13 11:10:22,172 Node[0] Epoch[34] Batch [280-300]	Speed: 30595.82 samples/sec	accuracy=nan
2022-10-13 11:10:24,302 Node[0] Epoch[34] Batch [300-320]	Speed: 30652.15 samples/sec	accuracy=nan
2022-10-13 11:10:26,437 Node[0] Epoch[34] Batch [320-340]	Speed: 30576.63 samples/sec	accuracy=nan
2022-10-13 11:10:28,567 Node[0] Epoch[34] Batch [340-360]	Speed: 30638.48 samples/sec	accuracy=nan
2022-10-13 11:10:30,702 Node[0] Epoch[34] Batch [360-380]	Speed: 30581.75 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665659431980, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 35}}
2022-10-13 11:10:31,980 Node[0] Epoch[34] Time cost=41.880
:::MLLOG {"namespace": "", "time_ms": 1665659431980, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30591.36733691312}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1665659431981, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30591.36733691312, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665659432081, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
2022-10-13 11:10:32,824 Node[0] Epoch[34] Validation-accuracy=0.752879
2022-10-13 11:10:32,824 Node[0] Epoch[34] Validation-correct-count=1569.000000
2022-10-13 11:10:32,824 Node[0] Epoch[34] Validation-total-count=2084.000000
:::MLLOG {"namespace": "", "time_ms": 1665659432918, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1665659432919, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.76104, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1665659432919, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1665659432919, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1063, "status": "success"}}
ENDING TIMING RUN AT 2022-10-13 11:11:16 AM
RESULT,IMAGE_CLASSIFICATION,,1600,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:19 AM
RESULT,IMAGE_CLASSIFICATION,,1603,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:19 AM
RESULT,IMAGE_CLASSIFICATION,,1603,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:20 AM
RESULT,IMAGE_CLASSIFICATION,,1604,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:20 AM
RESULT,IMAGE_CLASSIFICATION,,1604,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:20 AM
RESULT,IMAGE_CLASSIFICATION,,1604,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:20 AM
RESULT,IMAGE_CLASSIFICATION,,1604,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:21 AM
RESULT,IMAGE_CLASSIFICATION,,1605,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:21 AM
RESULT,IMAGE_CLASSIFICATION,,1605,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:21 AM
RESULT,IMAGE_CLASSIFICATION,,1605,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:22 AM
RESULT,IMAGE_CLASSIFICATION,,1606,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:22 AM
RESULT,IMAGE_CLASSIFICATION,,1606,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:22 AM
RESULT,IMAGE_CLASSIFICATION,,1606,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:22 AM
RESULT,IMAGE_CLASSIFICATION,,1606,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:22 AM
RESULT,IMAGE_CLASSIFICATION,,1606,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:23 AM
RESULT,IMAGE_CLASSIFICATION,,1607,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:24 AM
RESULT,IMAGE_CLASSIFICATION,,1608,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:24 AM
RESULT,IMAGE_CLASSIFICATION,,1608,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:24 AM
RESULT,IMAGE_CLASSIFICATION,,1608,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:24 AM
RESULT,IMAGE_CLASSIFICATION,,1608,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:24 AM
RESULT,IMAGE_CLASSIFICATION,,1608,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:25 AM
RESULT,IMAGE_CLASSIFICATION,,1609,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:25 AM
RESULT,IMAGE_CLASSIFICATION,,1609,,2022-10-13 10:44:36 AM
ENDING TIMING RUN AT 2022-10-13 11:11:26 AM
RESULT,IMAGE_CLASSIFICATION,,1610,,2022-10-13 10:44:36 AM
