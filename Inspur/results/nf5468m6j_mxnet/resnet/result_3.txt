+ echo 'Beginning trial 3 of 5'
Beginning trial 3 of 5
+ docker exec -it image_classification python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants

mlperf_log_utils.mlperf_submission_log(constants.RESNET)'
:::MLLOG {"namespace": "", "time_ms": 1665661117528, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "resnet", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 84}}
:::MLLOG {"namespace": "", "time_ms": 1665661117536, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "Inspur", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 89}}
:::MLLOG {"namespace": "", "time_ms": 1665661117536, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 93}}
:::MLLOG {"namespace": "", "time_ms": 1665661117536, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "research", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 97}}
:::MLLOG {"namespace": "", "time_ms": 1665661117537, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "1xNF5468M6J", "metadata": {"file": "/workspace/image_classification/mlperf_log_utils.py", "lineno": 101}}
+ '[' 1 -eq 1 ']'
+ sync
+ sudo /sbin/sysctl vm.drop_caches=3
vm.drop_caches = 3
+ docker exec -it image_classification python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants

mlperf_log_utils.mx_resnet_print_event(key=constants.CACHE_CLEAR, val=True)'
:::MLLOG {"namespace": "", "time_ms": 1665661133031, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 5}}
+ export SEED=30531
+ SEED=30531
+ docker exec -it --env=BATCHSIZE --env=DALI_CACHE_SIZE --env=DALI_CROP_BUFFER_HINT --env=DALI_DECODER_BUFFER_HINT --env=DALI_DONT_USE_MMAP --env=DALI_EVAL_HW_DECODER_LOAD --env=DALI_EVAL_PREFETCH_QUEUE --env=DALI_EVAL_THREADS --env=DALI_HW_DECODER_LOAD --env=DALI_NORMALIZE_BUFFER_HINT --env=DALI_NVJPEG_MEMPADDING --env=DALI_PREALLOCATE_HEIGHT --env=DALI_PREALLOCATE_WIDTH --env=DALI_PREFETCH_QUEUE --env=DALI_ROI_DECODE --env=DALI_THREADS --env=DALI_TMP_BUFFER_HINT --env=DGXHT --env=DGXNGPU --env=DGXNNODES --env=DGXNSOCKET --env=DGXSOCKETCORES --env=DGXSYSTEM --env=EVAL_OFFSET --env=EVAL_PERIOD --env=HOROVOD_CYCLE_TIME --env=HOROVOD_FUSION_THRESHOLD --env=HOROVOD_NUM_NCCL_STREAMS --env=KVSTORE --env=LABELSMOOTHING --env=LARSETA --env=LR --env=LRSCHED --env=MOM --env=MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_BWD --env=MXNET_CUDNN_NHWC_BN_ADD_HEURISTIC_FWD --env=MXNET_CUDNN_NHWC_BN_HEURISTIC_BWD --env=MXNET_CUDNN_NHWC_BN_HEURISTIC_FWD --env=MXNET_CUDNN_WARN_ON_IGNORED_FLAGS --env=MXNET_ENABLE_CUDA_GRAPHS --env=MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_BWD --env=MXNET_EXEC_BULK_EXEC_MAX_NODE_TRAIN_FWD --env=MXNET_EXTENDED_NORMCONV_SUPPORT --env=MXNET_HOROVOD_NUM_GROUPS --env=MXNET_OPTIMIZER_AGGREGATION_SIZE --env=NCCL_SOCKET_IFNAME --env=NETWORK --env=NUMEPOCHS --env=OMPI_MCA_btl --env=OPTIMIZER --env=RUN_NCCL_BW_TEST --env=WALLTIME --env=WARMUP_EPOCHS --env=WD --env=MLPERF_HOST_OS --env=SEED image_classification mpirun --allow-run-as-root --bind-to none --np 24 ./run_and_time.sh
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
running benchmark
running benchmark
running benchmark
running benchmark
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
STARTING TIMING RUN AT 2022-10-13 11:38:54 AM
running benchmark
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
num_gpus=24 num_sockets = 2 num_nodes=2 cores_per_socket=40
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
:::MLLOG {"namespace": "", "time_ms": 1665661148434, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 117}}
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1665661162968, "event_type": "POINT_IN_TIME", "key": "seed", "value": 30531, "metadata": {"file": "train_imagenet.py", "lineno": 173}}
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[11:39:22] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
NCCL version 2.12.10+cuda11.6
:::MLLOG {"namespace": "", "time_ms": 1665661175969, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 136, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 327}}
[11:39:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:47] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1665661187730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "bn0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "bn0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187730, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 78, "tensor": "fc1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 69, "tensor": "fc1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187731, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187732, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187733, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187734, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187735, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187736, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage1_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage1_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187737, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage1_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187738, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187739, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187740, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187741, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187742, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187743, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187744, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage2_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage2_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187745, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage2_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187746, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187747, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187748, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187748, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187748, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187748, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187748, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187749, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187749, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187749, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187749, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187750, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187750, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187750, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187750, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187750, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187751, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187751, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187751, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187751, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187751, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187752, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187752, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187752, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187752, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit4_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187752, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit4_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187753, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit4_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187753, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit4_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187753, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit4_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187753, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit4_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187753, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit4_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187754, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit4_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187754, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit4_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187754, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit5_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187754, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit5_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187754, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit5_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187755, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit5_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187755, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit5_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187755, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit5_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187755, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit5_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187755, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit5_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187756, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit5_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187756, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit6_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187756, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit6_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187756, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit6_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187757, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit6_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187757, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage3_unit6_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187757, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage3_unit6_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187757, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit6_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187757, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit6_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187758, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage3_unit6_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187758, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit1_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187758, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit1_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187758, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit1_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187758, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit1_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187759, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit1_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187759, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit1_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187759, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit1_bnsc_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187759, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit1_bnsc_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187759, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187760, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit1_conv1sc_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187760, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit1_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187760, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187760, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit2_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187760, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit2_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187761, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit2_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187761, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit2_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187761, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit2_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187761, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit2_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187762, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187762, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187762, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187762, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit3_bn1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187762, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit3_bn1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187763, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit3_bn2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187763, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit3_bn2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187763, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 88, "tensor": "stage4_unit3_bn3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187763, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 83, "tensor": "stage4_unit3_bn3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187763, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187764, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1665661187764, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 73, "tensor": "stage4_unit3_conv3_weight"}}
[11:39:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:53] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[[11:39:54] ../src/storage/storage.cc:19911:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
: Using Pooled (Naive) StorageManager for CPU
[[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive)[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
 StorageManager for CPU
11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive)[11:39:54 StorageManager for CPU
] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[11:39:54] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,536 Node[4] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='4', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=4, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=34906, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,536 Node[1] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='1', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=1, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=33682, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,536 Node[2] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='2', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=2, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=31565, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,537 Node[8] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='8', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=8, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=52670, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,537 Node[11] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='11', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=11, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=34194, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,538 Node[20] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='20', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=20, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=8647, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,538 Node[19] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='19', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=19, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=60050, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,539 Node[14] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='14', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=14, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=43304, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,539 Node[18] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='18', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=18, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=19514, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,539 Node[17] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='17', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=17, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=58790, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,539 Node[15] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='15', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=15, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=29219, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,539 Node[7] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='7', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=7, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=39257, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,539 Node[21] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='21', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=21, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=7028, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,539 Node[6] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='6', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=6, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=28828, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,540 Node[23] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='23', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=23, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=26397, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,542 Node[9] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='9', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=9, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=31939, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,542 Node[22] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='22', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=22, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=26706, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,543 Node[16] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='16', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=16, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=61901, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665661195543, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "train_imagenet.py", "lineno": 230}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,543 Node[10] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='10', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=10, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=19868, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,543 Node[0] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='0', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=0, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=59339, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,543 Node[12] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='12', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=12, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=12822, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665661195543, "event_type": "POINT_IN_TIME", "key": "sgd_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 710}}
:::MLLOG {"namespace": "", "time_ms": 1665661195544, "event_type": "POINT_IN_TIME", "key": "sgd_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 711}}
:::MLLOG {"namespace": "", "time_ms": 1665661195544, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_poly_power", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 712}}
:::MLLOG {"namespace": "", "time_ms": 1665661195544, "event_type": "POINT_IN_TIME", "key": "lars_opt_end_learning_rate", "value": 0.0001, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 713}}
:::MLLOG {"namespace": "", "time_ms": 1665661195544, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 136, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1176}}
:::MLLOG {"namespace": "", "time_ms": 1665661195544, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1177}}
:::MLLOG {"namespace": "", "time_ms": 1665661195544, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1178}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,544 Node[13] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='13', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=13, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=6094, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665661195544, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1179}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,544 Node[5] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='5', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=5, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=24109, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665661195545, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3264, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1180}}
:::MLLOG {"namespace": "", "time_ms": 1665661195545, "event_type": "POINT_IN_TIME", "key": "s_optimizer", "value": "sgdwfastlars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1181}}
:::MLLOG {"namespace": "", "time_ms": 1665661195545, "event_type": "POINT_IN_TIME", "key": "s_network", "value": "resnet-v1b-stats-fl", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1182}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `coin_flip` is now deprecated. Use `random.coin_flip` instead.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder_random_crop` is now deprecated. Use `decoders.image_random_crop` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `mxnet_reader` is now deprecated. Use `readers.mxnet` instead.
In DALI 1.0 all readers were moved into a dedicated :mod:`~nvidia.dali.fn.readers`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
/usr/local/lib/python3.8/dist-packages/nvidia/dali/ops.py:627: DeprecationWarning: WARNING: `image_decoder` is now deprecated. Use `decoders.image` instead.
In DALI 1.0 all decoders were moved into a dedicated :mod:`~nvidia.dali.fn.decoders`
submodule and renamed to follow a common pattern. This is a placeholder operator with identical
functionality to allow for backward compatibility.
  op_instances.append(_OperatorInstance(input_set, self, **kwargs))
2022-10-13 11:39:55,545 Node[3] start with arguments Namespace(accuracy_threshold=0.759, batch_size=136, batchnorm_eps=1e-05, batchnorm_layout='NHWC', batchnorm_mom=0.9, bn_gamma_init0=False, bn_group=1, conv_algo=1, conv_layout='NHWC', custom_bn_off=0, dali_bytes_per_sample_hint=10485760, dali_cache_size=0, dali_crop_buffer_hint=165581, dali_decoder_buffer_hint=1315942, dali_dont_use_mmap=0, dali_eval_hw_decoder_load=0.6, dali_eval_prefetch_queue=6, dali_eval_threads=5, dali_hw_decoder_load=0.6, dali_normalize_buffer_hint=441549, dali_nvjpeg_memory_padding=256, dali_preallocate_height=6430, dali_preallocate_width=5980, dali_prefetch_queue=13, dali_roi_decode=True, dali_threads=11, dali_tmp_buffer_hint=118522776, data_train='/data/train.rec', data_train_idx='/data/train.idx', data_val='/data/val.rec', data_val_idx='/data/val.idx', disp_batches=20, dtype='float16', e2e_cuda_graphs=0, epoch_size=0, eval_offset=2, eval_period=4, force_tensor_core=1, fuse_bn_add_relu=1, fuse_bn_relu=1, gpus='3', image_shape='4,224,224', initializer='default', input_batch_multiplier=1, input_layout='NHWC', kv_store='horovod', label_smoothing=0.1, lars_eps=0, lars_eta=0.001, lazy_init_sanity=False, local_rank=3, log='', logging_dir='logs', lr=10.5, lr_factor=0.1, lr_step_epochs='pow2', max_random_area=1.0, max_random_aspect_ratio=1.3333333333333333, min_random_area=0.05, min_random_aspect_ratio=0.75, model_prefix=None, mom=0.9, network='resnet-v1b-stats-fl', num_classes=1000, num_epochs=37, num_examples=1281167, num_layers=50, num_val_examples=-1, optimizer='sgdwfastlars', pooling_layout='NHWC', profile=0, profile_server_suffix='', profile_worker_suffix='', resize=256, save_period=1, seed=25827, separ_val=False, top_k=0, use_dali=True, verbose=0, warmup_epochs=2, warmup_strategy='linear', wd=5e-05)
:::MLLOG {"namespace": "", "time_ms": 1665661195545, "event_type": "POINT_IN_TIME", "key": "s_process", "value": "horovod", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1183}}
:::MLLOG {"namespace": "", "time_ms": 1665661195545, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1184}}
:::MLLOG {"namespace": "", "time_ms": 1665661195545, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "lars", "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1190}}
:::MLLOG {"namespace": "", "time_ms": 1665661195545, "event_type": "POINT_IN_TIME", "key": "lars_epsilon", "value": 0, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1192}}
:::MLLOG {"namespace": "", "time_ms": 1665661195545, "event_type": "POINT_IN_TIME", "key": "lars_opt_weight_decay", "value": 5e-05, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1194}}
:::MLLOG {"namespace": "", "time_ms": 1665661195545, "event_type": "POINT_IN_TIME", "key": "lars_opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1196}}
:::MLLOG {"namespace": "", "time_ms": 1665661195545, "event_type": "POINT_IN_TIME", "key": "lars_opt_base_learning_rate", "value": 10.5, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1197}}
:::MLLOG {"namespace": "", "time_ms": 1665661195545, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_warmup_epochs", "value": 2, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1198}}
:::MLLOG {"namespace": "", "time_ms": 1665661195545, "event_type": "POINT_IN_TIME", "key": "lars_opt_learning_rate_decay_steps", "value": 37, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1199}}
:::MLLOG {"namespace": "", "time_ms": 1665661212748, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1348}}
:::MLLOG {"namespace": "", "time_ms": 1665661212749, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 1281167, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 504}}
:::MLLOG {"namespace": "", "time_ms": 1665661212980, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 50000, "metadata": {"file": "/workspace/image_classification/common/dali.py", "lineno": 526}}
:::MLLOG {"namespace": "", "time_ms": 1665661212981, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 902, "first_epoch_num": 1, "epoch_count": 3}}
:::MLLOG {"namespace": "", "time_ms": 1665661212981, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 1}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:40:17,205 Node[0] Epoch[0] Batch [0-20]	Speed: 30306.70 samples/sec	accuracy=nan
2022-10-13 11:40:19,504 Node[0] Epoch[0] Batch [20-40]	Speed: 28395.70 samples/sec	accuracy=nan
2022-10-13 11:40:21,704 Node[0] Epoch[0] Batch [40-60]	Speed: 29672.84 samples/sec	accuracy=nan
2022-10-13 11:40:23,904 Node[0] Epoch[0] Batch [60-80]	Speed: 29668.83 samples/sec	accuracy=nan
2022-10-13 11:40:26,106 Node[0] Epoch[0] Batch [80-100]	Speed: 29640.52 samples/sec	accuracy=nan
2022-10-13 11:40:28,304 Node[0] Epoch[0] Batch [100-120]	Speed: 29703.54 samples/sec	accuracy=nan
2022-10-13 11:40:30,506 Node[0] Epoch[0] Batch [120-140]	Speed: 29641.19 samples/sec	accuracy=nan
2022-10-13 11:40:32,720 Node[0] Epoch[0] Batch [140-160]	Speed: 29494.11 samples/sec	accuracy=nan
2022-10-13 11:40:34,925 Node[0] Epoch[0] Batch [160-180]	Speed: 29597.31 samples/sec	accuracy=nan
2022-10-13 11:40:37,024 Node[0] Epoch[0] Batch [180-200]	Speed: 31096.30 samples/sec	accuracy=nan
2022-10-13 11:40:39,321 Node[0] Epoch[0] Batch [200-220]	Speed: 28420.40 samples/sec	accuracy=nan
2022-10-13 11:40:41,519 Node[0] Epoch[0] Batch [220-240]	Speed: 29710.81 samples/sec	accuracy=nan
2022-10-13 11:40:43,725 Node[0] Epoch[0] Batch [240-260]	Speed: 29583.21 samples/sec	accuracy=nan
2022-10-13 11:40:45,931 Node[0] Epoch[0] Batch [260-280]	Speed: 29593.45 samples/sec	accuracy=nan
2022-10-13 11:40:48,126 Node[0] Epoch[0] Batch [280-300]	Speed: 29746.60 samples/sec	accuracy=nan
2022-10-13 11:40:50,316 Node[0] Epoch[0] Batch [300-320]	Speed: 29797.13 samples/sec	accuracy=nan
2022-10-13 11:40:52,529 Node[0] Epoch[0] Batch [320-340]	Speed: 29510.97 samples/sec	accuracy=nan
2022-10-13 11:40:54,728 Node[0] Epoch[0] Batch [340-360]	Speed: 29675.97 samples/sec	accuracy=nan
2022-10-13 11:40:56,903 Node[0] Epoch[0] Batch [360-380]	Speed: 30020.00 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661258178, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 1}}
2022-10-13 11:40:58,178 Node[0] Epoch[0] Time cost=45.197
:::MLLOG {"namespace": "", "time_ms": 1665661258179, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 28346.161714124122}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1665661258179, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 28346.161714124122, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661258179, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 2}}
2022-10-13 11:41:00,426 Node[0] Epoch[1] Batch [0-20]	Speed: 30592.66 samples/sec	accuracy=nan
2022-10-13 11:41:02,553 Node[0] Epoch[1] Batch [20-40]	Speed: 30700.01 samples/sec	accuracy=nan
2022-10-13 11:41:04,686 Node[0] Epoch[1] Batch [40-60]	Speed: 30606.31 samples/sec	accuracy=nan
2022-10-13 11:41:06,814 Node[0] Epoch[1] Batch [60-80]	Speed: 30672.70 samples/sec	accuracy=nan
2022-10-13 11:41:08,941 Node[0] Epoch[1] Batch [80-100]	Speed: 30689.49 samples/sec	accuracy=nan
2022-10-13 11:41:11,072 Node[0] Epoch[1] Batch [100-120]	Speed: 30628.73 samples/sec	accuracy=nan
2022-10-13 11:41:13,208 Node[0] Epoch[1] Batch [120-140]	Speed: 30569.86 samples/sec	accuracy=nan
2022-10-13 11:41:15,341 Node[0] Epoch[1] Batch [140-160]	Speed: 30604.23 samples/sec	accuracy=nan
2022-10-13 11:41:17,373 Node[0] Epoch[1] Batch [160-180]	Speed: 32122.13 samples/sec	accuracy=nan
2022-10-13 11:41:19,603 Node[0] Epoch[1] Batch [180-200]	Speed: 29280.55 samples/sec	accuracy=nan
2022-10-13 11:41:21,733 Node[0] Epoch[1] Batch [200-220]	Speed: 30641.86 samples/sec	accuracy=nan
2022-10-13 11:41:23,868 Node[0] Epoch[1] Batch [220-240]	Speed: 30574.21 samples/sec	accuracy=nan
2022-10-13 11:41:25,995 Node[0] Epoch[1] Batch [240-260]	Speed: 30695.40 samples/sec	accuracy=nan
2022-10-13 11:41:28,129 Node[0] Epoch[1] Batch [260-280]	Speed: 30588.07 samples/sec	accuracy=nan
2022-10-13 11:41:30,255 Node[0] Epoch[1] Batch [280-300]	Speed: 30703.18 samples/sec	accuracy=nan
2022-10-13 11:41:32,386 Node[0] Epoch[1] Batch [300-320]	Speed: 30629.85 samples/sec	accuracy=nan
2022-10-13 11:41:34,514 Node[0] Epoch[1] Batch [320-340]	Speed: 30680.15 samples/sec	accuracy=nan
2022-10-13 11:41:36,645 Node[0] Epoch[1] Batch [340-360]	Speed: 30635.63 samples/sec	accuracy=nan
2022-10-13 11:41:38,777 Node[0] Epoch[1] Batch [360-380]	Speed: 30619.49 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661300050, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 2}}
2022-10-13 11:41:40,051 Node[0] Epoch[1] Time cost=41.872
:::MLLOG {"namespace": "", "time_ms": 1665661300051, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30597.155029015405}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1665661300051, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30597.155029015405, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661300052, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 3}}
2022-10-13 11:41:42,287 Node[0] Epoch[2] Batch [0-20]	Speed: 30701.78 samples/sec	accuracy=nan
2022-10-13 11:41:44,415 Node[0] Epoch[2] Batch [20-40]	Speed: 30677.87 samples/sec	accuracy=nan
2022-10-13 11:41:46,548 Node[0] Epoch[2] Batch [40-60]	Speed: 30611.01 samples/sec	accuracy=nan
2022-10-13 11:41:48,676 Node[0] Epoch[2] Batch [60-80]	Speed: 30670.87 samples/sec	accuracy=nan
2022-10-13 11:41:50,809 Node[0] Epoch[2] Batch [80-100]	Speed: 30609.29 samples/sec	accuracy=nan
2022-10-13 11:41:52,938 Node[0] Epoch[2] Batch [100-120]	Speed: 30651.86 samples/sec	accuracy=nan
2022-10-13 11:41:55,073 Node[0] Epoch[2] Batch [120-140]	Speed: 30579.77 samples/sec	accuracy=nan
2022-10-13 11:41:57,205 Node[0] Epoch[2] Batch [140-160]	Speed: 30617.99 samples/sec	accuracy=nan
2022-10-13 11:41:59,334 Node[0] Epoch[2] Batch [160-180]	Speed: 30667.80 samples/sec	accuracy=nan
2022-10-13 11:42:01,462 Node[0] Epoch[2] Batch [180-200]	Speed: 30670.96 samples/sec	accuracy=nan
2022-10-13 11:42:03,590 Node[0] Epoch[2] Batch [200-220]	Speed: 30680.32 samples/sec	accuracy=nan
2022-10-13 11:42:05,723 Node[0] Epoch[2] Batch [220-240]	Speed: 30605.56 samples/sec	accuracy=nan
2022-10-13 11:42:07,851 Node[0] Epoch[2] Batch [240-260]	Speed: 30679.91 samples/sec	accuracy=nan
2022-10-13 11:42:09,984 Node[0] Epoch[2] Batch [260-280]	Speed: 30596.72 samples/sec	accuracy=nan
2022-10-13 11:42:12,112 Node[0] Epoch[2] Batch [280-300]	Speed: 30674.16 samples/sec	accuracy=nan
2022-10-13 11:42:14,240 Node[0] Epoch[2] Batch [300-320]	Speed: 30687.60 samples/sec	accuracy=nan
2022-10-13 11:42:16,374 Node[0] Epoch[2] Batch [320-340]	Speed: 30588.58 samples/sec	accuracy=nan
2022-10-13 11:42:18,501 Node[0] Epoch[2] Batch [340-360]	Speed: 30682.68 samples/sec	accuracy=nan
2022-10-13 11:42:20,631 Node[0] Epoch[2] Batch [360-380]	Speed: 30656.82 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661341910, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 3}}
2022-10-13 11:42:21,910 Node[0] Epoch[2] Time cost=41.859
:::MLLOG {"namespace": "", "time_ms": 1665661341910, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30607.057900490967}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1665661341910, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30607.057900490967, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[17] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[16] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[18] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[19] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[15] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[14] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[20] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[13] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[21] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[22] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[11] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[12] DALI iterator does not support resetting while epoch is not finished. Ignoring...
:::MLLOG {"namespace": "", "time_ms": 1665661342011, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 3}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,011 Node[2] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,012 Node[23] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,012 Node[10] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,012 Node[9] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,012 Node[3] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,012 Node[1] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,012 Node[5] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,012 Node[4] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,012 Node[7] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,012 Node[8] DALI iterator does not support resetting while epoch is not finished. Ignoring...
/usr/local/lib/python3.8/dist-packages/nvidia/dali/plugin/mxnet.py:89: Warning: Please do not use `fill_last_batch` and use `last_batch_policy` instead.
  _DaliBaseIterator.__init__(self,
2022-10-13 11:42:22,012 Node[6] DALI iterator does not support resetting while epoch is not finished. Ignoring...
2022-10-13 11:42:22,012 Node[0] DALI iterator does not support resetting while epoch is not finished. Ignoring...
2022-10-13 11:42:23,777 Node[0] Epoch[2] Validation-accuracy=0.267883
2022-10-13 11:42:23,777 Node[0] Epoch[2] Validation-correct-count=558.000000
2022-10-13 11:42:23,777 Node[0] Epoch[2] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1665661343862, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1665661343863, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.27966, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1665661343864, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1665661343865, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 4, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665661343866, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 4}}
2022-10-13 11:42:26,136 Node[0] Epoch[3] Batch [0-20]	Speed: 28939.92 samples/sec	accuracy=nan
2022-10-13 11:42:28,264 Node[0] Epoch[3] Batch [20-40]	Speed: 30671.61 samples/sec	accuracy=nan
2022-10-13 11:42:30,394 Node[0] Epoch[3] Batch [40-60]	Speed: 30654.41 samples/sec	accuracy=nan
2022-10-13 11:42:32,522 Node[0] Epoch[3] Batch [60-80]	Speed: 30669.52 samples/sec	accuracy=nan
2022-10-13 11:42:34,651 Node[0] Epoch[3] Batch [80-100]	Speed: 30674.96 samples/sec	accuracy=nan
2022-10-13 11:42:36,779 Node[0] Epoch[3] Batch [100-120]	Speed: 30671.57 samples/sec	accuracy=nan
2022-10-13 11:42:38,813 Node[0] Epoch[3] Batch [120-140]	Speed: 32095.54 samples/sec	accuracy=nan
2022-10-13 11:42:41,040 Node[0] Epoch[3] Batch [140-160]	Speed: 29310.73 samples/sec	accuracy=nan
2022-10-13 11:42:43,174 Node[0] Epoch[3] Batch [160-180]	Speed: 30588.04 samples/sec	accuracy=nan
2022-10-13 11:42:45,306 Node[0] Epoch[3] Batch [180-200]	Speed: 30617.68 samples/sec	accuracy=nan
2022-10-13 11:42:47,438 Node[0] Epoch[3] Batch [200-220]	Speed: 30621.97 samples/sec	accuracy=nan
2022-10-13 11:42:49,566 Node[0] Epoch[3] Batch [220-240]	Speed: 30676.62 samples/sec	accuracy=nan
2022-10-13 11:42:51,694 Node[0] Epoch[3] Batch [240-260]	Speed: 30672.85 samples/sec	accuracy=nan
2022-10-13 11:42:53,819 Node[0] Epoch[3] Batch [260-280]	Speed: 30730.28 samples/sec	accuracy=nan
2022-10-13 11:42:55,951 Node[0] Epoch[3] Batch [280-300]	Speed: 30619.44 samples/sec	accuracy=nan
2022-10-13 11:42:58,078 Node[0] Epoch[3] Batch [300-320]	Speed: 30691.75 samples/sec	accuracy=nan
2022-10-13 11:43:00,206 Node[0] Epoch[3] Batch [320-340]	Speed: 30665.84 samples/sec	accuracy=nan
2022-10-13 11:43:02,339 Node[0] Epoch[3] Batch [340-360]	Speed: 30606.93 samples/sec	accuracy=nan
2022-10-13 11:43:04,467 Node[0] Epoch[3] Batch [360-380]	Speed: 30680.91 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661385744, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 4}}
2022-10-13 11:43:05,744 Node[0] Epoch[3] Time cost=41.878
:::MLLOG {"namespace": "", "time_ms": 1665661385744, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30592.72300759043}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665661385744, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30592.72300759043, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661385745, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 5}}
2022-10-13 11:43:07,990 Node[0] Epoch[4] Batch [0-20]	Speed: 29207.83 samples/sec	accuracy=nan
2022-10-13 11:43:10,129 Node[0] Epoch[4] Batch [20-40]	Speed: 30527.20 samples/sec	accuracy=nan
2022-10-13 11:43:12,065 Node[0] Epoch[4] Batch [40-60]	Speed: 33719.01 samples/sec	accuracy=nan
2022-10-13 11:43:14,392 Node[0] Epoch[4] Batch [60-80]	Speed: 28050.49 samples/sec	accuracy=nan
2022-10-13 11:43:16,516 Node[0] Epoch[4] Batch [80-100]	Speed: 30735.58 samples/sec	accuracy=nan
2022-10-13 11:43:18,648 Node[0] Epoch[4] Batch [100-120]	Speed: 30624.84 samples/sec	accuracy=nan
2022-10-13 11:43:20,782 Node[0] Epoch[4] Batch [120-140]	Speed: 30585.15 samples/sec	accuracy=nan
2022-10-13 11:43:22,910 Node[0] Epoch[4] Batch [140-160]	Speed: 30672.24 samples/sec	accuracy=nan
2022-10-13 11:43:25,039 Node[0] Epoch[4] Batch [160-180]	Speed: 30671.18 samples/sec	accuracy=nan
2022-10-13 11:43:27,168 Node[0] Epoch[4] Batch [180-200]	Speed: 30661.77 samples/sec	accuracy=nan
2022-10-13 11:43:29,296 Node[0] Epoch[4] Batch [200-220]	Speed: 30669.54 samples/sec	accuracy=nan
2022-10-13 11:43:31,420 Node[0] Epoch[4] Batch [220-240]	Speed: 30731.75 samples/sec	accuracy=nan
2022-10-13 11:43:33,546 Node[0] Epoch[4] Batch [240-260]	Speed: 30715.17 samples/sec	accuracy=nan
2022-10-13 11:43:35,678 Node[0] Epoch[4] Batch [260-280]	Speed: 30613.17 samples/sec	accuracy=nan
2022-10-13 11:43:37,804 Node[0] Epoch[4] Batch [280-300]	Speed: 30700.33 samples/sec	accuracy=nan
2022-10-13 11:43:39,931 Node[0] Epoch[4] Batch [300-320]	Speed: 30691.05 samples/sec	accuracy=nan
2022-10-13 11:43:42,068 Node[0] Epoch[4] Batch [320-340]	Speed: 30554.56 samples/sec	accuracy=nan
2022-10-13 11:43:44,196 Node[0] Epoch[4] Batch [340-360]	Speed: 30668.94 samples/sec	accuracy=nan
2022-10-13 11:43:46,326 Node[0] Epoch[4] Batch [360-380]	Speed: 30660.55 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661427600, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 5}}
2022-10-13 11:43:47,600 Node[0] Epoch[4] Time cost=41.855
:::MLLOG {"namespace": "", "time_ms": 1665661427600, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30609.50798650909}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1665661427600, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30609.50798650909, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661427600, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 6}}
2022-10-13 11:43:49,843 Node[0] Epoch[5] Batch [0-20]	Speed: 30681.25 samples/sec	accuracy=nan
2022-10-13 11:43:51,976 Node[0] Epoch[5] Batch [20-40]	Speed: 30612.18 samples/sec	accuracy=nan
2022-10-13 11:43:54,105 Node[0] Epoch[5] Batch [40-60]	Speed: 30665.88 samples/sec	accuracy=nan
2022-10-13 11:43:56,234 Node[0] Epoch[5] Batch [60-80]	Speed: 30649.93 samples/sec	accuracy=nan
2022-10-13 11:43:58,367 Node[0] Epoch[5] Batch [80-100]	Speed: 30608.32 samples/sec	accuracy=nan
2022-10-13 11:44:00,500 Node[0] Epoch[5] Batch [100-120]	Speed: 30606.56 samples/sec	accuracy=nan
2022-10-13 11:44:02,628 Node[0] Epoch[5] Batch [120-140]	Speed: 30682.83 samples/sec	accuracy=nan
2022-10-13 11:44:04,759 Node[0] Epoch[5] Batch [140-160]	Speed: 30628.91 samples/sec	accuracy=nan
2022-10-13 11:44:06,891 Node[0] Epoch[5] Batch [160-180]	Speed: 30616.57 samples/sec	accuracy=nan
2022-10-13 11:44:09,019 Node[0] Epoch[5] Batch [180-200]	Speed: 30682.35 samples/sec	accuracy=nan
2022-10-13 11:44:11,149 Node[0] Epoch[5] Batch [200-220]	Speed: 30642.58 samples/sec	accuracy=nan
2022-10-13 11:44:13,275 Node[0] Epoch[5] Batch [220-240]	Speed: 30703.00 samples/sec	accuracy=nan
2022-10-13 11:44:15,411 Node[0] Epoch[5] Batch [240-260]	Speed: 30565.41 samples/sec	accuracy=nan
2022-10-13 11:44:17,545 Node[0] Epoch[5] Batch [260-280]	Speed: 30593.88 samples/sec	accuracy=nan
2022-10-13 11:44:19,675 Node[0] Epoch[5] Batch [280-300]	Speed: 30644.46 samples/sec	accuracy=nan
2022-10-13 11:44:21,811 Node[0] Epoch[5] Batch [300-320]	Speed: 30562.28 samples/sec	accuracy=nan
2022-10-13 11:44:23,942 Node[0] Epoch[5] Batch [320-340]	Speed: 30631.91 samples/sec	accuracy=nan
2022-10-13 11:44:26,074 Node[0] Epoch[5] Batch [340-360]	Speed: 30622.38 samples/sec	accuracy=nan
2022-10-13 11:44:28,206 Node[0] Epoch[5] Batch [360-380]	Speed: 30620.58 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661469478, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 6}}
2022-10-13 11:44:29,478 Node[0] Epoch[5] Time cost=41.878
:::MLLOG {"namespace": "", "time_ms": 1665661469479, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30592.919993890075}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1665661469479, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30592.919993890075, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661469479, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 7}}
2022-10-13 11:44:31,722 Node[0] Epoch[6] Batch [0-20]	Speed: 30822.23 samples/sec	accuracy=nan
2022-10-13 11:44:33,855 Node[0] Epoch[6] Batch [20-40]	Speed: 30600.53 samples/sec	accuracy=nan
2022-10-13 11:44:35,988 Node[0] Epoch[6] Batch [40-60]	Speed: 30601.98 samples/sec	accuracy=nan
2022-10-13 11:44:38,116 Node[0] Epoch[6] Batch [60-80]	Speed: 30671.08 samples/sec	accuracy=nan
2022-10-13 11:44:40,244 Node[0] Epoch[6] Batch [80-100]	Speed: 30684.44 samples/sec	accuracy=nan
2022-10-13 11:44:42,375 Node[0] Epoch[6] Batch [100-120]	Speed: 30638.14 samples/sec	accuracy=nan
2022-10-13 11:44:44,511 Node[0] Epoch[6] Batch [120-140]	Speed: 30553.15 samples/sec	accuracy=nan
2022-10-13 11:44:46,636 Node[0] Epoch[6] Batch [140-160]	Speed: 30718.66 samples/sec	accuracy=nan
2022-10-13 11:44:48,665 Node[0] Epoch[6] Batch [160-180]	Speed: 32178.52 samples/sec	accuracy=nan
2022-10-13 11:44:50,884 Node[0] Epoch[6] Batch [180-200]	Speed: 29411.65 samples/sec	accuracy=nan
2022-10-13 11:44:53,013 Node[0] Epoch[6] Batch [200-220]	Speed: 30671.30 samples/sec	accuracy=nan
2022-10-13 11:44:55,042 Node[0] Epoch[6] Batch [220-240]	Speed: 32171.12 samples/sec	accuracy=nan
2022-10-13 11:44:57,266 Node[0] Epoch[6] Batch [240-260]	Speed: 29355.56 samples/sec	accuracy=nan
2022-10-13 11:44:59,400 Node[0] Epoch[6] Batch [260-280]	Speed: 30581.33 samples/sec	accuracy=nan
2022-10-13 11:45:01,531 Node[0] Epoch[6] Batch [280-300]	Speed: 30632.35 samples/sec	accuracy=nan
2022-10-13 11:45:03,664 Node[0] Epoch[6] Batch [300-320]	Speed: 30614.85 samples/sec	accuracy=nan
2022-10-13 11:45:05,698 Node[0] Epoch[6] Batch [320-340]	Speed: 32085.19 samples/sec	accuracy=nan
2022-10-13 11:45:07,930 Node[0] Epoch[6] Batch [340-360]	Speed: 29253.89 samples/sec	accuracy=nan
2022-10-13 11:45:10,053 Node[0] Epoch[6] Batch [360-380]	Speed: 30740.21 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661511329, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 7}}
2022-10-13 11:45:11,329 Node[0] Epoch[6] Time cost=41.851
:::MLLOG {"namespace": "", "time_ms": 1665661511329, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30612.913966459695}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1665661511330, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30612.913966459695, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661511430, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 7}}
2022-10-13 11:45:12,206 Node[0] Epoch[6] Validation-accuracy=0.454153
2022-10-13 11:45:12,207 Node[0] Epoch[6] Validation-correct-count=946.000000
2022-10-13 11:45:12,207 Node[0] Epoch[6] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1665661512251, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1665661512252, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.44836, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1665661512252, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665661512252, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 8, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665661512252, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 8}}
2022-10-13 11:45:14,524 Node[0] Epoch[7] Batch [0-20]	Speed: 29085.80 samples/sec	accuracy=nan
2022-10-13 11:45:16,660 Node[0] Epoch[7] Batch [20-40]	Speed: 30564.55 samples/sec	accuracy=nan
2022-10-13 11:45:18,785 Node[0] Epoch[7] Batch [40-60]	Speed: 30713.92 samples/sec	accuracy=nan
2022-10-13 11:45:20,912 Node[0] Epoch[7] Batch [60-80]	Speed: 30689.38 samples/sec	accuracy=nan
2022-10-13 11:45:23,039 Node[0] Epoch[7] Batch [80-100]	Speed: 30694.03 samples/sec	accuracy=nan
2022-10-13 11:45:25,166 Node[0] Epoch[7] Batch [100-120]	Speed: 30689.44 samples/sec	accuracy=nan
2022-10-13 11:45:27,294 Node[0] Epoch[7] Batch [120-140]	Speed: 30680.89 samples/sec	accuracy=nan
2022-10-13 11:45:29,422 Node[0] Epoch[7] Batch [140-160]	Speed: 30669.73 samples/sec	accuracy=nan
2022-10-13 11:45:31,552 Node[0] Epoch[7] Batch [160-180]	Speed: 30654.56 samples/sec	accuracy=nan
2022-10-13 11:45:33,682 Node[0] Epoch[7] Batch [180-200]	Speed: 30652.51 samples/sec	accuracy=nan
2022-10-13 11:45:35,807 Node[0] Epoch[7] Batch [200-220]	Speed: 30710.64 samples/sec	accuracy=nan
2022-10-13 11:45:37,936 Node[0] Epoch[7] Batch [220-240]	Speed: 30659.76 samples/sec	accuracy=nan
2022-10-13 11:45:40,070 Node[0] Epoch[7] Batch [240-260]	Speed: 30602.29 samples/sec	accuracy=nan
2022-10-13 11:45:42,198 Node[0] Epoch[7] Batch [260-280]	Speed: 30675.61 samples/sec	accuracy=nan
2022-10-13 11:45:44,330 Node[0] Epoch[7] Batch [280-300]	Speed: 30619.20 samples/sec	accuracy=nan
2022-10-13 11:45:46,458 Node[0] Epoch[7] Batch [300-320]	Speed: 30671.55 samples/sec	accuracy=nan
2022-10-13 11:45:48,586 Node[0] Epoch[7] Batch [320-340]	Speed: 30674.40 samples/sec	accuracy=nan
2022-10-13 11:45:50,717 Node[0] Epoch[7] Batch [340-360]	Speed: 30642.96 samples/sec	accuracy=nan
2022-10-13 11:45:52,843 Node[0] Epoch[7] Batch [360-380]	Speed: 30691.46 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661554118, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 8}}
2022-10-13 11:45:54,118 Node[0] Epoch[7] Time cost=41.866
:::MLLOG {"namespace": "", "time_ms": 1665661554118, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30601.816281454092}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1665661554118, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30601.816281454092, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661554118, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 9}}
2022-10-13 11:45:56,367 Node[0] Epoch[8] Batch [0-20]	Speed: 30573.09 samples/sec	accuracy=nan
2022-10-13 11:45:58,496 Node[0] Epoch[8] Batch [20-40]	Speed: 30658.46 samples/sec	accuracy=nan
2022-10-13 11:46:00,625 Node[0] Epoch[8] Batch [40-60]	Speed: 30663.59 samples/sec	accuracy=nan
2022-10-13 11:46:02,756 Node[0] Epoch[8] Batch [60-80]	Speed: 30637.41 samples/sec	accuracy=nan
2022-10-13 11:46:04,879 Node[0] Epoch[8] Batch [80-100]	Speed: 30750.15 samples/sec	accuracy=nan
2022-10-13 11:46:07,005 Node[0] Epoch[8] Batch [100-120]	Speed: 30709.43 samples/sec	accuracy=nan
2022-10-13 11:46:09,137 Node[0] Epoch[8] Batch [120-140]	Speed: 30618.18 samples/sec	accuracy=nan
2022-10-13 11:46:11,168 Node[0] Epoch[8] Batch [140-160]	Speed: 32132.91 samples/sec	accuracy=nan
2022-10-13 11:46:13,401 Node[0] Epoch[8] Batch [160-180]	Speed: 29231.06 samples/sec	accuracy=nan
2022-10-13 11:46:15,530 Node[0] Epoch[8] Batch [180-200]	Speed: 30668.41 samples/sec	accuracy=nan
2022-10-13 11:46:17,662 Node[0] Epoch[8] Batch [200-220]	Speed: 30616.12 samples/sec	accuracy=nan
2022-10-13 11:46:19,791 Node[0] Epoch[8] Batch [220-240]	Speed: 30667.79 samples/sec	accuracy=nan
2022-10-13 11:46:21,920 Node[0] Epoch[8] Batch [240-260]	Speed: 30659.12 samples/sec	accuracy=nan
2022-10-13 11:46:24,054 Node[0] Epoch[8] Batch [260-280]	Speed: 30587.48 samples/sec	accuracy=nan
2022-10-13 11:46:26,182 Node[0] Epoch[8] Batch [280-300]	Speed: 30677.29 samples/sec	accuracy=nan
2022-10-13 11:46:28,314 Node[0] Epoch[8] Batch [300-320]	Speed: 30618.56 samples/sec	accuracy=nan
2022-10-13 11:46:30,443 Node[0] Epoch[8] Batch [320-340]	Speed: 30663.18 samples/sec	accuracy=nan
2022-10-13 11:46:32,570 Node[0] Epoch[8] Batch [340-360]	Speed: 30696.01 samples/sec	accuracy=nan
2022-10-13 11:46:34,704 Node[0] Epoch[8] Batch [360-380]	Speed: 30594.04 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661595987, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 9}}
2022-10-13 11:46:35,987 Node[0] Epoch[8] Time cost=41.869
:::MLLOG {"namespace": "", "time_ms": 1665661595988, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30599.691524900612}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1665661595988, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30599.691524900612, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661595988, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 10}}
2022-10-13 11:46:38,233 Node[0] Epoch[9] Batch [0-20]	Speed: 30614.75 samples/sec	accuracy=nan
2022-10-13 11:46:40,360 Node[0] Epoch[9] Batch [20-40]	Speed: 30691.92 samples/sec	accuracy=nan
2022-10-13 11:46:42,489 Node[0] Epoch[9] Batch [40-60]	Speed: 30670.82 samples/sec	accuracy=nan
2022-10-13 11:46:44,620 Node[0] Epoch[9] Batch [60-80]	Speed: 30627.68 samples/sec	accuracy=nan
2022-10-13 11:46:46,750 Node[0] Epoch[9] Batch [80-100]	Speed: 30642.90 samples/sec	accuracy=nan
2022-10-13 11:46:48,872 Node[0] Epoch[9] Batch [100-120]	Speed: 30775.24 samples/sec	accuracy=nan
2022-10-13 11:46:51,006 Node[0] Epoch[9] Batch [120-140]	Speed: 30576.94 samples/sec	accuracy=nan
2022-10-13 11:46:53,035 Node[0] Epoch[9] Batch [140-160]	Speed: 32181.36 samples/sec	accuracy=nan
2022-10-13 11:46:55,257 Node[0] Epoch[9] Batch [160-180]	Speed: 29373.52 samples/sec	accuracy=nan
2022-10-13 11:46:57,384 Node[0] Epoch[9] Batch [180-200]	Speed: 30693.07 samples/sec	accuracy=nan
2022-10-13 11:46:59,512 Node[0] Epoch[9] Batch [200-220]	Speed: 30682.10 samples/sec	accuracy=nan
2022-10-13 11:47:01,640 Node[0] Epoch[9] Batch [220-240]	Speed: 30670.58 samples/sec	accuracy=nan
2022-10-13 11:47:03,767 Node[0] Epoch[9] Batch [240-260]	Speed: 30694.37 samples/sec	accuracy=nan
2022-10-13 11:47:05,898 Node[0] Epoch[9] Batch [260-280]	Speed: 30627.29 samples/sec	accuracy=nan
2022-10-13 11:47:08,027 Node[0] Epoch[9] Batch [280-300]	Speed: 30666.68 samples/sec	accuracy=nan
2022-10-13 11:47:10,160 Node[0] Epoch[9] Batch [300-320]	Speed: 30608.28 samples/sec	accuracy=nan
2022-10-13 11:47:12,293 Node[0] Epoch[9] Batch [320-340]	Speed: 30611.10 samples/sec	accuracy=nan
2022-10-13 11:47:14,424 Node[0] Epoch[9] Batch [340-360]	Speed: 30632.71 samples/sec	accuracy=nan
2022-10-13 11:47:16,550 Node[0] Epoch[9] Batch [360-380]	Speed: 30699.07 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661637822, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 10}}
2022-10-13 11:47:17,822 Node[0] Epoch[9] Time cost=41.834
:::MLLOG {"namespace": "", "time_ms": 1665661637822, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30625.097785087106}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1665661637822, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30625.097785087106, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661637822, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 11}}
2022-10-13 11:47:20,069 Node[0] Epoch[10] Batch [0-20]	Speed: 30607.27 samples/sec	accuracy=nan
2022-10-13 11:47:22,199 Node[0] Epoch[10] Batch [20-40]	Speed: 30646.13 samples/sec	accuracy=nan
2022-10-13 11:47:24,325 Node[0] Epoch[10] Batch [40-60]	Speed: 30712.57 samples/sec	accuracy=nan
2022-10-13 11:47:26,453 Node[0] Epoch[10] Batch [60-80]	Speed: 30674.34 samples/sec	accuracy=nan
2022-10-13 11:47:28,585 Node[0] Epoch[10] Batch [80-100]	Speed: 30612.12 samples/sec	accuracy=nan
2022-10-13 11:47:30,719 Node[0] Epoch[10] Batch [100-120]	Speed: 30592.62 samples/sec	accuracy=nan
2022-10-13 11:47:32,850 Node[0] Epoch[10] Batch [120-140]	Speed: 30633.99 samples/sec	accuracy=nan
2022-10-13 11:47:34,977 Node[0] Epoch[10] Batch [140-160]	Speed: 30685.99 samples/sec	accuracy=nan
2022-10-13 11:47:37,109 Node[0] Epoch[10] Batch [160-180]	Speed: 30627.62 samples/sec	accuracy=nan
2022-10-13 11:47:39,241 Node[0] Epoch[10] Batch [180-200]	Speed: 30612.95 samples/sec	accuracy=nan
2022-10-13 11:47:41,368 Node[0] Epoch[10] Batch [200-220]	Speed: 30688.86 samples/sec	accuracy=nan
2022-10-13 11:47:43,493 Node[0] Epoch[10] Batch [220-240]	Speed: 30721.58 samples/sec	accuracy=nan
2022-10-13 11:47:45,621 Node[0] Epoch[10] Batch [240-260]	Speed: 30682.59 samples/sec	accuracy=nan
2022-10-13 11:47:47,756 Node[0] Epoch[10] Batch [260-280]	Speed: 30577.61 samples/sec	accuracy=nan
2022-10-13 11:47:49,883 Node[0] Epoch[10] Batch [280-300]	Speed: 30689.73 samples/sec	accuracy=nan
2022-10-13 11:47:52,012 Node[0] Epoch[10] Batch [300-320]	Speed: 30664.45 samples/sec	accuracy=nan
2022-10-13 11:47:54,143 Node[0] Epoch[10] Batch [320-340]	Speed: 30632.69 samples/sec	accuracy=nan
2022-10-13 11:47:56,075 Node[0] Epoch[10] Batch [340-360]	Speed: 33791.01 samples/sec	accuracy=nan
2022-10-13 11:47:58,397 Node[0] Epoch[10] Batch [360-380]	Speed: 28104.90 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661679670, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 11}}
2022-10-13 11:47:59,670 Node[0] Epoch[10] Time cost=41.848
:::MLLOG {"namespace": "", "time_ms": 1665661679670, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30614.97340698135}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1665661679670, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30614.97340698135, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661679771, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 11}}
2022-10-13 11:48:00,560 Node[0] Epoch[10] Validation-accuracy=0.527831
2022-10-13 11:48:00,560 Node[0] Epoch[10] Validation-correct-count=1100.000000
2022-10-13 11:48:00,560 Node[0] Epoch[10] Validation-total-count=2084.000000
:::MLLOG {"namespace": "", "time_ms": 1665661680602, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1665661680602, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.53156, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1665661680602, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1665661680605, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 12, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665661680606, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 12}}
2022-10-13 11:48:02,934 Node[0] Epoch[11] Batch [0-20]	Speed: 28221.58 samples/sec	accuracy=nan
2022-10-13 11:48:05,062 Node[0] Epoch[11] Batch [20-40]	Speed: 30667.51 samples/sec	accuracy=nan
2022-10-13 11:48:07,195 Node[0] Epoch[11] Batch [40-60]	Speed: 30614.82 samples/sec	accuracy=nan
2022-10-13 11:48:09,323 Node[0] Epoch[11] Batch [60-80]	Speed: 30673.15 samples/sec	accuracy=nan
2022-10-13 11:48:11,456 Node[0] Epoch[11] Batch [80-100]	Speed: 30597.43 samples/sec	accuracy=nan
2022-10-13 11:48:13,581 Node[0] Epoch[11] Batch [100-120]	Speed: 30722.59 samples/sec	accuracy=nan
2022-10-13 11:48:15,711 Node[0] Epoch[11] Batch [120-140]	Speed: 30656.35 samples/sec	accuracy=nan
2022-10-13 11:48:17,840 Node[0] Epoch[11] Batch [140-160]	Speed: 30649.92 samples/sec	accuracy=nan
2022-10-13 11:48:19,967 Node[0] Epoch[11] Batch [160-180]	Speed: 30704.57 samples/sec	accuracy=nan
2022-10-13 11:48:22,097 Node[0] Epoch[11] Batch [180-200]	Speed: 30647.13 samples/sec	accuracy=nan
2022-10-13 11:48:24,230 Node[0] Epoch[11] Batch [200-220]	Speed: 30604.69 samples/sec	accuracy=nan
2022-10-13 11:48:26,362 Node[0] Epoch[11] Batch [220-240]	Speed: 30615.16 samples/sec	accuracy=nan
2022-10-13 11:48:28,490 Node[0] Epoch[11] Batch [240-260]	Speed: 30676.54 samples/sec	accuracy=nan
2022-10-13 11:48:30,623 Node[0] Epoch[11] Batch [260-280]	Speed: 30609.09 samples/sec	accuracy=nan
2022-10-13 11:48:32,751 Node[0] Epoch[11] Batch [280-300]	Speed: 30670.41 samples/sec	accuracy=nan
2022-10-13 11:48:34,887 Node[0] Epoch[11] Batch [300-320]	Speed: 30568.57 samples/sec	accuracy=nan
2022-10-13 11:48:37,014 Node[0] Epoch[11] Batch [320-340]	Speed: 30687.70 samples/sec	accuracy=nan
2022-10-13 11:48:39,142 Node[0] Epoch[11] Batch [340-360]	Speed: 30673.83 samples/sec	accuracy=nan
2022-10-13 11:48:41,270 Node[0] Epoch[11] Batch [360-380]	Speed: 30671.26 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661722546, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 12}}
2022-10-13 11:48:42,547 Node[0] Epoch[11] Time cost=41.940
:::MLLOG {"namespace": "", "time_ms": 1665661722547, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30547.288783227374}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1665661722547, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30547.288783227374, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661722547, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 13}}
2022-10-13 11:48:44,790 Node[0] Epoch[12] Batch [0-20]	Speed: 30748.03 samples/sec	accuracy=nan
2022-10-13 11:48:46,915 Node[0] Epoch[12] Batch [20-40]	Speed: 30730.91 samples/sec	accuracy=nan
2022-10-13 11:48:49,045 Node[0] Epoch[12] Batch [40-60]	Speed: 30642.46 samples/sec	accuracy=nan
2022-10-13 11:48:51,173 Node[0] Epoch[12] Batch [60-80]	Speed: 30680.37 samples/sec	accuracy=nan
2022-10-13 11:48:53,307 Node[0] Epoch[12] Batch [80-100]	Speed: 30590.18 samples/sec	accuracy=nan
2022-10-13 11:48:55,437 Node[0] Epoch[12] Batch [100-120]	Speed: 30650.18 samples/sec	accuracy=nan
2022-10-13 11:48:57,568 Node[0] Epoch[12] Batch [120-140]	Speed: 30625.59 samples/sec	accuracy=nan
2022-10-13 11:48:59,699 Node[0] Epoch[12] Batch [140-160]	Speed: 30637.05 samples/sec	accuracy=nan
2022-10-13 11:49:01,826 Node[0] Epoch[12] Batch [160-180]	Speed: 30685.05 samples/sec	accuracy=nan
2022-10-13 11:49:03,954 Node[0] Epoch[12] Batch [180-200]	Speed: 30679.43 samples/sec	accuracy=nan
2022-10-13 11:49:06,089 Node[0] Epoch[12] Batch [200-220]	Speed: 30580.14 samples/sec	accuracy=nan
2022-10-13 11:49:08,222 Node[0] Epoch[12] Batch [220-240]	Speed: 30607.81 samples/sec	accuracy=nan
2022-10-13 11:49:10,352 Node[0] Epoch[12] Batch [240-260]	Speed: 30644.56 samples/sec	accuracy=nan
2022-10-13 11:49:12,483 Node[0] Epoch[12] Batch [260-280]	Speed: 30626.11 samples/sec	accuracy=nan
2022-10-13 11:49:14,612 Node[0] Epoch[12] Batch [280-300]	Speed: 30671.12 samples/sec	accuracy=nan
2022-10-13 11:49:16,738 Node[0] Epoch[12] Batch [300-320]	Speed: 30697.17 samples/sec	accuracy=nan
2022-10-13 11:49:18,863 Node[0] Epoch[12] Batch [320-340]	Speed: 30732.74 samples/sec	accuracy=nan
2022-10-13 11:49:20,998 Node[0] Epoch[12] Batch [340-360]	Speed: 30570.84 samples/sec	accuracy=nan
2022-10-13 11:49:23,127 Node[0] Epoch[12] Batch [360-380]	Speed: 30655.36 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661764404, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 13}}
2022-10-13 11:49:24,405 Node[0] Epoch[12] Time cost=41.857
:::MLLOG {"namespace": "", "time_ms": 1665661764405, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30607.871530330045}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1665661764405, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30607.871530330045, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661764405, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 14}}
2022-10-13 11:49:26,649 Node[0] Epoch[13] Batch [0-20]	Speed: 30627.71 samples/sec	accuracy=nan
2022-10-13 11:49:28,781 Node[0] Epoch[13] Batch [20-40]	Speed: 30618.48 samples/sec	accuracy=nan
2022-10-13 11:49:30,906 Node[0] Epoch[13] Batch [40-60]	Speed: 30723.24 samples/sec	accuracy=nan
2022-10-13 11:49:33,032 Node[0] Epoch[13] Batch [60-80]	Speed: 30702.24 samples/sec	accuracy=nan
2022-10-13 11:49:35,169 Node[0] Epoch[13] Batch [80-100]	Speed: 30550.70 samples/sec	accuracy=nan
2022-10-13 11:49:37,298 Node[0] Epoch[13] Batch [100-120]	Speed: 30664.93 samples/sec	accuracy=nan
2022-10-13 11:49:39,424 Node[0] Epoch[13] Batch [120-140]	Speed: 30697.43 samples/sec	accuracy=nan
2022-10-13 11:49:41,559 Node[0] Epoch[13] Batch [140-160]	Speed: 30581.66 samples/sec	accuracy=nan
2022-10-13 11:49:43,695 Node[0] Epoch[13] Batch [160-180]	Speed: 30564.44 samples/sec	accuracy=nan
2022-10-13 11:49:45,832 Node[0] Epoch[13] Batch [180-200]	Speed: 30541.50 samples/sec	accuracy=nan
2022-10-13 11:49:47,961 Node[0] Epoch[13] Batch [200-220]	Speed: 30655.70 samples/sec	accuracy=nan
2022-10-13 11:49:50,089 Node[0] Epoch[13] Batch [220-240]	Speed: 30677.51 samples/sec	accuracy=nan
2022-10-13 11:49:52,215 Node[0] Epoch[13] Batch [240-260]	Speed: 30705.48 samples/sec	accuracy=nan
2022-10-13 11:49:54,348 Node[0] Epoch[13] Batch [260-280]	Speed: 30604.50 samples/sec	accuracy=nan
2022-10-13 11:49:56,476 Node[0] Epoch[13] Batch [280-300]	Speed: 30686.66 samples/sec	accuracy=nan
2022-10-13 11:49:58,603 Node[0] Epoch[13] Batch [300-320]	Speed: 30683.95 samples/sec	accuracy=nan
2022-10-13 11:50:00,732 Node[0] Epoch[13] Batch [320-340]	Speed: 30666.72 samples/sec	accuracy=nan
2022-10-13 11:50:02,860 Node[0] Epoch[13] Batch [340-360]	Speed: 30675.06 samples/sec	accuracy=nan
2022-10-13 11:50:04,987 Node[0] Epoch[13] Batch [360-380]	Speed: 30691.68 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661806261, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 14}}
2022-10-13 11:50:06,261 Node[0] Epoch[13] Time cost=41.856
:::MLLOG {"namespace": "", "time_ms": 1665661806262, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30608.885359343105}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1665661806262, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30608.885359343105, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661806262, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 15}}
2022-10-13 11:50:08,505 Node[0] Epoch[14] Batch [0-20]	Speed: 30621.86 samples/sec	accuracy=nan
2022-10-13 11:50:10,637 Node[0] Epoch[14] Batch [20-40]	Speed: 30616.54 samples/sec	accuracy=nan
2022-10-13 11:50:12,768 Node[0] Epoch[14] Batch [40-60]	Speed: 30636.53 samples/sec	accuracy=nan
2022-10-13 11:50:14,896 Node[0] Epoch[14] Batch [60-80]	Speed: 30674.22 samples/sec	accuracy=nan
2022-10-13 11:50:17,026 Node[0] Epoch[14] Batch [80-100]	Speed: 30640.89 samples/sec	accuracy=nan
2022-10-13 11:50:19,156 Node[0] Epoch[14] Batch [100-120]	Speed: 30649.85 samples/sec	accuracy=nan
2022-10-13 11:50:21,290 Node[0] Epoch[14] Batch [120-140]	Speed: 30591.63 samples/sec	accuracy=nan
2022-10-13 11:50:23,424 Node[0] Epoch[14] Batch [140-160]	Speed: 30598.13 samples/sec	accuracy=nan
2022-10-13 11:50:25,560 Node[0] Epoch[14] Batch [160-180]	Speed: 30558.49 samples/sec	accuracy=nan
2022-10-13 11:50:27,692 Node[0] Epoch[14] Batch [180-200]	Speed: 30619.11 samples/sec	accuracy=nan
2022-10-13 11:50:29,813 Node[0] Epoch[14] Batch [200-220]	Speed: 30768.98 samples/sec	accuracy=nan
2022-10-13 11:50:31,942 Node[0] Epoch[14] Batch [220-240]	Speed: 30668.55 samples/sec	accuracy=nan
2022-10-13 11:50:34,070 Node[0] Epoch[14] Batch [240-260]	Speed: 30683.17 samples/sec	accuracy=nan
2022-10-13 11:50:36,196 Node[0] Epoch[14] Batch [260-280]	Speed: 30702.67 samples/sec	accuracy=nan
2022-10-13 11:50:38,322 Node[0] Epoch[14] Batch [280-300]	Speed: 30705.56 samples/sec	accuracy=nan
2022-10-13 11:50:40,455 Node[0] Epoch[14] Batch [300-320]	Speed: 30594.68 samples/sec	accuracy=nan
2022-10-13 11:50:42,583 Node[0] Epoch[14] Batch [320-340]	Speed: 30678.61 samples/sec	accuracy=nan
2022-10-13 11:50:44,719 Node[0] Epoch[14] Batch [340-360]	Speed: 30569.32 samples/sec	accuracy=nan
2022-10-13 11:50:46,849 Node[0] Epoch[14] Batch [360-380]	Speed: 30647.01 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661848127, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 15}}
2022-10-13 11:50:48,127 Node[0] Epoch[14] Time cost=41.865
:::MLLOG {"namespace": "", "time_ms": 1665661848127, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30602.182257994424}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1665661848127, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30602.182257994424, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661848228, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 15}}
2022-10-13 11:50:49,042 Node[0] Epoch[14] Validation-accuracy=0.599136
2022-10-13 11:50:49,042 Node[0] Epoch[14] Validation-correct-count=1248.000000
2022-10-13 11:50:49,042 Node[0] Epoch[14] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1665661849059, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1665661849060, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.602, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1665661849060, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1665661849061, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 16, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665661849062, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 16}}
2022-10-13 11:50:51,303 Node[0] Epoch[15] Batch [0-20]	Speed: 29352.75 samples/sec	accuracy=nan
2022-10-13 11:50:53,428 Node[0] Epoch[15] Batch [20-40]	Speed: 30724.30 samples/sec	accuracy=nan
2022-10-13 11:50:55,562 Node[0] Epoch[15] Batch [40-60]	Speed: 30583.66 samples/sec	accuracy=nan
2022-10-13 11:50:57,688 Node[0] Epoch[15] Batch [60-80]	Speed: 30707.13 samples/sec	accuracy=nan
2022-10-13 11:50:59,817 Node[0] Epoch[15] Batch [80-100]	Speed: 30663.32 samples/sec	accuracy=nan
2022-10-13 11:51:01,760 Node[0] Epoch[15] Batch [100-120]	Speed: 33592.37 samples/sec	accuracy=nan
2022-10-13 11:51:04,086 Node[0] Epoch[15] Batch [120-140]	Speed: 28064.88 samples/sec	accuracy=nan
2022-10-13 11:51:06,217 Node[0] Epoch[15] Batch [140-160]	Speed: 30643.40 samples/sec	accuracy=nan
2022-10-13 11:51:08,347 Node[0] Epoch[15] Batch [160-180]	Speed: 30641.74 samples/sec	accuracy=nan
2022-10-13 11:51:10,477 Node[0] Epoch[15] Batch [180-200]	Speed: 30650.38 samples/sec	accuracy=nan
2022-10-13 11:51:12,606 Node[0] Epoch[15] Batch [200-220]	Speed: 30659.78 samples/sec	accuracy=nan
2022-10-13 11:51:14,731 Node[0] Epoch[15] Batch [220-240]	Speed: 30723.29 samples/sec	accuracy=nan
2022-10-13 11:51:16,863 Node[0] Epoch[15] Batch [240-260]	Speed: 30611.37 samples/sec	accuracy=nan
2022-10-13 11:51:18,992 Node[0] Epoch[15] Batch [260-280]	Speed: 30671.30 samples/sec	accuracy=nan
2022-10-13 11:51:21,114 Node[0] Epoch[15] Batch [280-300]	Speed: 30755.77 samples/sec	accuracy=nan
2022-10-13 11:51:23,247 Node[0] Epoch[15] Batch [300-320]	Speed: 30613.36 samples/sec	accuracy=nan
2022-10-13 11:51:25,382 Node[0] Epoch[15] Batch [320-340]	Speed: 30576.03 samples/sec	accuracy=nan
2022-10-13 11:51:27,518 Node[0] Epoch[15] Batch [340-360]	Speed: 30563.88 samples/sec	accuracy=nan
2022-10-13 11:51:29,644 Node[0] Epoch[15] Batch [360-380]	Speed: 30707.37 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661890923, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 16}}
2022-10-13 11:51:30,923 Node[0] Epoch[15] Time cost=41.861
:::MLLOG {"namespace": "", "time_ms": 1665661890923, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30605.40793550679}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1665661890923, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30605.40793550679, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661890924, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 17}}
2022-10-13 11:51:33,166 Node[0] Epoch[16] Batch [0-20]	Speed: 30644.51 samples/sec	accuracy=nan
2022-10-13 11:51:35,296 Node[0] Epoch[16] Batch [20-40]	Speed: 30645.57 samples/sec	accuracy=nan
2022-10-13 11:51:37,425 Node[0] Epoch[16] Batch [40-60]	Speed: 30674.12 samples/sec	accuracy=nan
2022-10-13 11:51:39,552 Node[0] Epoch[16] Batch [60-80]	Speed: 30687.92 samples/sec	accuracy=nan
2022-10-13 11:51:41,679 Node[0] Epoch[16] Batch [80-100]	Speed: 30695.14 samples/sec	accuracy=nan
2022-10-13 11:51:43,804 Node[0] Epoch[16] Batch [100-120]	Speed: 30706.58 samples/sec	accuracy=nan
2022-10-13 11:51:45,939 Node[0] Epoch[16] Batch [120-140]	Speed: 30587.23 samples/sec	accuracy=nan
2022-10-13 11:51:48,073 Node[0] Epoch[16] Batch [140-160]	Speed: 30584.50 samples/sec	accuracy=nan
2022-10-13 11:51:50,201 Node[0] Epoch[16] Batch [160-180]	Speed: 30674.91 samples/sec	accuracy=nan
2022-10-13 11:51:52,328 Node[0] Epoch[16] Batch [180-200]	Speed: 30699.31 samples/sec	accuracy=nan
2022-10-13 11:51:54,461 Node[0] Epoch[16] Batch [200-220]	Speed: 30601.28 samples/sec	accuracy=nan
2022-10-13 11:51:56,588 Node[0] Epoch[16] Batch [220-240]	Speed: 30692.77 samples/sec	accuracy=nan
2022-10-13 11:51:58,715 Node[0] Epoch[16] Batch [240-260]	Speed: 30695.60 samples/sec	accuracy=nan
2022-10-13 11:52:00,843 Node[0] Epoch[16] Batch [260-280]	Speed: 30675.54 samples/sec	accuracy=nan
2022-10-13 11:52:02,971 Node[0] Epoch[16] Batch [280-300]	Speed: 30667.47 samples/sec	accuracy=nan
2022-10-13 11:52:05,105 Node[0] Epoch[16] Batch [300-320]	Speed: 30600.36 samples/sec	accuracy=nan
2022-10-13 11:52:07,230 Node[0] Epoch[16] Batch [320-340]	Speed: 30706.81 samples/sec	accuracy=nan
2022-10-13 11:52:09,360 Node[0] Epoch[16] Batch [340-360]	Speed: 30648.20 samples/sec	accuracy=nan
2022-10-13 11:52:11,490 Node[0] Epoch[16] Batch [360-380]	Speed: 30648.29 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661932569, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 17}}
2022-10-13 11:52:12,569 Node[0] Epoch[16] Time cost=41.645
:::MLLOG {"namespace": "", "time_ms": 1665661932569, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30764.04703843218}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1665661932570, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30764.04703843218, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661932570, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 18}}
2022-10-13 11:52:15,005 Node[0] Epoch[17] Batch [0-20]	Speed: 30660.63 samples/sec	accuracy=nan
2022-10-13 11:52:17,137 Node[0] Epoch[17] Batch [20-40]	Speed: 30610.68 samples/sec	accuracy=nan
2022-10-13 11:52:19,269 Node[0] Epoch[17] Batch [40-60]	Speed: 30621.79 samples/sec	accuracy=nan
2022-10-13 11:52:21,400 Node[0] Epoch[17] Batch [60-80]	Speed: 30638.82 samples/sec	accuracy=nan
2022-10-13 11:52:23,525 Node[0] Epoch[17] Batch [80-100]	Speed: 30720.07 samples/sec	accuracy=nan
2022-10-13 11:52:25,653 Node[0] Epoch[17] Batch [100-120]	Speed: 30678.71 samples/sec	accuracy=nan
2022-10-13 11:52:27,786 Node[0] Epoch[17] Batch [120-140]	Speed: 30597.27 samples/sec	accuracy=nan
2022-10-13 11:52:29,916 Node[0] Epoch[17] Batch [140-160]	Speed: 30643.08 samples/sec	accuracy=nan
2022-10-13 11:52:32,049 Node[0] Epoch[17] Batch [160-180]	Speed: 30613.04 samples/sec	accuracy=nan
2022-10-13 11:52:34,177 Node[0] Epoch[17] Batch [180-200]	Speed: 30676.94 samples/sec	accuracy=nan
2022-10-13 11:52:36,305 Node[0] Epoch[17] Batch [200-220]	Speed: 30669.19 samples/sec	accuracy=nan
2022-10-13 11:52:38,432 Node[0] Epoch[17] Batch [220-240]	Speed: 30698.65 samples/sec	accuracy=nan
2022-10-13 11:52:40,558 Node[0] Epoch[17] Batch [240-260]	Speed: 30705.38 samples/sec	accuracy=nan
2022-10-13 11:52:42,684 Node[0] Epoch[17] Batch [260-280]	Speed: 30708.77 samples/sec	accuracy=nan
2022-10-13 11:52:44,811 Node[0] Epoch[17] Batch [280-300]	Speed: 30681.54 samples/sec	accuracy=nan
2022-10-13 11:52:46,939 Node[0] Epoch[17] Batch [300-320]	Speed: 30682.07 samples/sec	accuracy=nan
2022-10-13 11:52:49,068 Node[0] Epoch[17] Batch [320-340]	Speed: 30663.34 samples/sec	accuracy=nan
2022-10-13 11:52:51,195 Node[0] Epoch[17] Batch [340-360]	Speed: 30689.02 samples/sec	accuracy=nan
2022-10-13 11:52:53,324 Node[0] Epoch[17] Batch [360-380]	Speed: 30658.66 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665661974599, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 18}}
2022-10-13 11:52:54,599 Node[0] Epoch[17] Time cost=42.029
:::MLLOG {"namespace": "", "time_ms": 1665661974599, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30482.921159665104}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1665661974599, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30482.921159665104, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665661974599, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 19}}
2022-10-13 11:52:56,843 Node[0] Epoch[18] Batch [0-20]	Speed: 30652.02 samples/sec	accuracy=nan
2022-10-13 11:52:58,969 Node[0] Epoch[18] Batch [20-40]	Speed: 30703.23 samples/sec	accuracy=nan
2022-10-13 11:53:01,002 Node[0] Epoch[18] Batch [40-60]	Speed: 32103.43 samples/sec	accuracy=nan
2022-10-13 11:53:03,238 Node[0] Epoch[18] Batch [60-80]	Speed: 29204.36 samples/sec	accuracy=nan
2022-10-13 11:53:05,370 Node[0] Epoch[18] Batch [80-100]	Speed: 30617.62 samples/sec	accuracy=nan
2022-10-13 11:53:07,502 Node[0] Epoch[18] Batch [100-120]	Speed: 30613.89 samples/sec	accuracy=nan
2022-10-13 11:53:09,627 Node[0] Epoch[18] Batch [120-140]	Speed: 30719.74 samples/sec	accuracy=nan
2022-10-13 11:53:11,756 Node[0] Epoch[18] Batch [140-160]	Speed: 30659.81 samples/sec	accuracy=nan
2022-10-13 11:53:13,893 Node[0] Epoch[18] Batch [160-180]	Speed: 30560.21 samples/sec	accuracy=nan
2022-10-13 11:53:16,019 Node[0] Epoch[18] Batch [180-200]	Speed: 30699.73 samples/sec	accuracy=nan
2022-10-13 11:53:18,150 Node[0] Epoch[18] Batch [200-220]	Speed: 30637.23 samples/sec	accuracy=nan
2022-10-13 11:53:20,278 Node[0] Epoch[18] Batch [220-240]	Speed: 30673.12 samples/sec	accuracy=nan
2022-10-13 11:53:22,309 Node[0] Epoch[18] Batch [240-260]	Speed: 32140.86 samples/sec	accuracy=nan
2022-10-13 11:53:24,536 Node[0] Epoch[18] Batch [260-280]	Speed: 29314.71 samples/sec	accuracy=nan
2022-10-13 11:53:26,663 Node[0] Epoch[18] Batch [280-300]	Speed: 30693.44 samples/sec	accuracy=nan
2022-10-13 11:53:28,792 Node[0] Epoch[18] Batch [300-320]	Speed: 30662.40 samples/sec	accuracy=nan
2022-10-13 11:53:30,921 Node[0] Epoch[18] Batch [320-340]	Speed: 30654.49 samples/sec	accuracy=nan
2022-10-13 11:53:33,049 Node[0] Epoch[18] Batch [340-360]	Speed: 30681.01 samples/sec	accuracy=nan
2022-10-13 11:53:35,176 Node[0] Epoch[18] Batch [360-380]	Speed: 30682.00 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662016457, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 19}}
2022-10-13 11:53:36,458 Node[0] Epoch[18] Time cost=41.858
:::MLLOG {"namespace": "", "time_ms": 1665662016458, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30607.325677038072}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1665662016458, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30607.325677038072, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662016558, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 19}}
2022-10-13 11:53:37,312 Node[0] Epoch[18] Validation-accuracy=0.654825
2022-10-13 11:53:37,312 Node[0] Epoch[18] Validation-correct-count=1364.000000
2022-10-13 11:53:37,312 Node[0] Epoch[18] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1665662017379, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1665662017380, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.65, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1665662017380, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1665662017380, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 20, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665662017380, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 20}}
2022-10-13 11:53:39,635 Node[0] Epoch[19] Batch [0-20]	Speed: 29506.13 samples/sec	accuracy=nan
2022-10-13 11:53:41,766 Node[0] Epoch[19] Batch [20-40]	Speed: 30636.81 samples/sec	accuracy=nan
2022-10-13 11:53:43,898 Node[0] Epoch[19] Batch [40-60]	Speed: 30610.64 samples/sec	accuracy=nan
2022-10-13 11:53:46,023 Node[0] Epoch[19] Batch [60-80]	Speed: 30722.40 samples/sec	accuracy=nan
2022-10-13 11:53:48,158 Node[0] Epoch[19] Batch [80-100]	Speed: 30573.98 samples/sec	accuracy=nan
2022-10-13 11:53:50,285 Node[0] Epoch[19] Batch [100-120]	Speed: 30690.27 samples/sec	accuracy=nan
2022-10-13 11:53:52,409 Node[0] Epoch[19] Batch [120-140]	Speed: 30737.92 samples/sec	accuracy=nan
2022-10-13 11:53:54,540 Node[0] Epoch[19] Batch [140-160]	Speed: 30628.02 samples/sec	accuracy=nan
2022-10-13 11:53:56,672 Node[0] Epoch[19] Batch [160-180]	Speed: 30629.98 samples/sec	accuracy=nan
2022-10-13 11:53:58,802 Node[0] Epoch[19] Batch [180-200]	Speed: 30643.42 samples/sec	accuracy=nan
2022-10-13 11:54:00,931 Node[0] Epoch[19] Batch [200-220]	Speed: 30660.49 samples/sec	accuracy=nan
2022-10-13 11:54:03,063 Node[0] Epoch[19] Batch [220-240]	Speed: 30616.12 samples/sec	accuracy=nan
2022-10-13 11:54:05,189 Node[0] Epoch[19] Batch [240-260]	Speed: 30711.41 samples/sec	accuracy=nan
2022-10-13 11:54:07,317 Node[0] Epoch[19] Batch [260-280]	Speed: 30669.88 samples/sec	accuracy=nan
2022-10-13 11:54:09,447 Node[0] Epoch[19] Batch [280-300]	Speed: 30646.65 samples/sec	accuracy=nan
2022-10-13 11:54:11,579 Node[0] Epoch[19] Batch [300-320]	Speed: 30623.98 samples/sec	accuracy=nan
2022-10-13 11:54:13,710 Node[0] Epoch[19] Batch [320-340]	Speed: 30632.69 samples/sec	accuracy=nan
2022-10-13 11:54:15,838 Node[0] Epoch[19] Batch [340-360]	Speed: 30679.75 samples/sec	accuracy=nan
2022-10-13 11:54:17,971 Node[0] Epoch[19] Batch [360-380]	Speed: 30608.80 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662059242, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 20}}
2022-10-13 11:54:19,243 Node[0] Epoch[19] Time cost=41.862
:::MLLOG {"namespace": "", "time_ms": 1665662059243, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30604.588335994715}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1665662059243, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30604.588335994715, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662059243, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 21}}
2022-10-13 11:54:21,490 Node[0] Epoch[20] Batch [0-20]	Speed: 30606.43 samples/sec	accuracy=nan
2022-10-13 11:54:23,619 Node[0] Epoch[20] Batch [20-40]	Speed: 30663.16 samples/sec	accuracy=nan
2022-10-13 11:54:25,749 Node[0] Epoch[20] Batch [40-60]	Speed: 30648.67 samples/sec	accuracy=nan
2022-10-13 11:54:27,880 Node[0] Epoch[20] Batch [60-80]	Speed: 30634.27 samples/sec	accuracy=nan
2022-10-13 11:54:30,013 Node[0] Epoch[20] Batch [80-100]	Speed: 30596.78 samples/sec	accuracy=nan
2022-10-13 11:54:32,145 Node[0] Epoch[20] Batch [100-120]	Speed: 30627.08 samples/sec	accuracy=nan
2022-10-13 11:54:34,174 Node[0] Epoch[20] Batch [120-140]	Speed: 32171.57 samples/sec	accuracy=nan
2022-10-13 11:54:36,401 Node[0] Epoch[20] Batch [140-160]	Speed: 29309.29 samples/sec	accuracy=nan
2022-10-13 11:54:38,530 Node[0] Epoch[20] Batch [160-180]	Speed: 30665.15 samples/sec	accuracy=nan
2022-10-13 11:54:40,658 Node[0] Epoch[20] Batch [180-200]	Speed: 30668.00 samples/sec	accuracy=nan
2022-10-13 11:54:42,793 Node[0] Epoch[20] Batch [200-220]	Speed: 30587.19 samples/sec	accuracy=nan
2022-10-13 11:54:44,923 Node[0] Epoch[20] Batch [220-240]	Speed: 30636.87 samples/sec	accuracy=nan
2022-10-13 11:54:47,056 Node[0] Epoch[20] Batch [240-260]	Speed: 30602.28 samples/sec	accuracy=nan
2022-10-13 11:54:49,192 Node[0] Epoch[20] Batch [260-280]	Speed: 30571.53 samples/sec	accuracy=nan
2022-10-13 11:54:51,320 Node[0] Epoch[20] Batch [280-300]	Speed: 30669.96 samples/sec	accuracy=nan
2022-10-13 11:54:53,450 Node[0] Epoch[20] Batch [300-320]	Speed: 30658.78 samples/sec	accuracy=nan
2022-10-13 11:54:55,577 Node[0] Epoch[20] Batch [320-340]	Speed: 30689.54 samples/sec	accuracy=nan
2022-10-13 11:54:57,706 Node[0] Epoch[20] Batch [340-360]	Speed: 30652.56 samples/sec	accuracy=nan
2022-10-13 11:54:59,830 Node[0] Epoch[20] Batch [360-380]	Speed: 30731.42 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662101107, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 21}}
2022-10-13 11:55:01,107 Node[0] Epoch[20] Time cost=41.864
:::MLLOG {"namespace": "", "time_ms": 1665662101107, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30603.030834422105}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1665662101107, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30603.030834422105, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662101107, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 22}}
2022-10-13 11:55:03,354 Node[0] Epoch[21] Batch [0-20]	Speed: 30666.87 samples/sec	accuracy=nan
2022-10-13 11:55:05,481 Node[0] Epoch[21] Batch [20-40]	Speed: 30686.86 samples/sec	accuracy=nan
2022-10-13 11:55:07,614 Node[0] Epoch[21] Batch [40-60]	Speed: 30605.83 samples/sec	accuracy=nan
2022-10-13 11:55:09,748 Node[0] Epoch[21] Batch [60-80]	Speed: 30595.86 samples/sec	accuracy=nan
2022-10-13 11:55:11,872 Node[0] Epoch[21] Batch [80-100]	Speed: 30726.62 samples/sec	accuracy=nan
2022-10-13 11:55:14,001 Node[0] Epoch[21] Batch [100-120]	Speed: 30667.91 samples/sec	accuracy=nan
2022-10-13 11:55:16,128 Node[0] Epoch[21] Batch [120-140]	Speed: 30683.47 samples/sec	accuracy=nan
2022-10-13 11:55:18,260 Node[0] Epoch[21] Batch [140-160]	Speed: 30624.24 samples/sec	accuracy=nan
2022-10-13 11:55:20,387 Node[0] Epoch[21] Batch [160-180]	Speed: 30686.38 samples/sec	accuracy=nan
2022-10-13 11:55:22,518 Node[0] Epoch[21] Batch [180-200]	Speed: 30637.73 samples/sec	accuracy=nan
2022-10-13 11:55:24,651 Node[0] Epoch[21] Batch [200-220]	Speed: 30598.17 samples/sec	accuracy=nan
2022-10-13 11:55:26,782 Node[0] Epoch[21] Batch [220-240]	Speed: 30636.05 samples/sec	accuracy=nan
2022-10-13 11:55:28,912 Node[0] Epoch[21] Batch [240-260]	Speed: 30651.20 samples/sec	accuracy=nan
2022-10-13 11:55:31,035 Node[0] Epoch[21] Batch [260-280]	Speed: 30750.86 samples/sec	accuracy=nan
2022-10-13 11:55:33,164 Node[0] Epoch[21] Batch [280-300]	Speed: 30655.64 samples/sec	accuracy=nan
2022-10-13 11:55:35,295 Node[0] Epoch[21] Batch [300-320]	Speed: 30634.93 samples/sec	accuracy=nan
2022-10-13 11:55:37,428 Node[0] Epoch[21] Batch [320-340]	Speed: 30617.69 samples/sec	accuracy=nan
2022-10-13 11:55:39,553 Node[0] Epoch[21] Batch [340-360]	Speed: 30707.01 samples/sec	accuracy=nan
2022-10-13 11:55:41,688 Node[0] Epoch[21] Batch [360-380]	Speed: 30580.64 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662142965, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 22}}
2022-10-13 11:55:42,965 Node[0] Epoch[21] Time cost=41.858
:::MLLOG {"namespace": "", "time_ms": 1665662142965, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30607.57881386342}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1665662142965, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30607.57881386342, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662142966, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 23}}
2022-10-13 11:55:45,209 Node[0] Epoch[22] Batch [0-20]	Speed: 30638.15 samples/sec	accuracy=nan
2022-10-13 11:55:47,337 Node[0] Epoch[22] Batch [20-40]	Speed: 30681.56 samples/sec	accuracy=nan
2022-10-13 11:55:49,466 Node[0] Epoch[22] Batch [40-60]	Speed: 30654.12 samples/sec	accuracy=nan
2022-10-13 11:55:51,601 Node[0] Epoch[22] Batch [60-80]	Speed: 30579.32 samples/sec	accuracy=nan
2022-10-13 11:55:53,732 Node[0] Epoch[22] Batch [80-100]	Speed: 30638.13 samples/sec	accuracy=nan
2022-10-13 11:55:55,859 Node[0] Epoch[22] Batch [100-120]	Speed: 30690.08 samples/sec	accuracy=nan
2022-10-13 11:55:57,989 Node[0] Epoch[22] Batch [120-140]	Speed: 30643.58 samples/sec	accuracy=nan
2022-10-13 11:56:00,026 Node[0] Epoch[22] Batch [140-160]	Speed: 32053.53 samples/sec	accuracy=nan
2022-10-13 11:56:02,254 Node[0] Epoch[22] Batch [160-180]	Speed: 29292.55 samples/sec	accuracy=nan
2022-10-13 11:56:04,386 Node[0] Epoch[22] Batch [180-200]	Speed: 30619.44 samples/sec	accuracy=nan
2022-10-13 11:56:06,521 Node[0] Epoch[22] Batch [200-220]	Speed: 30578.02 samples/sec	accuracy=nan
2022-10-13 11:56:08,653 Node[0] Epoch[22] Batch [220-240]	Speed: 30626.84 samples/sec	accuracy=nan
2022-10-13 11:56:10,785 Node[0] Epoch[22] Batch [240-260]	Speed: 30616.10 samples/sec	accuracy=nan
2022-10-13 11:56:12,916 Node[0] Epoch[22] Batch [260-280]	Speed: 30626.68 samples/sec	accuracy=nan
2022-10-13 11:56:15,046 Node[0] Epoch[22] Batch [280-300]	Speed: 30660.31 samples/sec	accuracy=nan
2022-10-13 11:56:17,172 Node[0] Epoch[22] Batch [300-320]	Speed: 30701.15 samples/sec	accuracy=nan
2022-10-13 11:56:19,301 Node[0] Epoch[22] Batch [320-340]	Speed: 30659.50 samples/sec	accuracy=nan
2022-10-13 11:56:21,431 Node[0] Epoch[22] Batch [340-360]	Speed: 30652.41 samples/sec	accuracy=nan
2022-10-13 11:56:23,561 Node[0] Epoch[22] Batch [360-380]	Speed: 30640.77 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662184838, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 23}}
2022-10-13 11:56:24,838 Node[0] Epoch[22] Time cost=41.872
:::MLLOG {"namespace": "", "time_ms": 1665662184838, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30596.895618568815}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1665662184838, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30596.895618568815, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662184939, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 23}}
2022-10-13 11:56:25,753 Node[0] Epoch[22] Validation-accuracy=0.670825
2022-10-13 11:56:25,753 Node[0] Epoch[22] Validation-correct-count=1398.000000
2022-10-13 11:56:25,753 Node[0] Epoch[22] Validation-total-count=2084.000000
:::MLLOG {"namespace": "", "time_ms": 1665662185765, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1665662185766, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.67828, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1665662185766, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1665662185766, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 24, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665662185767, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 24}}
2022-10-13 11:56:28,051 Node[0] Epoch[23] Batch [0-20]	Speed: 29186.26 samples/sec	accuracy=nan
2022-10-13 11:56:30,177 Node[0] Epoch[23] Batch [20-40]	Speed: 30696.64 samples/sec	accuracy=nan
2022-10-13 11:56:32,306 Node[0] Epoch[23] Batch [40-60]	Speed: 30674.30 samples/sec	accuracy=nan
2022-10-13 11:56:34,437 Node[0] Epoch[23] Batch [60-80]	Speed: 30628.14 samples/sec	accuracy=nan
2022-10-13 11:56:36,563 Node[0] Epoch[23] Batch [80-100]	Speed: 30705.53 samples/sec	accuracy=nan
2022-10-13 11:56:38,600 Node[0] Epoch[23] Batch [100-120]	Speed: 32042.29 samples/sec	accuracy=nan
2022-10-13 11:56:40,821 Node[0] Epoch[23] Batch [120-140]	Speed: 29395.26 samples/sec	accuracy=nan
2022-10-13 11:56:42,951 Node[0] Epoch[23] Batch [140-160]	Speed: 30653.23 samples/sec	accuracy=nan
2022-10-13 11:56:45,083 Node[0] Epoch[23] Batch [160-180]	Speed: 30619.43 samples/sec	accuracy=nan
2022-10-13 11:56:47,218 Node[0] Epoch[23] Batch [180-200]	Speed: 30580.72 samples/sec	accuracy=nan
2022-10-13 11:56:49,346 Node[0] Epoch[23] Batch [200-220]	Speed: 30665.68 samples/sec	accuracy=nan
2022-10-13 11:56:51,475 Node[0] Epoch[23] Batch [220-240]	Speed: 30657.31 samples/sec	accuracy=nan
2022-10-13 11:56:53,601 Node[0] Epoch[23] Batch [240-260]	Speed: 30709.60 samples/sec	accuracy=nan
2022-10-13 11:56:55,732 Node[0] Epoch[23] Batch [260-280]	Speed: 30641.43 samples/sec	accuracy=nan
2022-10-13 11:56:57,769 Node[0] Epoch[23] Batch [280-300]	Speed: 32040.19 samples/sec	accuracy=nan
2022-10-13 11:56:59,997 Node[0] Epoch[23] Batch [300-320]	Speed: 29300.67 samples/sec	accuracy=nan
2022-10-13 11:57:02,130 Node[0] Epoch[23] Batch [320-340]	Speed: 30600.60 samples/sec	accuracy=nan
2022-10-13 11:57:04,258 Node[0] Epoch[23] Batch [340-360]	Speed: 30673.84 samples/sec	accuracy=nan
2022-10-13 11:57:06,393 Node[0] Epoch[23] Batch [360-380]	Speed: 30578.21 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662227669, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 24}}
2022-10-13 11:57:07,670 Node[0] Epoch[23] Time cost=41.902
:::MLLOG {"namespace": "", "time_ms": 1665662227670, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30574.993140847535}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1665662227670, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30574.993140847535, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662227670, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 25}}
2022-10-13 11:57:09,914 Node[0] Epoch[24] Batch [0-20]	Speed: 30630.86 samples/sec	accuracy=nan
2022-10-13 11:57:12,044 Node[0] Epoch[24] Batch [20-40]	Speed: 30639.75 samples/sec	accuracy=nan
2022-10-13 11:57:14,173 Node[0] Epoch[24] Batch [40-60]	Speed: 30665.92 samples/sec	accuracy=nan
2022-10-13 11:57:16,302 Node[0] Epoch[24] Batch [60-80]	Speed: 30665.22 samples/sec	accuracy=nan
2022-10-13 11:57:18,430 Node[0] Epoch[24] Batch [80-100]	Speed: 30669.81 samples/sec	accuracy=nan
2022-10-13 11:57:20,567 Node[0] Epoch[24] Batch [100-120]	Speed: 30558.35 samples/sec	accuracy=nan
2022-10-13 11:57:22,697 Node[0] Epoch[24] Batch [120-140]	Speed: 30639.71 samples/sec	accuracy=nan
2022-10-13 11:57:24,829 Node[0] Epoch[24] Batch [140-160]	Speed: 30625.52 samples/sec	accuracy=nan
2022-10-13 11:57:26,957 Node[0] Epoch[24] Batch [160-180]	Speed: 30678.95 samples/sec	accuracy=nan
2022-10-13 11:57:29,085 Node[0] Epoch[24] Batch [180-200]	Speed: 30672.52 samples/sec	accuracy=nan
2022-10-13 11:57:31,217 Node[0] Epoch[24] Batch [200-220]	Speed: 30622.15 samples/sec	accuracy=nan
2022-10-13 11:57:33,342 Node[0] Epoch[24] Batch [220-240]	Speed: 30709.13 samples/sec	accuracy=nan
2022-10-13 11:57:35,476 Node[0] Epoch[24] Batch [240-260]	Speed: 30603.15 samples/sec	accuracy=nan
2022-10-13 11:57:37,604 Node[0] Epoch[24] Batch [260-280]	Speed: 30667.36 samples/sec	accuracy=nan
2022-10-13 11:57:39,740 Node[0] Epoch[24] Batch [280-300]	Speed: 30562.54 samples/sec	accuracy=nan
2022-10-13 11:57:41,868 Node[0] Epoch[24] Batch [300-320]	Speed: 30676.18 samples/sec	accuracy=nan
2022-10-13 11:57:44,001 Node[0] Epoch[24] Batch [320-340]	Speed: 30605.50 samples/sec	accuracy=nan
2022-10-13 11:57:46,137 Node[0] Epoch[24] Batch [340-360]	Speed: 30562.21 samples/sec	accuracy=nan
2022-10-13 11:57:48,268 Node[0] Epoch[24] Batch [360-380]	Speed: 30635.41 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662269542, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 25}}
2022-10-13 11:57:49,542 Node[0] Epoch[24] Time cost=41.872
:::MLLOG {"namespace": "", "time_ms": 1665662269542, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30597.23185995169}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1665662269542, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30597.23185995169, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662269542, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 26}}
2022-10-13 11:57:51,788 Node[0] Epoch[25] Batch [0-20]	Speed: 30603.56 samples/sec	accuracy=nan
2022-10-13 11:57:53,919 Node[0] Epoch[25] Batch [20-40]	Speed: 30628.95 samples/sec	accuracy=nan
2022-10-13 11:57:56,052 Node[0] Epoch[25] Batch [40-60]	Speed: 30615.57 samples/sec	accuracy=nan
2022-10-13 11:57:58,179 Node[0] Epoch[25] Batch [60-80]	Speed: 30676.57 samples/sec	accuracy=nan
2022-10-13 11:58:00,311 Node[0] Epoch[25] Batch [80-100]	Speed: 30620.54 samples/sec	accuracy=nan
2022-10-13 11:58:02,441 Node[0] Epoch[25] Batch [100-120]	Speed: 30657.17 samples/sec	accuracy=nan
2022-10-13 11:58:04,578 Node[0] Epoch[25] Batch [120-140]	Speed: 30542.82 samples/sec	accuracy=nan
2022-10-13 11:58:06,711 Node[0] Epoch[25] Batch [140-160]	Speed: 30606.11 samples/sec	accuracy=nan
2022-10-13 11:58:08,840 Node[0] Epoch[25] Batch [160-180]	Speed: 30664.91 samples/sec	accuracy=nan
2022-10-13 11:58:10,972 Node[0] Epoch[25] Batch [180-200]	Speed: 30620.47 samples/sec	accuracy=nan
2022-10-13 11:58:13,102 Node[0] Epoch[25] Batch [200-220]	Speed: 30645.04 samples/sec	accuracy=nan
2022-10-13 11:58:15,233 Node[0] Epoch[25] Batch [220-240]	Speed: 30629.40 samples/sec	accuracy=nan
2022-10-13 11:58:17,369 Node[0] Epoch[25] Batch [240-260]	Speed: 30562.73 samples/sec	accuracy=nan
2022-10-13 11:58:19,499 Node[0] Epoch[25] Batch [260-280]	Speed: 30646.40 samples/sec	accuracy=nan
2022-10-13 11:58:21,634 Node[0] Epoch[25] Batch [280-300]	Speed: 30573.03 samples/sec	accuracy=nan
2022-10-13 11:58:23,769 Node[0] Epoch[25] Batch [300-320]	Speed: 30575.10 samples/sec	accuracy=nan
2022-10-13 11:58:25,897 Node[0] Epoch[25] Batch [320-340]	Speed: 30678.91 samples/sec	accuracy=nan
2022-10-13 11:58:28,029 Node[0] Epoch[25] Batch [340-360]	Speed: 30628.73 samples/sec	accuracy=nan
2022-10-13 11:58:30,163 Node[0] Epoch[25] Batch [360-380]	Speed: 30586.00 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662311438, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 26}}
2022-10-13 11:58:31,438 Node[0] Epoch[25] Time cost=41.895
:::MLLOG {"namespace": "", "time_ms": 1665662311438, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30580.068429102288}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1665662311438, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30580.068429102288, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662311438, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 27}}
2022-10-13 11:58:33,689 Node[0] Epoch[26] Batch [0-20]	Speed: 30623.01 samples/sec	accuracy=nan
2022-10-13 11:58:35,818 Node[0] Epoch[26] Batch [20-40]	Speed: 30665.38 samples/sec	accuracy=nan
2022-10-13 11:58:37,949 Node[0] Epoch[26] Batch [40-60]	Speed: 30623.19 samples/sec	accuracy=nan
2022-10-13 11:58:40,076 Node[0] Epoch[26] Batch [60-80]	Speed: 30691.02 samples/sec	accuracy=nan
2022-10-13 11:58:42,209 Node[0] Epoch[26] Batch [80-100]	Speed: 30606.17 samples/sec	accuracy=nan
2022-10-13 11:58:44,340 Node[0] Epoch[26] Batch [100-120]	Speed: 30641.84 samples/sec	accuracy=nan
2022-10-13 11:58:46,473 Node[0] Epoch[26] Batch [120-140]	Speed: 30603.31 samples/sec	accuracy=nan
2022-10-13 11:58:48,611 Node[0] Epoch[26] Batch [140-160]	Speed: 30527.14 samples/sec	accuracy=nan
2022-10-13 11:58:50,739 Node[0] Epoch[26] Batch [160-180]	Speed: 30676.98 samples/sec	accuracy=nan
2022-10-13 11:58:52,870 Node[0] Epoch[26] Batch [180-200]	Speed: 30639.08 samples/sec	accuracy=nan
2022-10-13 11:58:55,002 Node[0] Epoch[26] Batch [200-220]	Speed: 30616.27 samples/sec	accuracy=nan
2022-10-13 11:58:57,130 Node[0] Epoch[26] Batch [220-240]	Speed: 30677.68 samples/sec	accuracy=nan
2022-10-13 11:58:59,267 Node[0] Epoch[26] Batch [240-260]	Speed: 30552.07 samples/sec	accuracy=nan
2022-10-13 11:59:01,395 Node[0] Epoch[26] Batch [260-280]	Speed: 30668.60 samples/sec	accuracy=nan
2022-10-13 11:59:03,532 Node[0] Epoch[26] Batch [280-300]	Speed: 30558.57 samples/sec	accuracy=nan
2022-10-13 11:59:05,665 Node[0] Epoch[26] Batch [300-320]	Speed: 30596.87 samples/sec	accuracy=nan
2022-10-13 11:59:07,795 Node[0] Epoch[26] Batch [320-340]	Speed: 30641.24 samples/sec	accuracy=nan
2022-10-13 11:59:09,934 Node[0] Epoch[26] Batch [340-360]	Speed: 30531.59 samples/sec	accuracy=nan
2022-10-13 11:59:12,068 Node[0] Epoch[26] Batch [360-380]	Speed: 30584.03 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662353346, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 27}}
2022-10-13 11:59:13,346 Node[0] Epoch[26] Time cost=41.908
:::MLLOG {"namespace": "", "time_ms": 1665662353346, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30570.934853507664}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1665662353346, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30570.934853507664, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662353446, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 27}}
2022-10-13 11:59:14,187 Node[0] Epoch[26] Validation-accuracy=0.724916
2022-10-13 11:59:14,187 Node[0] Epoch[26] Validation-correct-count=1510.000000
2022-10-13 11:59:14,187 Node[0] Epoch[26] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1665662354257, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1665662354258, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.72754, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1665662354258, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1665662354258, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 28, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665662354258, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 28}}
2022-10-13 11:59:16,554 Node[0] Epoch[27] Batch [0-20]	Speed: 28700.85 samples/sec	accuracy=nan
2022-10-13 11:59:18,687 Node[0] Epoch[27] Batch [20-40]	Speed: 30597.76 samples/sec	accuracy=nan
2022-10-13 11:59:20,822 Node[0] Epoch[27] Batch [40-60]	Speed: 30577.82 samples/sec	accuracy=nan
2022-10-13 11:59:22,950 Node[0] Epoch[27] Batch [60-80]	Speed: 30675.01 samples/sec	accuracy=nan
2022-10-13 11:59:25,080 Node[0] Epoch[27] Batch [80-100]	Speed: 30647.48 samples/sec	accuracy=nan
2022-10-13 11:59:27,210 Node[0] Epoch[27] Batch [100-120]	Speed: 30646.56 samples/sec	accuracy=nan
2022-10-13 11:59:29,341 Node[0] Epoch[27] Batch [120-140]	Speed: 30628.81 samples/sec	accuracy=nan
2022-10-13 11:59:31,471 Node[0] Epoch[27] Batch [140-160]	Speed: 30651.31 samples/sec	accuracy=nan
2022-10-13 11:59:33,600 Node[0] Epoch[27] Batch [160-180]	Speed: 30659.45 samples/sec	accuracy=nan
2022-10-13 11:59:35,730 Node[0] Epoch[27] Batch [180-200]	Speed: 30648.83 samples/sec	accuracy=nan
2022-10-13 11:59:37,861 Node[0] Epoch[27] Batch [200-220]	Speed: 30638.68 samples/sec	accuracy=nan
2022-10-13 11:59:39,993 Node[0] Epoch[27] Batch [220-240]	Speed: 30625.90 samples/sec	accuracy=nan
2022-10-13 11:59:42,123 Node[0] Epoch[27] Batch [240-260]	Speed: 30638.36 samples/sec	accuracy=nan
2022-10-13 11:59:44,256 Node[0] Epoch[27] Batch [260-280]	Speed: 30603.58 samples/sec	accuracy=nan
2022-10-13 11:59:46,383 Node[0] Epoch[27] Batch [280-300]	Speed: 30694.77 samples/sec	accuracy=nan
2022-10-13 11:59:48,513 Node[0] Epoch[27] Batch [300-320]	Speed: 30649.76 samples/sec	accuracy=nan
2022-10-13 11:59:50,640 Node[0] Epoch[27] Batch [320-340]	Speed: 30692.29 samples/sec	accuracy=nan
2022-10-13 11:59:52,773 Node[0] Epoch[27] Batch [340-360]	Speed: 30608.56 samples/sec	accuracy=nan
2022-10-13 11:59:54,903 Node[0] Epoch[27] Batch [360-380]	Speed: 30645.86 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662396182, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 28}}
2022-10-13 11:59:56,183 Node[0] Epoch[27] Time cost=41.925
:::MLLOG {"namespace": "", "time_ms": 1665662396183, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30558.81615477208}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1665662396183, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30558.81615477208, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662396183, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 29}}
2022-10-13 11:59:58,422 Node[0] Epoch[28] Batch [0-20]	Speed: 30657.13 samples/sec	accuracy=nan
2022-10-13 12:00:00,549 Node[0] Epoch[28] Batch [20-40]	Speed: 30698.59 samples/sec	accuracy=nan
2022-10-13 12:00:02,677 Node[0] Epoch[28] Batch [40-60]	Speed: 30670.00 samples/sec	accuracy=nan
2022-10-13 12:00:04,810 Node[0] Epoch[28] Batch [60-80]	Speed: 30612.79 samples/sec	accuracy=nan
2022-10-13 12:00:06,945 Node[0] Epoch[28] Batch [80-100]	Speed: 30574.15 samples/sec	accuracy=nan
2022-10-13 12:00:09,072 Node[0] Epoch[28] Batch [100-120]	Speed: 30694.62 samples/sec	accuracy=nan
2022-10-13 12:00:11,209 Node[0] Epoch[28] Batch [120-140]	Speed: 30544.90 samples/sec	accuracy=nan
2022-10-13 12:00:13,338 Node[0] Epoch[28] Batch [140-160]	Speed: 30658.29 samples/sec	accuracy=nan
2022-10-13 12:00:15,466 Node[0] Epoch[28] Batch [160-180]	Speed: 30677.70 samples/sec	accuracy=nan
2022-10-13 12:00:17,591 Node[0] Epoch[28] Batch [180-200]	Speed: 30724.37 samples/sec	accuracy=nan
2022-10-13 12:00:19,722 Node[0] Epoch[28] Batch [200-220]	Speed: 30632.62 samples/sec	accuracy=nan
2022-10-13 12:00:21,850 Node[0] Epoch[28] Batch [220-240]	Speed: 30668.20 samples/sec	accuracy=nan
2022-10-13 12:00:23,980 Node[0] Epoch[28] Batch [240-260]	Speed: 30655.95 samples/sec	accuracy=nan
2022-10-13 12:00:26,108 Node[0] Epoch[28] Batch [260-280]	Speed: 30673.23 samples/sec	accuracy=nan
2022-10-13 12:00:28,242 Node[0] Epoch[28] Batch [280-300]	Speed: 30587.68 samples/sec	accuracy=nan
2022-10-13 12:00:30,366 Node[0] Epoch[28] Batch [300-320]	Speed: 30736.48 samples/sec	accuracy=nan
2022-10-13 12:00:32,500 Node[0] Epoch[28] Batch [320-340]	Speed: 30587.72 samples/sec	accuracy=nan
2022-10-13 12:00:34,629 Node[0] Epoch[28] Batch [340-360]	Speed: 30673.45 samples/sec	accuracy=nan
2022-10-13 12:00:36,763 Node[0] Epoch[28] Batch [360-380]	Speed: 30589.03 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662438042, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 29}}
2022-10-13 12:00:38,042 Node[0] Epoch[28] Time cost=41.859
:::MLLOG {"namespace": "", "time_ms": 1665662438042, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30606.9276749183}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1665662438042, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30606.9276749183, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662438042, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 30}}
2022-10-13 12:00:40,288 Node[0] Epoch[29] Batch [0-20]	Speed: 30606.34 samples/sec	accuracy=nan
2022-10-13 12:00:42,419 Node[0] Epoch[29] Batch [20-40]	Speed: 30627.13 samples/sec	accuracy=nan
2022-10-13 12:00:44,556 Node[0] Epoch[29] Batch [40-60]	Speed: 30555.72 samples/sec	accuracy=nan
2022-10-13 12:00:46,681 Node[0] Epoch[29] Batch [60-80]	Speed: 30705.22 samples/sec	accuracy=nan
2022-10-13 12:00:48,809 Node[0] Epoch[29] Batch [80-100]	Speed: 30685.13 samples/sec	accuracy=nan
2022-10-13 12:00:50,939 Node[0] Epoch[29] Batch [100-120]	Speed: 30647.92 samples/sec	accuracy=nan
2022-10-13 12:00:53,073 Node[0] Epoch[29] Batch [120-140]	Speed: 30585.73 samples/sec	accuracy=nan
2022-10-13 12:00:55,204 Node[0] Epoch[29] Batch [140-160]	Speed: 30644.10 samples/sec	accuracy=nan
2022-10-13 12:00:57,338 Node[0] Epoch[29] Batch [160-180]	Speed: 30581.08 samples/sec	accuracy=nan
2022-10-13 12:00:59,472 Node[0] Epoch[29] Batch [180-200]	Speed: 30586.47 samples/sec	accuracy=nan
2022-10-13 12:01:01,604 Node[0] Epoch[29] Batch [200-220]	Speed: 30618.60 samples/sec	accuracy=nan
2022-10-13 12:01:03,732 Node[0] Epoch[29] Batch [220-240]	Speed: 30688.89 samples/sec	accuracy=nan
2022-10-13 12:01:05,865 Node[0] Epoch[29] Batch [240-260]	Speed: 30595.36 samples/sec	accuracy=nan
2022-10-13 12:01:07,993 Node[0] Epoch[29] Batch [260-280]	Speed: 30673.48 samples/sec	accuracy=nan
2022-10-13 12:01:10,124 Node[0] Epoch[29] Batch [280-300]	Speed: 30632.98 samples/sec	accuracy=nan
2022-10-13 12:01:12,256 Node[0] Epoch[29] Batch [300-320]	Speed: 30630.72 samples/sec	accuracy=nan
2022-10-13 12:01:14,388 Node[0] Epoch[29] Batch [320-340]	Speed: 30608.38 samples/sec	accuracy=nan
2022-10-13 12:01:16,522 Node[0] Epoch[29] Batch [340-360]	Speed: 30600.15 samples/sec	accuracy=nan
2022-10-13 12:01:18,665 Node[0] Epoch[29] Batch [360-380]	Speed: 30460.95 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662479942, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 30}}
2022-10-13 12:01:19,942 Node[0] Epoch[29] Time cost=41.900
:::MLLOG {"namespace": "", "time_ms": 1665662479943, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30576.805637385645}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1665662479943, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30576.805637385645, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662479943, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 31}}
2022-10-13 12:01:22,190 Node[0] Epoch[30] Batch [0-20]	Speed: 30588.80 samples/sec	accuracy=nan
2022-10-13 12:01:24,321 Node[0] Epoch[30] Batch [20-40]	Speed: 30624.08 samples/sec	accuracy=nan
2022-10-13 12:01:26,454 Node[0] Epoch[30] Batch [40-60]	Speed: 30607.42 samples/sec	accuracy=nan
2022-10-13 12:01:28,582 Node[0] Epoch[30] Batch [60-80]	Speed: 30673.24 samples/sec	accuracy=nan
2022-10-13 12:01:30,713 Node[0] Epoch[30] Batch [80-100]	Speed: 30633.58 samples/sec	accuracy=nan
2022-10-13 12:01:32,839 Node[0] Epoch[30] Batch [100-120]	Speed: 30715.39 samples/sec	accuracy=nan
2022-10-13 12:01:34,972 Node[0] Epoch[30] Batch [120-140]	Speed: 30606.88 samples/sec	accuracy=nan
2022-10-13 12:01:37,107 Node[0] Epoch[30] Batch [140-160]	Speed: 30568.91 samples/sec	accuracy=nan
2022-10-13 12:01:39,241 Node[0] Epoch[30] Batch [160-180]	Speed: 30591.86 samples/sec	accuracy=nan
2022-10-13 12:01:41,373 Node[0] Epoch[30] Batch [180-200]	Speed: 30620.08 samples/sec	accuracy=nan
2022-10-13 12:01:43,503 Node[0] Epoch[30] Batch [200-220]	Speed: 30640.60 samples/sec	accuracy=nan
2022-10-13 12:01:45,633 Node[0] Epoch[30] Batch [220-240]	Speed: 30654.94 samples/sec	accuracy=nan
2022-10-13 12:01:47,760 Node[0] Epoch[30] Batch [240-260]	Speed: 30692.53 samples/sec	accuracy=nan
2022-10-13 12:01:49,895 Node[0] Epoch[30] Batch [260-280]	Speed: 30572.28 samples/sec	accuracy=nan
2022-10-13 12:01:52,023 Node[0] Epoch[30] Batch [280-300]	Speed: 30672.52 samples/sec	accuracy=nan
2022-10-13 12:01:54,153 Node[0] Epoch[30] Batch [300-320]	Speed: 30659.11 samples/sec	accuracy=nan
2022-10-13 12:01:56,284 Node[0] Epoch[30] Batch [320-340]	Speed: 30630.14 samples/sec	accuracy=nan
2022-10-13 12:01:58,314 Node[0] Epoch[30] Batch [340-360]	Speed: 32148.89 samples/sec	accuracy=nan
2022-10-13 12:02:00,546 Node[0] Epoch[30] Batch [360-380]	Speed: 29249.05 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662521822, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 31}}
2022-10-13 12:02:01,822 Node[0] Epoch[30] Time cost=41.879
:::MLLOG {"namespace": "", "time_ms": 1665662521822, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30592.39923102323}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1665662521822, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30592.39923102323, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662521923, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 31}}
2022-10-13 12:02:02,716 Node[0] Epoch[30] Validation-accuracy=0.749880
2022-10-13 12:02:02,716 Node[0] Epoch[30] Validation-correct-count=1562.000000
2022-10-13 12:02:02,716 Node[0] Epoch[30] Validation-total-count=2083.000000
:::MLLOG {"namespace": "", "time_ms": 1665662522743, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1665662522744, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.75348, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1665662522744, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1665662522744, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1075, "first_epoch_num": 32, "epoch_count": 4}}
:::MLLOG {"namespace": "", "time_ms": 1665662522744, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 32}}
2022-10-13 12:02:05,016 Node[0] Epoch[31] Batch [0-20]	Speed: 29079.25 samples/sec	accuracy=nan
2022-10-13 12:02:07,149 Node[0] Epoch[31] Batch [20-40]	Speed: 30608.50 samples/sec	accuracy=nan
2022-10-13 12:02:09,276 Node[0] Epoch[31] Batch [40-60]	Speed: 30684.21 samples/sec	accuracy=nan
2022-10-13 12:02:11,407 Node[0] Epoch[31] Batch [60-80]	Speed: 30638.73 samples/sec	accuracy=nan
2022-10-13 12:02:13,536 Node[0] Epoch[31] Batch [80-100]	Speed: 30661.74 samples/sec	accuracy=nan
2022-10-13 12:02:15,669 Node[0] Epoch[31] Batch [100-120]	Speed: 30600.71 samples/sec	accuracy=nan
2022-10-13 12:02:17,799 Node[0] Epoch[31] Batch [120-140]	Speed: 30649.19 samples/sec	accuracy=nan
2022-10-13 12:02:19,929 Node[0] Epoch[31] Batch [140-160]	Speed: 30651.67 samples/sec	accuracy=nan
2022-10-13 12:02:22,056 Node[0] Epoch[31] Batch [160-180]	Speed: 30681.33 samples/sec	accuracy=nan
2022-10-13 12:02:24,183 Node[0] Epoch[31] Batch [180-200]	Speed: 30689.38 samples/sec	accuracy=nan
2022-10-13 12:02:26,319 Node[0] Epoch[31] Batch [200-220]	Speed: 30569.56 samples/sec	accuracy=nan
2022-10-13 12:02:28,446 Node[0] Epoch[31] Batch [220-240]	Speed: 30693.77 samples/sec	accuracy=nan
2022-10-13 12:02:30,574 Node[0] Epoch[31] Batch [240-260]	Speed: 30671.19 samples/sec	accuracy=nan
2022-10-13 12:02:32,704 Node[0] Epoch[31] Batch [260-280]	Speed: 30655.58 samples/sec	accuracy=nan
2022-10-13 12:02:34,836 Node[0] Epoch[31] Batch [280-300]	Speed: 30615.98 samples/sec	accuracy=nan
2022-10-13 12:02:36,968 Node[0] Epoch[31] Batch [300-320]	Speed: 30620.67 samples/sec	accuracy=nan
2022-10-13 12:02:39,096 Node[0] Epoch[31] Batch [320-340]	Speed: 30664.83 samples/sec	accuracy=nan
2022-10-13 12:02:41,230 Node[0] Epoch[31] Batch [340-360]	Speed: 30595.65 samples/sec	accuracy=nan
2022-10-13 12:02:43,367 Node[0] Epoch[31] Batch [360-380]	Speed: 30550.92 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662564648, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 32}}
2022-10-13 12:02:44,648 Node[0] Epoch[31] Time cost=41.903
:::MLLOG {"namespace": "", "time_ms": 1665662564648, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30574.389313018273}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1665662564648, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30574.389313018273, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662564648, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 33}}
2022-10-13 12:02:46,897 Node[0] Epoch[32] Batch [0-20]	Speed: 30562.15 samples/sec	accuracy=nan
2022-10-13 12:02:49,025 Node[0] Epoch[32] Batch [20-40]	Speed: 30669.57 samples/sec	accuracy=nan
2022-10-13 12:02:51,158 Node[0] Epoch[32] Batch [40-60]	Speed: 30603.44 samples/sec	accuracy=nan
2022-10-13 12:02:53,288 Node[0] Epoch[32] Batch [60-80]	Speed: 30650.67 samples/sec	accuracy=nan
2022-10-13 12:02:55,420 Node[0] Epoch[32] Batch [80-100]	Speed: 30614.66 samples/sec	accuracy=nan
2022-10-13 12:02:57,551 Node[0] Epoch[32] Batch [100-120]	Speed: 30635.41 samples/sec	accuracy=nan
2022-10-13 12:02:59,483 Node[0] Epoch[32] Batch [120-140]	Speed: 33789.15 samples/sec	accuracy=nan
2022-10-13 12:03:01,818 Node[0] Epoch[32] Batch [140-160]	Speed: 27958.51 samples/sec	accuracy=nan
2022-10-13 12:03:03,949 Node[0] Epoch[32] Batch [160-180]	Speed: 30628.34 samples/sec	accuracy=nan
2022-10-13 12:03:06,081 Node[0] Epoch[32] Batch [180-200]	Speed: 30624.18 samples/sec	accuracy=nan
2022-10-13 12:03:08,210 Node[0] Epoch[32] Batch [200-220]	Speed: 30659.43 samples/sec	accuracy=nan
2022-10-13 12:03:10,343 Node[0] Epoch[32] Batch [220-240]	Speed: 30608.34 samples/sec	accuracy=nan
2022-10-13 12:03:12,476 Node[0] Epoch[32] Batch [240-260]	Speed: 30604.42 samples/sec	accuracy=nan
2022-10-13 12:03:14,612 Node[0] Epoch[32] Batch [260-280]	Speed: 30566.36 samples/sec	accuracy=nan
2022-10-13 12:03:16,648 Node[0] Epoch[32] Batch [280-300]	Speed: 32059.14 samples/sec	accuracy=nan
2022-10-13 12:03:18,870 Node[0] Epoch[32] Batch [300-320]	Speed: 29377.84 samples/sec	accuracy=nan
2022-10-13 12:03:21,005 Node[0] Epoch[32] Batch [320-340]	Speed: 30574.64 samples/sec	accuracy=nan
2022-10-13 12:03:23,138 Node[0] Epoch[32] Batch [340-360]	Speed: 30600.96 samples/sec	accuracy=nan
2022-10-13 12:03:25,269 Node[0] Epoch[32] Batch [360-380]	Speed: 30639.22 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662606545, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 33}}
2022-10-13 12:03:26,545 Node[0] Epoch[32] Time cost=41.897
:::MLLOG {"namespace": "", "time_ms": 1665662606545, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30578.810107222707}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1665662606546, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30578.810107222707, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662606546, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 34}}
2022-10-13 12:03:28,793 Node[0] Epoch[33] Batch [0-20]	Speed: 30607.58 samples/sec	accuracy=nan
2022-10-13 12:03:30,927 Node[0] Epoch[33] Batch [20-40]	Speed: 30589.12 samples/sec	accuracy=nan
2022-10-13 12:03:33,055 Node[0] Epoch[33] Batch [40-60]	Speed: 30682.35 samples/sec	accuracy=nan
2022-10-13 12:03:35,183 Node[0] Epoch[33] Batch [60-80]	Speed: 30672.09 samples/sec	accuracy=nan
2022-10-13 12:03:37,311 Node[0] Epoch[33] Batch [80-100]	Speed: 30687.90 samples/sec	accuracy=nan
2022-10-13 12:03:39,442 Node[0] Epoch[33] Batch [100-120]	Speed: 30630.56 samples/sec	accuracy=nan
2022-10-13 12:03:41,574 Node[0] Epoch[33] Batch [120-140]	Speed: 30620.16 samples/sec	accuracy=nan
2022-10-13 12:03:43,703 Node[0] Epoch[33] Batch [140-160]	Speed: 30661.20 samples/sec	accuracy=nan
2022-10-13 12:03:45,834 Node[0] Epoch[33] Batch [160-180]	Speed: 30634.68 samples/sec	accuracy=nan
2022-10-13 12:03:47,968 Node[0] Epoch[33] Batch [180-200]	Speed: 30592.55 samples/sec	accuracy=nan
2022-10-13 12:03:50,095 Node[0] Epoch[33] Batch [200-220]	Speed: 30690.04 samples/sec	accuracy=nan
2022-10-13 12:03:52,228 Node[0] Epoch[33] Batch [220-240]	Speed: 30600.46 samples/sec	accuracy=nan
2022-10-13 12:03:54,361 Node[0] Epoch[33] Batch [240-260]	Speed: 30602.38 samples/sec	accuracy=nan
2022-10-13 12:03:56,494 Node[0] Epoch[33] Batch [260-280]	Speed: 30608.00 samples/sec	accuracy=nan
2022-10-13 12:03:58,625 Node[0] Epoch[33] Batch [280-300]	Speed: 30627.97 samples/sec	accuracy=nan
2022-10-13 12:04:00,657 Node[0] Epoch[33] Batch [300-320]	Speed: 32124.20 samples/sec	accuracy=nan
2022-10-13 12:04:02,884 Node[0] Epoch[33] Batch [320-340]	Speed: 29315.23 samples/sec	accuracy=nan
2022-10-13 12:04:05,016 Node[0] Epoch[33] Batch [340-360]	Speed: 30617.38 samples/sec	accuracy=nan
2022-10-13 12:04:07,143 Node[0] Epoch[33] Batch [360-380]	Speed: 30695.74 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662648421, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 34}}
2022-10-13 12:04:08,421 Node[0] Epoch[33] Time cost=41.875
:::MLLOG {"namespace": "", "time_ms": 1665662648421, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30595.006183977577}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1665662648421, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30595.006183977577, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662648421, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 915, "epoch_num": 35}}
2022-10-13 12:04:10,660 Node[0] Epoch[34] Batch [0-20]	Speed: 30660.72 samples/sec	accuracy=nan
2022-10-13 12:04:12,795 Node[0] Epoch[34] Batch [20-40]	Speed: 30574.76 samples/sec	accuracy=nan
2022-10-13 12:04:14,918 Node[0] Epoch[34] Batch [40-60]	Speed: 30753.80 samples/sec	accuracy=nan
2022-10-13 12:04:17,047 Node[0] Epoch[34] Batch [60-80]	Speed: 30665.00 samples/sec	accuracy=nan
2022-10-13 12:04:19,176 Node[0] Epoch[34] Batch [80-100]	Speed: 30657.09 samples/sec	accuracy=nan
2022-10-13 12:04:21,310 Node[0] Epoch[34] Batch [100-120]	Speed: 30584.94 samples/sec	accuracy=nan
2022-10-13 12:04:23,348 Node[0] Epoch[34] Batch [120-140]	Speed: 32041.06 samples/sec	accuracy=nan
2022-10-13 12:04:25,578 Node[0] Epoch[34] Batch [140-160]	Speed: 29267.92 samples/sec	accuracy=nan
2022-10-13 12:04:27,710 Node[0] Epoch[34] Batch [160-180]	Speed: 30622.45 samples/sec	accuracy=nan
2022-10-13 12:04:29,841 Node[0] Epoch[34] Batch [180-200]	Speed: 30627.25 samples/sec	accuracy=nan
2022-10-13 12:04:31,976 Node[0] Epoch[34] Batch [200-220]	Speed: 30578.46 samples/sec	accuracy=nan
2022-10-13 12:04:34,104 Node[0] Epoch[34] Batch [220-240]	Speed: 30684.25 samples/sec	accuracy=nan
2022-10-13 12:04:36,236 Node[0] Epoch[34] Batch [240-260]	Speed: 30613.87 samples/sec	accuracy=nan
2022-10-13 12:04:38,366 Node[0] Epoch[34] Batch [260-280]	Speed: 30654.89 samples/sec	accuracy=nan
2022-10-13 12:04:40,498 Node[0] Epoch[34] Batch [280-300]	Speed: 30619.12 samples/sec	accuracy=nan
2022-10-13 12:04:42,627 Node[0] Epoch[34] Batch [300-320]	Speed: 30656.63 samples/sec	accuracy=nan
2022-10-13 12:04:44,755 Node[0] Epoch[34] Batch [320-340]	Speed: 30674.62 samples/sec	accuracy=nan
2022-10-13 12:04:46,883 Node[0] Epoch[34] Batch [340-360]	Speed: 30676.41 samples/sec	accuracy=nan
2022-10-13 12:04:49,014 Node[0] Epoch[34] Batch [360-380]	Speed: 30633.18 samples/sec	accuracy=nan
:::MLLOG {"namespace": "", "time_ms": 1665662690287, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 988, "epoch_num": 35}}
2022-10-13 12:04:50,287 Node[0] Epoch[34] Time cost=41.866
:::MLLOG {"namespace": "", "time_ms": 1665662690287, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"imgs_sec": 30601.909517503635}, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1004, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1665662690287, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 30601.909517503635, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1007}}
:::MLLOG {"namespace": "", "time_ms": 1665662690388, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1027, "epoch_num": 35}}
2022-10-13 12:04:51,160 Node[0] Epoch[34] Validation-accuracy=0.761996
2022-10-13 12:04:51,160 Node[0] Epoch[34] Validation-correct-count=1588.000000
2022-10-13 12:04:51,160 Node[0] Epoch[34] Validation-total-count=2084.000000
:::MLLOG {"namespace": "", "time_ms": 1665662691216, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1050, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1665662691216, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.7608, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1056, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1665662691217, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1059, "first_epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1665662691217, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/image_classification/common/fit.py", "lineno": 1063, "status": "success"}}
ENDING TIMING RUN AT 2022-10-13 12:05:35 PM
RESULT,IMAGE_CLASSIFICATION,,1601,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:37 PM
RESULT,IMAGE_CLASSIFICATION,,1603,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:38 PM
RESULT,IMAGE_CLASSIFICATION,,1604,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:38 PM
RESULT,IMAGE_CLASSIFICATION,,1604,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:38 PM
RESULT,IMAGE_CLASSIFICATION,,1604,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:38 PM
RESULT,IMAGE_CLASSIFICATION,,1604,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:38 PM
RESULT,IMAGE_CLASSIFICATION,,1604,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:39 PM
RESULT,IMAGE_CLASSIFICATION,,1605,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:39 PM
RESULT,IMAGE_CLASSIFICATION,,1605,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:39 PM
RESULT,IMAGE_CLASSIFICATION,,1605,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:39 PM
RESULT,IMAGE_CLASSIFICATION,,1605,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:40 PM
RESULT,IMAGE_CLASSIFICATION,,1606,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:40 PM
RESULT,IMAGE_CLASSIFICATION,,1606,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:40 PM
RESULT,IMAGE_CLASSIFICATION,,1606,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:40 PM
RESULT,IMAGE_CLASSIFICATION,,1606,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:42 PM
RESULT,IMAGE_CLASSIFICATION,,1608,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:42 PM
RESULT,IMAGE_CLASSIFICATION,,1608,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:42 PM
RESULT,IMAGE_CLASSIFICATION,,1608,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:43 PM
RESULT,IMAGE_CLASSIFICATION,,1609,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:43 PM
RESULT,IMAGE_CLASSIFICATION,,1609,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:43 PM
RESULT,IMAGE_CLASSIFICATION,,1609,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:43 PM
RESULT,IMAGE_CLASSIFICATION,,1609,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:43 PM
RESULT,IMAGE_CLASSIFICATION,,1609,,2022-10-13 11:38:54 AM
ENDING TIMING RUN AT 2022-10-13 12:05:44 PM
RESULT,IMAGE_CLASSIFICATION,,1610,,2022-10-13 11:38:54 AM
